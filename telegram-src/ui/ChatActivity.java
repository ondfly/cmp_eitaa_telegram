package org.telegram.ui;

import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.AnimatorSet;
import android.animation.ObjectAnimator;
import android.annotation.TargetApi;
import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.DatePickerDialog.OnDateSetListener;
import android.app.Dialog;
import android.content.ClipData;
import android.content.ClipData.Item;
import android.content.ClipboardManager;
import android.content.ContentResolver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.DialogInterface.OnShowListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Path.Direction;
import android.graphics.Point;
import android.graphics.PorterDuff.Mode;
import android.graphics.PorterDuffColorFilter;
import android.graphics.PorterDuffXfermode;
import android.graphics.drawable.Drawable;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.provider.ContactsContract.Contacts;
import android.support.v4.content.FileProvider;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.TextUtils.TruncateAt;
import android.text.style.CharacterStyle;
import android.text.style.ClickableSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.URLSpan;
import android.util.LongSparseArray;
import android.util.SparseArray;
import android.util.SparseBooleanArray;
import android.util.SparseIntArray;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.TextureView;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewOutlineProvider;
import android.view.ViewParent;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnPreDrawListener;
import android.view.animation.DecelerateInterpolator;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import java.io.File;
import java.net.URLDecoder;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.CountDownLatch;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.telegram.PhoneFormat.PhoneFormat;
import org.telegram.messenger.AndroidUtilities;
import org.telegram.messenger.ApplicationLoader;
import org.telegram.messenger.BuildVars;
import org.telegram.messenger.ChatObject;
import org.telegram.messenger.ContactsController;
import org.telegram.messenger.DataQuery;
import org.telegram.messenger.DispatchQueue;
import org.telegram.messenger.DownloadController;
import org.telegram.messenger.Emoji;
import org.telegram.messenger.EmojiSuggestion;
import org.telegram.messenger.FileLoader;
import org.telegram.messenger.FileLog;
import org.telegram.messenger.ImageReceiver;
import org.telegram.messenger.ImageReceiver.BitmapHolder;
import org.telegram.messenger.LocaleController;
import org.telegram.messenger.MediaController;
import org.telegram.messenger.MediaController.PhotoEntry;
import org.telegram.messenger.MessageObject;
import org.telegram.messenger.MessageObject.GroupedMessagePosition;
import org.telegram.messenger.MessageObject.GroupedMessages;
import org.telegram.messenger.MessagesController;
import org.telegram.messenger.MessagesStorage;
import org.telegram.messenger.MessagesStorage.IntCallback;
import org.telegram.messenger.NotificationCenter;
import org.telegram.messenger.NotificationCenter.NotificationCenterDelegate;
import org.telegram.messenger.NotificationsController;
import org.telegram.messenger.SendMessagesHelper;
import org.telegram.messenger.SendMessagesHelper.SendingMediaInfo;
import org.telegram.messenger.SharedConfig;
import org.telegram.messenger.UserConfig;
import org.telegram.messenger.UserObject;
import org.telegram.messenger.Utilities;
import org.telegram.messenger.VideoEditedInfo;
import org.telegram.messenger.browser.Browser;
import org.telegram.messenger.exoplayer2.ui.AspectRatioFrameLayout;
import org.telegram.messenger.support.SparseLongArray;
import org.telegram.messenger.support.widget.GridLayoutManager.SpanSizeLookup;
import org.telegram.messenger.support.widget.GridLayoutManagerFixed;
import org.telegram.messenger.support.widget.LinearLayoutManager;
import org.telegram.messenger.support.widget.LinearSmoothScrollerMiddle;
import org.telegram.messenger.support.widget.RecyclerView;
import org.telegram.messenger.support.widget.RecyclerView.Adapter;
import org.telegram.messenger.support.widget.RecyclerView.ItemDecoration;
import org.telegram.messenger.support.widget.RecyclerView.LayoutManager;
import org.telegram.messenger.support.widget.RecyclerView.LayoutParams;
import org.telegram.messenger.support.widget.RecyclerView.OnScrollListener;
import org.telegram.messenger.support.widget.RecyclerView.State;
import org.telegram.messenger.support.widget.RecyclerView.ViewHolder;
import org.telegram.tgnet.ConnectionsManager;
import org.telegram.tgnet.RequestDelegate;
import org.telegram.tgnet.TLObject;
import org.telegram.tgnet.TLRPC.BotInfo;
import org.telegram.tgnet.TLRPC.BotInlineResult;
import org.telegram.tgnet.TLRPC.Chat;
import org.telegram.tgnet.TLRPC.ChatFull;
import org.telegram.tgnet.TLRPC.ChatParticipant;
import org.telegram.tgnet.TLRPC.ChatParticipants;
import org.telegram.tgnet.TLRPC.Document;
import org.telegram.tgnet.TLRPC.DocumentAttribute;
import org.telegram.tgnet.TLRPC.DraftMessage;
import org.telegram.tgnet.TLRPC.EncryptedChat;
import org.telegram.tgnet.TLRPC.FileLocation;
import org.telegram.tgnet.TLRPC.InputStickerSet;
import org.telegram.tgnet.TLRPC.InputUser;
import org.telegram.tgnet.TLRPC.KeyboardButton;
import org.telegram.tgnet.TLRPC.Message;
import org.telegram.tgnet.TLRPC.MessageAction;
import org.telegram.tgnet.TLRPC.MessageEntity;
import org.telegram.tgnet.TLRPC.MessageFwdHeader;
import org.telegram.tgnet.TLRPC.MessageMedia;
import org.telegram.tgnet.TLRPC.Peer;
import org.telegram.tgnet.TLRPC.PhotoSize;
import org.telegram.tgnet.TLRPC.ReplyMarkup;
import org.telegram.tgnet.TLRPC.TL_botCommand;
import org.telegram.tgnet.TLRPC.TL_channelAdminRights;
import org.telegram.tgnet.TLRPC.TL_channelBannedRights;
import org.telegram.tgnet.TLRPC.TL_channelForbidden;
import org.telegram.tgnet.TLRPC.TL_channelFull;
import org.telegram.tgnet.TLRPC.TL_channelParticipantAdmin;
import org.telegram.tgnet.TLRPC.TL_channelParticipantCreator;
import org.telegram.tgnet.TLRPC.TL_channels_channelParticipant;
import org.telegram.tgnet.TLRPC.TL_channels_exportMessageLink;
import org.telegram.tgnet.TLRPC.TL_channels_getParticipant;
import org.telegram.tgnet.TLRPC.TL_channels_reportSpam;
import org.telegram.tgnet.TLRPC.TL_chatForbidden;
import org.telegram.tgnet.TLRPC.TL_chatFull;
import org.telegram.tgnet.TLRPC.TL_chatParticipantsForbidden;
import org.telegram.tgnet.TLRPC.TL_decryptedMessageActionSetMessageTTL;
import org.telegram.tgnet.TLRPC.TL_dialog;
import org.telegram.tgnet.TLRPC.TL_document;
import org.telegram.tgnet.TLRPC.TL_documentAttributeImageSize;
import org.telegram.tgnet.TLRPC.TL_documentAttributeVideo;
import org.telegram.tgnet.TLRPC.TL_documentEmpty;
import org.telegram.tgnet.TLRPC.TL_encryptedChat;
import org.telegram.tgnet.TLRPC.TL_encryptedChatDiscarded;
import org.telegram.tgnet.TLRPC.TL_encryptedChatRequested;
import org.telegram.tgnet.TLRPC.TL_encryptedChatWaiting;
import org.telegram.tgnet.TLRPC.TL_error;
import org.telegram.tgnet.TLRPC.TL_exportedMessageLink;
import org.telegram.tgnet.TLRPC.TL_fileLocationUnavailable;
import org.telegram.tgnet.TLRPC.TL_game;
import org.telegram.tgnet.TLRPC.TL_inlineBotSwitchPM;
import org.telegram.tgnet.TLRPC.TL_inputMessageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetID;
import org.telegram.tgnet.TLRPC.TL_inputStickerSetShortName;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonBuy;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonCallback;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonGame;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonRow;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonSwitchInline;
import org.telegram.tgnet.TLRPC.TL_keyboardButtonUrl;
import org.telegram.tgnet.TLRPC.TL_message;
import org.telegram.tgnet.TLRPC.TL_messageActionChatAddUser;
import org.telegram.tgnet.TLRPC.TL_messageActionChatDeleteUser;
import org.telegram.tgnet.TLRPC.TL_messageActionChatMigrateTo;
import org.telegram.tgnet.TLRPC.TL_messageActionEmpty;
import org.telegram.tgnet.TLRPC.TL_messageActionGameScore;
import org.telegram.tgnet.TLRPC.TL_messageActionPaymentSent;
import org.telegram.tgnet.TLRPC.TL_messageActionPhoneCall;
import org.telegram.tgnet.TLRPC.TL_messageActionPinMessage;
import org.telegram.tgnet.TLRPC.TL_messageEncryptedAction;
import org.telegram.tgnet.TLRPC.TL_messageEntityBold;
import org.telegram.tgnet.TLRPC.TL_messageEntityCode;
import org.telegram.tgnet.TLRPC.TL_messageEntityItalic;
import org.telegram.tgnet.TLRPC.TL_messageEntityMentionName;
import org.telegram.tgnet.TLRPC.TL_messageEntityPre;
import org.telegram.tgnet.TLRPC.TL_messageMediaGame;
import org.telegram.tgnet.TLRPC.TL_messageMediaPhoto;
import org.telegram.tgnet.TLRPC.TL_messageMediaWebPage;
import org.telegram.tgnet.TLRPC.TL_messages_getMessageEditData;
import org.telegram.tgnet.TLRPC.TL_messages_getUnreadMentions;
import org.telegram.tgnet.TLRPC.TL_messages_getWebPagePreview;
import org.telegram.tgnet.TLRPC.TL_messages_readMentions;
import org.telegram.tgnet.TLRPC.TL_peerNotifySettings;
import org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonBusy;
import org.telegram.tgnet.TLRPC.TL_phoneCallDiscardReasonMissed;
import org.telegram.tgnet.TLRPC.TL_photoEmpty;
import org.telegram.tgnet.TLRPC.TL_photoSizeEmpty;
import org.telegram.tgnet.TLRPC.TL_replyInlineMarkup;
import org.telegram.tgnet.TLRPC.TL_replyKeyboardForceReply;
import org.telegram.tgnet.TLRPC.TL_user;
import org.telegram.tgnet.TLRPC.TL_userFull;
import org.telegram.tgnet.TLRPC.TL_webPage;
import org.telegram.tgnet.TLRPC.TL_webPageEmpty;
import org.telegram.tgnet.TLRPC.TL_webPagePending;
import org.telegram.tgnet.TLRPC.TL_webPageUrlPending;
import org.telegram.tgnet.TLRPC.User;
import org.telegram.tgnet.TLRPC.WebDocument;
import org.telegram.tgnet.TLRPC.WebPage;
import org.telegram.tgnet.TLRPC.messages_Messages;
import org.telegram.ui.ActionBar.ActionBar;
import org.telegram.ui.ActionBar.ActionBar.ActionBarMenuOnItemClick;
import org.telegram.ui.ActionBar.ActionBarLayout;
import org.telegram.ui.ActionBar.ActionBarMenu;
import org.telegram.ui.ActionBar.ActionBarMenuItem;
import org.telegram.ui.ActionBar.ActionBarMenuItem.ActionBarMenuItemSearchListener;
import org.telegram.ui.ActionBar.AlertDialog;
import org.telegram.ui.ActionBar.AlertDialog.Builder;
import org.telegram.ui.ActionBar.BackDrawable;
import org.telegram.ui.ActionBar.BaseFragment;
import org.telegram.ui.ActionBar.BottomSheet.Builder;
import org.telegram.ui.ActionBar.SimpleTextView;
import org.telegram.ui.ActionBar.Theme;
import org.telegram.ui.ActionBar.Theme.ThemeInfo;
import org.telegram.ui.ActionBar.ThemeDescription.ThemeDescriptionDelegate;
import org.telegram.ui.Adapters.MentionsAdapter;
import org.telegram.ui.Adapters.MentionsAdapter.MentionsAdapterDelegate;
import org.telegram.ui.Adapters.StickersAdapter;
import org.telegram.ui.Adapters.StickersAdapter.StickersAdapterDelegate;
import org.telegram.ui.Cells.BotHelpCell;
import org.telegram.ui.Cells.BotHelpCell.BotHelpCellDelegate;
import org.telegram.ui.Cells.ChatActionCell;
import org.telegram.ui.Cells.ChatActionCell.ChatActionCellDelegate;
import org.telegram.ui.Cells.ChatLoadingCell;
import org.telegram.ui.Cells.ChatMessageCell;
import org.telegram.ui.Cells.ChatMessageCell.ChatMessageCellDelegate;
import org.telegram.ui.Cells.ChatUnreadCell;
import org.telegram.ui.Cells.CheckBoxCell;
import org.telegram.ui.Cells.ContextLinkCell;
import org.telegram.ui.Components.AlertsCreator;
import org.telegram.ui.Components.BackupImageView;
import org.telegram.ui.Components.ChatActivityEnterView;
import org.telegram.ui.Components.ChatActivityEnterView.ChatActivityEnterViewDelegate;
import org.telegram.ui.Components.ChatAttachAlert;
import org.telegram.ui.Components.ChatAttachAlert.ChatAttachViewDelegate;
import org.telegram.ui.Components.ChatAvatarContainer;
import org.telegram.ui.Components.ChatBigEmptyView;
import org.telegram.ui.Components.CombinedDrawable;
import org.telegram.ui.Components.CorrectlyMeasuringTextView;
import org.telegram.ui.Components.EditTextBoldCursor;
import org.telegram.ui.Components.EmbedBottomSheet;
import org.telegram.ui.Components.EmojiView;
import org.telegram.ui.Components.ExtendedGridLayoutManager;
import org.telegram.ui.Components.FragmentContextView;
import org.telegram.ui.Components.InstantCameraView;
import org.telegram.ui.Components.LayoutHelper;
import org.telegram.ui.Components.NumberTextView;
import org.telegram.ui.Components.PipRoundVideoView;
import org.telegram.ui.Components.RadialProgressView;
import org.telegram.ui.Components.RecyclerListView;
import org.telegram.ui.Components.RecyclerListView.Holder;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemClickListenerExtended;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListener;
import org.telegram.ui.Components.RecyclerListView.OnItemLongClickListenerExtended;
import org.telegram.ui.Components.ShareAlert;
import org.telegram.ui.Components.Size;
import org.telegram.ui.Components.SizeNotifierFrameLayout;
import org.telegram.ui.Components.StickersAlert;
import org.telegram.ui.Components.StickersAlert.StickersAlertDelegate;
import org.telegram.ui.Components.TypefaceSpan;
import org.telegram.ui.Components.URLSpanBotCommand;
import org.telegram.ui.Components.URLSpanMono;
import org.telegram.ui.Components.URLSpanNoUnderline;
import org.telegram.ui.Components.URLSpanReplacement;
import org.telegram.ui.Components.URLSpanUserMention;
import org.telegram.ui.Components.voip.VoIPHelper;

public class ChatActivity
  extends BaseFragment
  implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, LocationActivity.LocationActivityDelegate
{
  private static final int add_shortcut = 24;
  private static final int attach_audio = 3;
  private static final int attach_contact = 5;
  private static final int attach_document = 4;
  private static final int attach_gallery = 1;
  private static final int attach_location = 6;
  private static final int attach_photo = 0;
  private static final int attach_video = 2;
  private static final int bot_help = 30;
  private static final int bot_settings = 31;
  private static final int call = 32;
  private static final int chat_enc_timer = 13;
  private static final int chat_menu_attach = 14;
  private static final int clear_history = 15;
  private static final int copy = 10;
  private static final int delete = 12;
  private static final int delete_chat = 16;
  private static final int edit = 23;
  private static final int forward = 11;
  private static final int id_chat_compose_panel = 1000;
  private static final int mute = 18;
  private static final int reply = 19;
  private static final int report = 21;
  private static final int search = 40;
  private static final int share_contact = 17;
  private static final int star = 22;
  private SimpleTextView actionModeSubTextView;
  private SimpleTextView actionModeTextView;
  private FrameLayout actionModeTitleContainer;
  private ArrayList<View> actionModeViews = new ArrayList();
  private TextView addContactItem;
  private TextView addToContactsButton;
  private TextView alertNameTextView;
  private TextView alertTextView;
  private FrameLayout alertView;
  private AnimatorSet alertViewAnimator;
  private boolean allowContextBotPanel;
  private boolean allowContextBotPanelSecond = true;
  private boolean allowStickersPanel;
  private ArrayList<MessageObject> animatingMessageObjects = new ArrayList();
  private Paint aspectPaint;
  private Path aspectPath;
  private AspectRatioFrameLayout aspectRatioFrameLayout;
  private ActionBarMenuItem attachItem;
  private ChatAvatarContainer avatarContainer;
  private ChatBigEmptyView bigEmptyView;
  private MessageObject botButtons;
  private PhotoViewer.PhotoViewerProvider botContextProvider = new PhotoViewer.EmptyPhotoViewerProvider()
  {
    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
    {
      int i = 0;
      if ((paramAnonymousInt < 0) || (paramAnonymousInt >= ChatActivity.this.botContextResults.size())) {}
      for (;;)
      {
        return null;
        int j = ChatActivity.this.mentionListView.getChildCount();
        Object localObject2 = ChatActivity.this.botContextResults.get(paramAnonymousInt);
        paramAnonymousInt = 0;
        while (paramAnonymousInt < j)
        {
          paramAnonymousFileLocation = null;
          Object localObject1 = ChatActivity.this.mentionListView.getChildAt(paramAnonymousInt);
          paramAnonymousMessageObject = paramAnonymousFileLocation;
          if ((localObject1 instanceof ContextLinkCell))
          {
            ContextLinkCell localContextLinkCell = (ContextLinkCell)localObject1;
            paramAnonymousMessageObject = paramAnonymousFileLocation;
            if (localContextLinkCell.getResult() == localObject2) {
              paramAnonymousMessageObject = localContextLinkCell.getPhotoImage();
            }
          }
          if (paramAnonymousMessageObject != null)
          {
            paramAnonymousFileLocation = new int[2];
            ((View)localObject1).getLocationInWindow(paramAnonymousFileLocation);
            localObject1 = new PhotoViewer.PlaceProviderObject();
            ((PhotoViewer.PlaceProviderObject)localObject1).viewX = paramAnonymousFileLocation[0];
            j = paramAnonymousFileLocation[1];
            if (Build.VERSION.SDK_INT >= 21) {}
            for (paramAnonymousInt = i;; paramAnonymousInt = AndroidUtilities.statusBarHeight)
            {
              ((PhotoViewer.PlaceProviderObject)localObject1).viewY = (j - paramAnonymousInt);
              ((PhotoViewer.PlaceProviderObject)localObject1).parentView = ChatActivity.this.mentionListView;
              ((PhotoViewer.PlaceProviderObject)localObject1).imageReceiver = paramAnonymousMessageObject;
              ((PhotoViewer.PlaceProviderObject)localObject1).thumb = paramAnonymousMessageObject.getBitmapSafe();
              ((PhotoViewer.PlaceProviderObject)localObject1).radius = paramAnonymousMessageObject.getRoundRadius();
              return (PhotoViewer.PlaceProviderObject)localObject1;
            }
          }
          paramAnonymousInt += 1;
        }
      }
    }
    
    public void sendButtonPressed(int paramAnonymousInt, VideoEditedInfo paramAnonymousVideoEditedInfo)
    {
      if ((paramAnonymousInt < 0) || (paramAnonymousInt >= ChatActivity.this.botContextResults.size())) {
        return;
      }
      ChatActivity.this.sendBotInlineResult((TLRPC.BotInlineResult)ChatActivity.this.botContextResults.get(paramAnonymousInt));
    }
  };
  private ArrayList<Object> botContextResults;
  private SparseArray<TLRPC.BotInfo> botInfo = new SparseArray();
  private MessageObject botReplyButtons;
  private String botUser;
  private int botsCount;
  private FrameLayout bottomOverlay;
  private FrameLayout bottomOverlayChat;
  private TextView bottomOverlayChatText;
  private TextView bottomOverlayText;
  private boolean[] cacheEndReached = new boolean[2];
  private int canEditMessagesCount;
  private int cantDeleteMessagesCount;
  protected ChatActivityEnterView chatActivityEnterView;
  private ChatActivityAdapter chatAdapter;
  private ChatAttachAlert chatAttachAlert;
  private long chatEnterTime;
  private GridLayoutManagerFixed chatLayoutManager;
  private long chatLeaveTime;
  private RecyclerListView chatListView;
  private boolean chatListViewIgnoreLayout;
  private ArrayList<ChatMessageCell> chatMessageCellsCache = new ArrayList();
  private boolean checkTextureViewPosition;
  private Dialog closeChatDialog;
  private ImageView closePinned;
  private ImageView closeReportSpam;
  private SizeNotifierFrameLayout contentView;
  private int createUnreadMessageAfterId;
  private boolean createUnreadMessageAfterIdLoading;
  protected TLRPC.Chat currentChat;
  protected TLRPC.EncryptedChat currentEncryptedChat;
  private boolean currentFloatingDateOnScreen;
  private boolean currentFloatingTopIsNotMessage;
  private String currentPicturePath;
  protected TLRPC.User currentUser;
  private long dialog_id;
  private ChatMessageCell drawLaterRoundProgressCell;
  private int editingMessageObjectReqId;
  private View emojiButtonRed;
  private TextView emptyView;
  private FrameLayout emptyViewContainer;
  private boolean[] endReached = new boolean[2];
  private boolean first = true;
  private boolean firstLoading = true;
  private boolean firstUnreadSent = false;
  private int first_unread_id;
  private boolean fixPaddingsInLayout;
  private AnimatorSet floatingDateAnimation;
  private ChatActionCell floatingDateView;
  private boolean forceScrollToTop;
  private boolean[] forwardEndReached = { 1, 1 };
  private MessageObject forwardingMessage;
  private MessageObject.GroupedMessages forwardingMessageGroup;
  private ArrayList<MessageObject> forwardingMessages;
  private ArrayList<CharSequence> foundUrls;
  private TLRPC.WebPage foundWebPage;
  private FragmentContextView fragmentContextView;
  private FragmentContextView fragmentLocationContextView;
  private TextView gifHintTextView;
  private boolean globalIgnoreLayout;
  private LongSparseArray<MessageObject.GroupedMessages> groupedMessagesMap = new LongSparseArray();
  private boolean hasAllMentionsLocal;
  private boolean hasBotsCommands;
  private boolean hasUnfavedSelected;
  private ActionBarMenuItem headerItem;
  private Runnable hideAlertViewRunnable;
  private int highlightMessageId = Integer.MAX_VALUE;
  private boolean ignoreAttachOnPause;
  protected TLRPC.ChatFull info;
  private long inlineReturn;
  private InstantCameraView instantCameraView;
  private boolean isBroadcast;
  private int lastLoadIndex;
  private int last_message_id = 0;
  private int linkSearchRequestId;
  private boolean loading;
  private boolean loadingForward;
  private boolean loadingFromOldPosition;
  private int loadingPinnedMessage;
  private int loadsCount;
  private int[] maxDate = { Integer.MIN_VALUE, Integer.MIN_VALUE };
  private int[] maxMessageId = { Integer.MAX_VALUE, Integer.MAX_VALUE };
  private TextView mediaBanTooltip;
  private FrameLayout mentionContainer;
  private ExtendedGridLayoutManager mentionGridLayoutManager;
  private LinearLayoutManager mentionLayoutManager;
  private AnimatorSet mentionListAnimation;
  private RecyclerListView mentionListView;
  private boolean mentionListViewIgnoreLayout;
  private boolean mentionListViewIsScrolling;
  private int mentionListViewLastViewPosition;
  private int mentionListViewLastViewTop;
  private int mentionListViewScrollOffsetY;
  private FrameLayout mentiondownButton;
  private ObjectAnimator mentiondownButtonAnimation;
  private TextView mentiondownButtonCounter;
  private ImageView mentiondownButtonImage;
  private MentionsAdapter mentionsAdapter;
  private RecyclerListView.OnItemClickListener mentionsOnItemClickListener;
  private long mergeDialogId;
  protected ArrayList<MessageObject> messages = new ArrayList();
  private HashMap<String, ArrayList<MessageObject>> messagesByDays = new HashMap();
  private SparseArray<MessageObject>[] messagesDict = { new SparseArray(), new SparseArray() };
  private int[] minDate = new int[2];
  private int[] minMessageId = { Integer.MIN_VALUE, Integer.MIN_VALUE };
  private TextView muteItem;
  private MessageObject needAnimateToMessage;
  private boolean needSelectFromMessageId;
  private int newMentionsCount;
  private int newUnreadMessageCount;
  RecyclerListView.OnItemClickListenerExtended onItemClickListener = new RecyclerListView.OnItemClickListenerExtended()
  {
    public void onItemClick(View paramAnonymousView, int paramAnonymousInt, float paramAnonymousFloat1, float paramAnonymousFloat2)
    {
      ChatActivity.access$602(ChatActivity.this, true);
      if (ChatActivity.this.actionBar.isActionModeShowed())
      {
        boolean bool = false;
        if ((paramAnonymousView instanceof ChatMessageCell)) {
          if (((ChatMessageCell)paramAnonymousView).isInsideBackground(paramAnonymousFloat1, paramAnonymousFloat2)) {
            break label59;
          }
        }
        label59:
        for (bool = true;; bool = false)
        {
          ChatActivity.this.processRowSelect(paramAnonymousView, bool);
          return;
        }
      }
      ChatActivity.this.createMenu(paramAnonymousView, true, false);
    }
  };
  RecyclerListView.OnItemLongClickListenerExtended onItemLongClickListener = new RecyclerListView.OnItemLongClickListenerExtended()
  {
    public boolean onItemClick(View paramAnonymousView, int paramAnonymousInt, float paramAnonymousFloat1, float paramAnonymousFloat2)
    {
      ChatActivity.access$602(ChatActivity.this, true);
      if (!ChatActivity.this.actionBar.isActionModeShowed())
      {
        ChatActivity.this.createMenu(paramAnonymousView, false, true);
        return true;
      }
      boolean bool = false;
      if ((paramAnonymousView instanceof ChatMessageCell)) {
        if (((ChatMessageCell)paramAnonymousView).isInsideBackground(paramAnonymousFloat1, paramAnonymousFloat2)) {
          break label72;
        }
      }
      label72:
      for (bool = true;; bool = false)
      {
        ChatActivity.this.processRowSelect(paramAnonymousView, bool);
        return true;
      }
    }
  };
  private boolean openAnimationEnded;
  private boolean openSearchKeyboard;
  private View overlayView;
  private FrameLayout pagedownButton;
  private AnimatorSet pagedownButtonAnimation;
  private TextView pagedownButtonCounter;
  private ImageView pagedownButtonImage;
  private boolean pagedownButtonShowedByScroll;
  private boolean paused = true;
  private boolean pausedOnLastMessage;
  private String pendingLinkSearchString;
  private Runnable pendingWebPageTimeoutRunnable;
  private PhotoViewer.PhotoViewerProvider photoViewerProvider = new PhotoViewer.EmptyPhotoViewerProvider()
  {
    public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
    {
      int j = ChatActivity.this.chatListView.getChildCount();
      paramAnonymousInt = 0;
      while (paramAnonymousInt < j)
      {
        Object localObject2 = null;
        View localView = ChatActivity.this.chatListView.getChildAt(paramAnonymousInt);
        Object localObject1;
        Object localObject3;
        MessageObject localMessageObject;
        int i;
        if ((localView instanceof ChatMessageCell))
        {
          localObject1 = localObject2;
          if (paramAnonymousMessageObject != null)
          {
            localObject3 = (ChatMessageCell)localView;
            localMessageObject = ((ChatMessageCell)localObject3).getMessageObject();
            localObject1 = localObject2;
            if (localMessageObject != null)
            {
              localObject1 = localObject2;
              if (localMessageObject.getId() == paramAnonymousMessageObject.getId()) {
                localObject1 = ((ChatMessageCell)localObject3).getPhotoImage();
              }
            }
          }
          if (localObject1 == null) {
            break label453;
          }
          paramAnonymousMessageObject = new int[2];
          localView.getLocationInWindow(paramAnonymousMessageObject);
          paramAnonymousFileLocation = new PhotoViewer.PlaceProviderObject();
          paramAnonymousFileLocation.viewX = paramAnonymousMessageObject[0];
          i = paramAnonymousMessageObject[1];
          if (Build.VERSION.SDK_INT < 21) {
            break label446;
          }
        }
        label446:
        for (paramAnonymousInt = 0;; paramAnonymousInt = AndroidUtilities.statusBarHeight)
        {
          paramAnonymousFileLocation.viewY = (i - paramAnonymousInt);
          paramAnonymousFileLocation.parentView = ChatActivity.this.chatListView;
          paramAnonymousFileLocation.imageReceiver = ((ImageReceiver)localObject1);
          paramAnonymousFileLocation.thumb = ((ImageReceiver)localObject1).getBitmapSafe();
          paramAnonymousFileLocation.radius = ((ImageReceiver)localObject1).getRoundRadius();
          if (((localView instanceof ChatActionCell)) && (ChatActivity.this.currentChat != null)) {
            paramAnonymousFileLocation.dialogId = (-ChatActivity.this.currentChat.id);
          }
          if (((ChatActivity.this.pinnedMessageView != null) && (ChatActivity.this.pinnedMessageView.getTag() == null)) || ((ChatActivity.this.reportSpamView != null) && (ChatActivity.this.reportSpamView.getTag() == null))) {
            paramAnonymousFileLocation.clipTopAddition = AndroidUtilities.dp(48.0F);
          }
          return paramAnonymousFileLocation;
          localObject1 = localObject2;
          if (!(localView instanceof ChatActionCell)) {
            break;
          }
          localObject3 = (ChatActionCell)localView;
          localMessageObject = ((ChatActionCell)localObject3).getMessageObject();
          localObject1 = localObject2;
          if (localMessageObject == null) {
            break;
          }
          if (paramAnonymousMessageObject != null)
          {
            localObject1 = localObject2;
            if (localMessageObject.getId() != paramAnonymousMessageObject.getId()) {
              break;
            }
            localObject1 = ((ChatActionCell)localObject3).getPhotoImage();
            break;
          }
          localObject1 = localObject2;
          if (paramAnonymousFileLocation == null) {
            break;
          }
          localObject1 = localObject2;
          if (localMessageObject.photoThumbs == null) {
            break;
          }
          i = 0;
          for (;;)
          {
            localObject1 = localObject2;
            if (i >= localMessageObject.photoThumbs.size()) {
              break;
            }
            localObject1 = (TLRPC.PhotoSize)localMessageObject.photoThumbs.get(i);
            if ((((TLRPC.PhotoSize)localObject1).location.volume_id == paramAnonymousFileLocation.volume_id) && (((TLRPC.PhotoSize)localObject1).location.local_id == paramAnonymousFileLocation.local_id))
            {
              localObject1 = ((ChatActionCell)localObject3).getPhotoImage();
              break;
            }
            i += 1;
          }
        }
        label453:
        paramAnonymousInt += 1;
      }
      return null;
    }
  };
  private TLRPC.FileLocation pinnedImageLocation;
  private View pinnedLineView;
  private BackupImageView pinnedMessageImageView;
  private SimpleTextView pinnedMessageNameTextView;
  private MessageObject pinnedMessageObject;
  private SimpleTextView pinnedMessageTextView;
  private FrameLayout pinnedMessageView;
  private AnimatorSet pinnedMessageViewAnimator;
  private RadialProgressView progressBar;
  private FrameLayout progressView;
  private View progressView2;
  private AnimatorSet replyButtonAnimation;
  private ImageView replyCloseImageView;
  private ImageView replyIconImageView;
  private TLRPC.FileLocation replyImageLocation;
  private BackupImageView replyImageView;
  private View replyLineView;
  private SimpleTextView replyNameTextView;
  private SimpleTextView replyObjectTextView;
  private MessageObject replyingMessageObject;
  private TextView reportSpamButton;
  private FrameLayout reportSpamContainer;
  private LinearLayout reportSpamView;
  private AnimatorSet reportSpamViewAnimator;
  private int returnToLoadIndex;
  private int returnToMessageId;
  private FrameLayout roundVideoContainer;
  private AnimatorSet runningAnimation;
  private MessageObject scrollToMessage;
  private int scrollToMessagePosition = 55536;
  private int scrollToOffsetOnRecreate = 0;
  private int scrollToPositionOnRecreate = -1;
  private boolean scrollToTopOnResume;
  private boolean scrollToTopUnReadOnResume;
  private boolean scrollingFloatingDate;
  private ImageView searchCalendarButton;
  private FrameLayout searchContainer;
  private SimpleTextView searchCountText;
  private ImageView searchDownButton;
  private ActionBarMenuItem searchItem;
  private ImageView searchUpButton;
  private ImageView searchUserButton;
  private boolean searchingForUser;
  private TLRPC.User searchingUserMessages;
  private SparseArray<MessageObject>[] selectedMessagesCanCopyIds = { new SparseArray(), new SparseArray() };
  private SparseArray<MessageObject>[] selectedMessagesCanStarIds = { new SparseArray(), new SparseArray() };
  private NumberTextView selectedMessagesCountTextView;
  private SparseArray<MessageObject>[] selectedMessagesIds = { new SparseArray(), new SparseArray() };
  private MessageObject selectedObject;
  private MessageObject.GroupedMessages selectedObjectGroup;
  private int startLoadFromMessageId;
  private int startLoadFromMessageOffset = Integer.MAX_VALUE;
  private boolean startReplyOnTextChange;
  private String startVideoEdit;
  private StickersAdapter stickersAdapter;
  private RecyclerListView stickersListView;
  private RecyclerListView.OnItemClickListener stickersOnItemClickListener;
  private FrameLayout stickersPanel;
  private ImageView stickersPanelArrow;
  private View timeItem2;
  private int topViewWasVisible;
  private MessageObject unreadMessageObject;
  private boolean userBlocked = false;
  private TextureView videoTextureView;
  private AnimatorSet voiceHintAnimation;
  private Runnable voiceHintHideRunnable;
  private TextView voiceHintTextView;
  private Runnable waitingForCharaterEnterRunnable;
  private ArrayList<Integer> waitingForLoad = new ArrayList();
  private boolean waitingForReplyMessageLoad;
  private boolean wasManualScroll;
  private boolean wasPaused;
  
  public ChatActivity(Bundle paramBundle)
  {
    super(paramBundle);
  }
  
  private void addToSelectedMessages(MessageObject paramMessageObject, boolean paramBoolean)
  {
    addToSelectedMessages(paramMessageObject, paramBoolean, true);
  }
  
  private void addToSelectedMessages(MessageObject paramMessageObject, boolean paramBoolean1, boolean paramBoolean2)
  {
    int j;
    int m;
    int k;
    final int i;
    Object localObject1;
    if (paramMessageObject != null)
    {
      if (paramMessageObject.getDialogId() == this.dialog_id) {
        j = 0;
      }
      while ((paramBoolean1) && (paramMessageObject.getGroupId() != 0L))
      {
        m = 0;
        paramMessageObject = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
        if (paramMessageObject == null) {
          break label462;
        }
        k = 0;
        i = 0;
        for (;;)
        {
          if (i < paramMessageObject.messages.size())
          {
            localObject1 = (MessageObject)paramMessageObject.messages.get(i);
            if (this.selectedMessagesIds[j].indexOfKey(((MessageObject)localObject1).getId()) < 0)
            {
              m = 1;
              k = i;
            }
            i += 1;
            continue;
            j = 1;
            break;
          }
        }
        i = 0;
        if (i >= paramMessageObject.messages.size()) {
          break label462;
        }
        localObject1 = (MessageObject)paramMessageObject.messages.get(i);
        if (m != 0)
        {
          if (this.selectedMessagesIds[j].indexOfKey(((MessageObject)localObject1).getId()) < 0) {
            if (i != k) {
              break label204;
            }
          }
          label204:
          for (paramBoolean1 = true;; paramBoolean1 = false)
          {
            addToSelectedMessages((MessageObject)localObject1, false, paramBoolean1);
            i += 1;
            break;
          }
        }
        if (i == paramMessageObject.messages.size() - 1) {}
        for (paramBoolean1 = true;; paramBoolean1 = false)
        {
          addToSelectedMessages((MessageObject)localObject1, false, paramBoolean1);
          break;
        }
      }
      if (this.selectedMessagesIds[j].indexOfKey(paramMessageObject.getId()) < 0) {
        break label463;
      }
      this.selectedMessagesIds[j].remove(paramMessageObject.getId());
      if ((paramMessageObject.type == 0) || (paramMessageObject.caption != null)) {
        this.selectedMessagesCanCopyIds[j].remove(paramMessageObject.getId());
      }
      if (paramMessageObject.isSticker()) {
        this.selectedMessagesCanStarIds[j].remove(paramMessageObject.getId());
      }
      if ((paramMessageObject.canEditMessage(this.currentChat)) && (paramMessageObject.getGroupId() != 0L))
      {
        localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
        if ((localObject1 != null) && (((MessageObject.GroupedMessages)localObject1).messages.size() > 1)) {
          this.canEditMessagesCount -= 1;
        }
      }
      if (!paramMessageObject.canDeleteMessage(this.currentChat)) {
        this.cantDeleteMessagesCount -= 1;
      }
    }
    if ((paramBoolean2) && (this.actionBar.isActionModeShowed()))
    {
      j = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
      if (j != 0) {
        break label640;
      }
      this.actionBar.hideActionMode();
      updatePinnedMessageView(true);
      this.startReplyOnTextChange = false;
    }
    label462:
    label463:
    label640:
    final ActionBarMenuItem localActionBarMenuItem;
    label780:
    int n;
    int i1;
    label823:
    label869:
    label884:
    label893:
    label967:
    label1095:
    label1126:
    label1143:
    do
    {
      do
      {
        do
        {
          return;
        } while (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() >= 100);
        this.selectedMessagesIds[j].put(paramMessageObject.getId(), paramMessageObject);
        if ((paramMessageObject.type == 0) || (paramMessageObject.caption != null)) {
          this.selectedMessagesCanCopyIds[j].put(paramMessageObject.getId(), paramMessageObject);
        }
        if (paramMessageObject.isSticker()) {
          this.selectedMessagesCanStarIds[j].put(paramMessageObject.getId(), paramMessageObject);
        }
        if ((paramMessageObject.canEditMessage(this.currentChat)) && (paramMessageObject.getGroupId() != 0L))
        {
          localObject1 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
          if ((localObject1 != null) && (((MessageObject.GroupedMessages)localObject1).messages.size() > 1)) {
            this.canEditMessagesCount += 1;
          }
        }
        if (paramMessageObject.canDeleteMessage(this.currentChat)) {
          break;
        }
        this.cantDeleteMessagesCount += 1;
        break;
        Object localObject2 = this.actionBar.createActionMode().getItem(10);
        paramMessageObject = this.actionBar.createActionMode().getItem(22);
        localObject1 = this.actionBar.createActionMode().getItem(23);
        localActionBarMenuItem = this.actionBar.createActionMode().getItem(19);
        k = ((ActionBarMenuItem)localObject2).getVisibility();
        m = paramMessageObject.getVisibility();
        if (this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() == 0) {
          break label1211;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        if ((!DataQuery.getInstance(this.currentAccount).canAddStickerToFavorites()) || (this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() != j)) {
          break label1218;
        }
        i = 0;
        paramMessageObject.setVisibility(i);
        n = ((ActionBarMenuItem)localObject2).getVisibility();
        i1 = paramMessageObject.getVisibility();
        localObject2 = this.actionBar.createActionMode().getItem(12);
        if (this.cantDeleteMessagesCount != 0) {
          break label1225;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        if (localObject1 != null)
        {
          if ((this.canEditMessagesCount != 1) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
            break label1232;
          }
          i = 0;
          ((ActionBarMenuItem)localObject1).setVisibility(i);
        }
        this.hasUnfavedSelected = false;
        i = 0;
        if (i < 2)
        {
          j = 0;
          if (j < this.selectedMessagesCanStarIds[i].size())
          {
            localObject2 = (MessageObject)this.selectedMessagesCanStarIds[i].valueAt(j);
            if (DataQuery.getInstance(this.currentAccount).isStickerInFavorites(((MessageObject)localObject2).getDocument())) {
              break label1239;
            }
            this.hasUnfavedSelected = true;
          }
          if (!this.hasUnfavedSelected) {
            break label1248;
          }
        }
        if (!this.hasUnfavedSelected) {
          break label1257;
        }
        i = 2131165350;
        paramMessageObject.setIcon(i);
      } while (localActionBarMenuItem == null);
      j = 1;
      if (((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) && (!this.isBroadcast) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)))
      {
        i = j;
        if (this.currentChat == null) {
          break label1095;
        }
        if ((!ChatObject.isNotInChat(this.currentChat)) && ((!ChatObject.isChannel(this.currentChat)) || (ChatObject.canPost(this.currentChat)) || (this.currentChat.megagroup)))
        {
          i = j;
          if (ChatObject.canSendMessages(this.currentChat)) {
            break label1095;
          }
        }
      }
      i = 0;
      if ((i == 0) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
        break label1265;
      }
      i = 0;
      if ((i != 0) || (this.chatActivityEnterView.hasText())) {
        break label1272;
      }
      paramBoolean1 = true;
      this.startReplyOnTextChange = paramBoolean1;
    } while (localActionBarMenuItem.getVisibility() == i);
    if (this.replyButtonAnimation != null) {
      this.replyButtonAnimation.cancel();
    }
    if ((k != n) || (m != i1))
    {
      if (i == 0)
      {
        localActionBarMenuItem.setAlpha(1.0F);
        localActionBarMenuItem.setScaleX(1.0F);
      }
      for (;;)
      {
        localActionBarMenuItem.setVisibility(i);
        return;
        label1211:
        i = 8;
        break;
        label1218:
        i = 8;
        break label780;
        label1225:
        i = 8;
        break label823;
        label1232:
        i = 8;
        break label869;
        label1239:
        j += 1;
        break label893;
        label1248:
        i += 1;
        break label884;
        label1257:
        i = 2131165357;
        break label967;
        label1265:
        i = 8;
        break label1126;
        label1272:
        paramBoolean1 = false;
        break label1143;
        localActionBarMenuItem.setAlpha(0.0F);
        localActionBarMenuItem.setScaleX(0.0F);
      }
    }
    this.replyButtonAnimation = new AnimatorSet();
    localActionBarMenuItem.setPivotX(AndroidUtilities.dp(54.0F));
    ((ActionBarMenuItem)localObject1).setPivotX(AndroidUtilities.dp(54.0F));
    if (i == 0)
    {
      localActionBarMenuItem.setVisibility(i);
      this.replyButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(localActionBarMenuItem, "alpha", new float[] { 1.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "scaleX", new float[] { 1.0F }), ObjectAnimator.ofFloat(localObject1, "alpha", new float[] { 1.0F }), ObjectAnimator.ofFloat(localObject1, "scaleX", new float[] { 1.0F }) });
    }
    for (;;)
    {
      this.replyButtonAnimation.setDuration(100L);
      this.replyButtonAnimation.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationCancel(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.replyButtonAnimation != null) && (ChatActivity.this.replyButtonAnimation.equals(paramAnonymousAnimator))) {
            ChatActivity.access$24402(ChatActivity.this, null);
          }
        }
        
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.replyButtonAnimation != null) && (ChatActivity.this.replyButtonAnimation.equals(paramAnonymousAnimator)) && (i == 8)) {
            localActionBarMenuItem.setVisibility(8);
          }
        }
      });
      this.replyButtonAnimation.start();
      return;
      this.replyButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(localActionBarMenuItem, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localActionBarMenuItem, "scaleX", new float[] { 0.0F }), ObjectAnimator.ofFloat(localObject1, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localObject1, "scaleX", new float[] { 0.0F }) });
    }
  }
  
  private void alertUserOpenError(MessageObject paramMessageObject)
  {
    if (getParentActivity() == null) {
      return;
    }
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    localBuilder.setTitle(LocaleController.getString("AppName", 2131492981));
    localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
    if (paramMessageObject.type == 3) {
      localBuilder.setMessage(LocaleController.getString("NoPlayerInstalled", 2131493901));
    }
    for (;;)
    {
      showDialog(localBuilder.create());
      return;
      localBuilder.setMessage(LocaleController.formatString("NoHandleAppInstalled", 2131493889, new Object[] { paramMessageObject.getDocument().mime_type }));
    }
  }
  
  private void applyDraftMaybe(boolean paramBoolean)
  {
    if (this.chatActivityEnterView == null) {}
    label84:
    label133:
    label195:
    label329:
    label334:
    label346:
    label574:
    label630:
    label683:
    label693:
    label722:
    for (;;)
    {
      return;
      TLRPC.DraftMessage localDraftMessage = DataQuery.getInstance(this.currentAccount).getDraft(this.dialog_id);
      TLRPC.Message localMessage;
      Object localObject;
      int k;
      int j;
      TLRPC.MessageEntity localMessageEntity;
      int i;
      if ((localDraftMessage != null) && (localDraftMessage.reply_to_msg_id != 0))
      {
        localMessage = DataQuery.getInstance(this.currentAccount).getDraftMessage(this.dialog_id);
        if (this.chatActivityEnterView.getFieldText() != null) {
          break label693;
        }
        if (localDraftMessage == null) {
          break label630;
        }
        localObject = this.chatActivityEnterView;
        if (localDraftMessage.no_webpage) {
          break label329;
        }
        paramBoolean = true;
        ((ChatActivityEnterView)localObject).setWebPage(null, paramBoolean);
        if (localDraftMessage.entities.isEmpty()) {
          break label683;
        }
        localObject = SpannableStringBuilder.valueOf(localDraftMessage.message);
        DataQuery.getInstance(this.currentAccount);
        DataQuery.sortEntities(localDraftMessage.entities);
        k = 0;
        j = 0;
        if (j >= localDraftMessage.entities.size()) {
          break label574;
        }
        localMessageEntity = (TLRPC.MessageEntity)localDraftMessage.entities.get(j);
        if ((!(localMessageEntity instanceof TLRPC.TL_inputMessageEntityMentionName)) && (!(localMessageEntity instanceof TLRPC.TL_messageEntityMentionName))) {
          break label346;
        }
        if (!(localMessageEntity instanceof TLRPC.TL_inputMessageEntityMentionName)) {
          break label334;
        }
        i = ((TLRPC.TL_inputMessageEntityMentionName)localMessageEntity).user_id.user_id;
        if ((localMessageEntity.offset + k + localMessageEntity.length < ((SpannableStringBuilder)localObject).length()) && (((SpannableStringBuilder)localObject).charAt(localMessageEntity.offset + k + localMessageEntity.length) == ' ')) {
          localMessageEntity.length += 1;
        }
        ((SpannableStringBuilder)localObject).setSpan(new URLSpanUserMention("" + i, 1), localMessageEntity.offset + k, localMessageEntity.offset + k + localMessageEntity.length, 33);
        i = k;
      }
      for (;;)
      {
        j += 1;
        k = i;
        break label133;
        localMessage = null;
        break;
        paramBoolean = false;
        break label84;
        i = ((TLRPC.TL_messageEntityMentionName)localMessageEntity).user_id;
        break label195;
        if ((localMessageEntity instanceof TLRPC.TL_messageEntityCode))
        {
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + localMessageEntity.length + k, "`");
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + k, "`");
          i = k + 2;
        }
        else if ((localMessageEntity instanceof TLRPC.TL_messageEntityPre))
        {
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + localMessageEntity.length + k, "```");
          ((SpannableStringBuilder)localObject).insert(localMessageEntity.offset + k, "```");
          i = k + 6;
        }
        else if ((localMessageEntity instanceof TLRPC.TL_messageEntityBold))
        {
          ((SpannableStringBuilder)localObject).setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), localMessageEntity.offset + k, localMessageEntity.offset + localMessageEntity.length + k, 33);
          i = k;
        }
        else
        {
          i = k;
          if ((localMessageEntity instanceof TLRPC.TL_messageEntityItalic))
          {
            ((SpannableStringBuilder)localObject).setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), localMessageEntity.offset + k, localMessageEntity.offset + localMessageEntity.length + k, 33);
            i = k;
          }
        }
      }
      this.chatActivityEnterView.setFieldText((CharSequence)localObject);
      if (getArguments().getBoolean("hasUrl", false))
      {
        this.chatActivityEnterView.setSelection(localDraftMessage.message.indexOf('\n') + 1);
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            if (ChatActivity.this.chatActivityEnterView != null)
            {
              ChatActivity.this.chatActivityEnterView.setFieldFocused(true);
              ChatActivity.this.chatActivityEnterView.openKeyboard();
            }
          }
        }, 700L);
      }
      for (;;)
      {
        if ((this.replyingMessageObject != null) || (localMessage == null)) {
          break label722;
        }
        this.replyingMessageObject = new MessageObject(this.currentAccount, localMessage, MessagesController.getInstance(this.currentAccount).getUsers(), false);
        showReplyPanel(true, this.replyingMessageObject, null, null, false);
        return;
        localObject = localDraftMessage.message;
        break;
        if ((paramBoolean) && (localDraftMessage == null))
        {
          this.chatActivityEnterView.setFieldText("");
          showReplyPanel(false, null, null, null, false);
        }
      }
    }
  }
  
  private void checkActionBarMenu()
  {
    if (((this.currentEncryptedChat != null) && (!(this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) || ((this.currentChat != null) && (ChatObject.isNotInChat(this.currentChat))) || ((this.currentUser != null) && (UserObject.isDeleted(this.currentUser))))
    {
      if (this.timeItem2 != null) {
        this.timeItem2.setVisibility(8);
      }
      if (this.avatarContainer != null) {
        this.avatarContainer.hideTimeItem();
      }
    }
    for (;;)
    {
      if ((this.avatarContainer != null) && (this.currentEncryptedChat != null)) {
        this.avatarContainer.setTime(this.currentEncryptedChat.ttl);
      }
      checkAndUpdateAvatar();
      return;
      if (this.timeItem2 != null) {
        this.timeItem2.setVisibility(0);
      }
      if (this.avatarContainer != null) {
        this.avatarContainer.showTimeItem();
      }
    }
  }
  
  private void checkAndUpdateAvatar()
  {
    Object localObject;
    if (this.currentUser != null)
    {
      localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
      if (localObject != null) {}
    }
    label91:
    for (;;)
    {
      return;
      this.currentUser = ((TLRPC.User)localObject);
      for (;;)
      {
        if (this.avatarContainer == null) {
          break label91;
        }
        this.avatarContainer.checkAndUpdateAvatar();
        return;
        if (this.currentChat != null)
        {
          localObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
          if (localObject == null) {
            break;
          }
          this.currentChat = ((TLRPC.Chat)localObject);
        }
      }
    }
  }
  
  private void checkBotCommands()
  {
    boolean bool = true;
    URLSpanBotCommand.enabled = false;
    if ((this.currentUser != null) && (this.currentUser.bot)) {
      URLSpanBotCommand.enabled = true;
    }
    do
    {
      for (;;)
      {
        return;
        if (!(this.info instanceof TLRPC.TL_chatFull)) {
          break;
        }
        int i = 0;
        while (i < this.info.participants.participants.size())
        {
          Object localObject = (TLRPC.ChatParticipant)this.info.participants.participants.get(i);
          localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(((TLRPC.ChatParticipant)localObject).user_id));
          if ((localObject != null) && (((TLRPC.User)localObject).bot))
          {
            URLSpanBotCommand.enabled = true;
            return;
          }
          i += 1;
        }
      }
    } while (!(this.info instanceof TLRPC.TL_channelFull));
    if ((!this.info.bot_info.isEmpty()) && (this.currentChat != null) && (this.currentChat.megagroup)) {}
    for (;;)
    {
      URLSpanBotCommand.enabled = bool;
      return;
      bool = false;
    }
  }
  
  private void checkBotKeyboard()
  {
    if ((this.chatActivityEnterView == null) || (this.botButtons == null) || (this.userBlocked)) {}
    do
    {
      return;
      if (!(this.botButtons.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply)) {
        break;
      }
    } while ((MessagesController.getMainSettings(this.currentAccount).getInt("answered_" + this.dialog_id, 0) == this.botButtons.getId()) || ((this.replyingMessageObject != null) && (this.chatActivityEnterView.getFieldText() != null)));
    this.botReplyButtons = this.botButtons;
    this.chatActivityEnterView.setButtons(this.botButtons);
    showReplyPanel(true, this.botButtons, null, null, false);
    return;
    if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
    {
      this.botReplyButtons = null;
      showReplyPanel(false, null, null, null, false);
    }
    this.chatActivityEnterView.setButtons(this.botButtons);
  }
  
  private void checkContextBotPanel()
  {
    if ((this.allowStickersPanel) && (this.mentionsAdapter != null) && (this.mentionsAdapter.isBotContext()))
    {
      if ((this.allowContextBotPanel) || (this.allowContextBotPanelSecond)) {
        break label159;
      }
      if ((this.mentionContainer.getVisibility() == 0) && (this.mentionContainer.getTag() == null))
      {
        if (this.mentionListAnimation != null) {
          this.mentionListAnimation.cancel();
        }
        this.mentionContainer.setTag(Integer.valueOf(1));
        this.mentionListAnimation = new AnimatorSet();
        this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mentionContainer, "alpha", new float[] { 0.0F }) });
        this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator)))
            {
              ChatActivity.this.mentionContainer.setVisibility(4);
              ChatActivity.access$16502(ChatActivity.this, null);
            }
          }
        });
        this.mentionListAnimation.setDuration(200L);
        this.mentionListAnimation.start();
      }
    }
    label159:
    while ((this.mentionContainer.getVisibility() != 4) && (this.mentionContainer.getTag() == null)) {
      return;
    }
    if (this.mentionListAnimation != null) {
      this.mentionListAnimation.cancel();
    }
    this.mentionContainer.setTag(null);
    this.mentionContainer.setVisibility(0);
    this.mentionListAnimation = new AnimatorSet();
    this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mentionContainer, "alpha", new float[] { 0.0F, 1.0F }) });
    this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
    {
      public void onAnimationCancel(Animator paramAnonymousAnimator)
      {
        if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
          ChatActivity.access$16502(ChatActivity.this, null);
        }
      }
      
      public void onAnimationEnd(Animator paramAnonymousAnimator)
      {
        if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymousAnimator))) {
          ChatActivity.access$16502(ChatActivity.this, null);
        }
      }
    });
    this.mentionListAnimation.setDuration(200L);
    this.mentionListAnimation.start();
  }
  
  private void checkEditTimer()
  {
    if (this.chatActivityEnterView == null) {}
    MessageObject localMessageObject;
    do
    {
      do
      {
        return;
        localMessageObject = this.chatActivityEnterView.getEditingMessageObject();
      } while (localMessageObject == null);
      if ((this.currentUser == null) || (!this.currentUser.self)) {
        break;
      }
    } while (this.actionModeSubTextView.getVisibility() == 8);
    this.actionModeSubTextView.setVisibility(8);
    return;
    int i;
    if (localMessageObject.canEditMessageAnytime(this.currentChat))
    {
      i = 360;
      if (i <= 0) {
        break label235;
      }
      if (i <= 300) {
        break label161;
      }
      if (this.actionModeSubTextView.getVisibility() != 8) {
        this.actionModeSubTextView.setVisibility(8);
      }
    }
    for (;;)
    {
      AndroidUtilities.runOnUIThread(new Runnable()
      {
        public void run()
        {
          ChatActivity.this.checkEditTimer();
        }
      }, 1000L);
      return;
      i = MessagesController.getInstance(this.currentAccount).maxEditTime + 300 - Math.abs(ConnectionsManager.getInstance(this.currentAccount).getCurrentTime() - localMessageObject.messageOwner.date);
      break;
      label161:
      if (this.actionModeSubTextView.getVisibility() != 0) {
        this.actionModeSubTextView.setVisibility(0);
      }
      this.actionModeSubTextView.setText(LocaleController.formatString("TimeToEdit", 2131494486, new Object[] { String.format("%d:%02d", new Object[] { Integer.valueOf(i / 60), Integer.valueOf(i % 60) }) }));
    }
    label235:
    this.chatActivityEnterView.onEditTimeExpired();
    this.actionModeSubTextView.setText(LocaleController.formatString("TimeToEditExpired", 2131494487, new Object[0]));
  }
  
  private void checkListViewPaddings()
  {
    if ((!this.wasManualScroll) && (this.unreadMessageObject != null))
    {
      if (this.messages.indexOf(this.unreadMessageObject) >= 0)
      {
        this.fixPaddingsInLayout = true;
        if (this.fragmentView != null) {
          this.fragmentView.requestLayout();
        }
      }
      return;
    }
    AndroidUtilities.runOnUIThread(new Runnable()
    {
      public void run()
      {
        ChatActivity.this.checkListViewPaddingsInternal();
      }
    });
  }
  
  private void checkListViewPaddingsInternal()
  {
    if (this.chatLayoutManager == null) {
      return;
    }
    for (;;)
    {
      int m;
      int k;
      int n;
      try
      {
        j = this.chatLayoutManager.findFirstVisibleItemPosition();
        m = -1;
        i = j;
        k = m;
        if (!this.wasManualScroll)
        {
          i = j;
          k = m;
          if (this.unreadMessageObject != null)
          {
            n = this.messages.indexOf(this.unreadMessageObject);
            i = j;
            k = m;
            if (n >= 0)
            {
              k = n + this.chatAdapter.messagesStartRow;
              i = -1;
            }
          }
        }
        j = 0;
        Object localObject;
        if (i != -1)
        {
          localObject = this.chatLayoutManager.findViewByPosition(i);
          if (localObject == null) {
            j = 0;
          }
        }
        else
        {
          if ((this.chatListView.getPaddingTop() == AndroidUtilities.dp(52.0F)) || (((this.pinnedMessageView == null) || (this.pinnedMessageView.getTag() != null)) && ((this.reportSpamView == null) || (this.reportSpamView.getTag() != null)))) {
            break label267;
          }
          this.chatListView.setPadding(0, AndroidUtilities.dp(52.0F), 0, AndroidUtilities.dp(3.0F));
          localObject = (FrameLayout.LayoutParams)this.floatingDateView.getLayoutParams();
          ((FrameLayout.LayoutParams)localObject).topMargin = AndroidUtilities.dp(52.0F);
          this.floatingDateView.setLayoutParams((ViewGroup.LayoutParams)localObject);
          this.chatListView.setTopGlowOffset(AndroidUtilities.dp(48.0F));
          if (i == -1) {
            break label381;
          }
          this.chatLayoutManager.scrollToPositionWithOffset(i, j);
          return;
        }
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
        return;
      }
      int j = this.chatListView.getMeasuredHeight() - localException.getBottom() - this.chatListView.getPaddingBottom();
      continue;
      label267:
      if ((this.chatListView.getPaddingTop() != AndroidUtilities.dp(4.0F)) && ((this.pinnedMessageView == null) || (this.pinnedMessageView.getTag() != null)) && ((this.reportSpamView == null) || (this.reportSpamView.getTag() != null)))
      {
        this.chatListView.setPadding(0, AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(3.0F));
        FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)this.floatingDateView.getLayoutParams();
        localLayoutParams.topMargin = AndroidUtilities.dp(4.0F);
        this.floatingDateView.setLayoutParams(localLayoutParams);
        this.chatListView.setTopGlowOffset(0);
        continue;
        label381:
        if (k == -1) {
          break;
        }
        i = this.chatListView.getMeasuredHeight();
        j = this.chatListView.getPaddingBottom();
        m = this.chatListView.getPaddingTop();
        n = AndroidUtilities.dp(29.0F);
        this.chatLayoutManager.scrollToPositionWithOffset(k, i - j - m - n);
        return;
      }
      int i = -1;
    }
  }
  
  private void checkRaiseSensors()
  {
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isStickersExpanded()))
    {
      MediaController.getInstance().setAllowStartRecord(false);
      return;
    }
    if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.banned_rights != null) && (this.currentChat.banned_rights.send_media))
    {
      MediaController.getInstance().setAllowStartRecord(false);
      return;
    }
    if ((!ApplicationLoader.mainInterfacePaused) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)) && ((this.bottomOverlay == null) || (this.bottomOverlay.getVisibility() != 0)) && ((this.searchContainer == null) || (this.searchContainer.getVisibility() != 0)))
    {
      MediaController.getInstance().setAllowStartRecord(true);
      return;
    }
    MediaController.getInstance().setAllowStartRecord(false);
  }
  
  private void checkScrollForLoad(boolean paramBoolean)
  {
    if ((this.chatLayoutManager == null) || (this.paused)) {}
    label32:
    label59:
    label149:
    label208:
    label359:
    label361:
    label366:
    label371:
    label462:
    label595:
    label600:
    do
    {
      return;
      k = this.chatLayoutManager.findFirstVisibleItemPosition();
      int n;
      boolean bool;
      int i1;
      if (k == -1)
      {
        i = 0;
        if ((i <= 0) && (this.currentEncryptedChat == null)) {
          break label359;
        }
        m = this.chatAdapter.getItemCount();
        if (!paramBoolean) {
          break label361;
        }
        j = 25;
        if ((m - k - i <= j) && (!this.loading))
        {
          if (this.endReached[0] != 0) {
            break label462;
          }
          this.loading = true;
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          if (this.messagesByDays.size() == 0) {
            break label371;
          }
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          j = this.maxMessageId[0];
          if (this.cacheEndReached[0] != 0) {
            break label366;
          }
          paramBoolean = true;
          m = this.minDate[0];
          n = this.classGuid;
          bool = ChatObject.isChannel(this.currentChat);
          i1 = this.lastLoadIndex;
          this.lastLoadIndex = (i1 + 1);
          localMessagesController.loadMessages(l, 50, j, 0, paramBoolean, m, n, 0, 0, bool, i1);
        }
      }
      for (;;)
      {
        if ((i > 0) && (!this.loadingForward) && (k <= 10))
        {
          if ((this.mergeDialogId == 0L) || (this.forwardEndReached[1] != 0)) {
            break label600;
          }
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.mergeDialogId;
          i = this.minMessageId[1];
          j = this.maxDate[1];
          k = this.classGuid;
          paramBoolean = ChatObject.isChannel(this.currentChat);
          m = this.lastLoadIndex;
          this.lastLoadIndex = (m + 1);
          localMessagesController.loadMessages(l, 50, i, 0, true, j, k, 1, 0, paramBoolean, m);
          this.loadingForward = true;
          return;
          i = Math.abs(this.chatLayoutManager.findLastVisibleItemPosition() - k) + 1;
          break label32;
          break;
          j = 5;
          break label59;
          paramBoolean = false;
          break label149;
          localMessagesController = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          if (this.cacheEndReached[0] == 0) {}
          for (paramBoolean = true;; paramBoolean = false)
          {
            j = this.minDate[0];
            m = this.classGuid;
            bool = ChatObject.isChannel(this.currentChat);
            n = this.lastLoadIndex;
            this.lastLoadIndex = (n + 1);
            localMessagesController.loadMessages(l, 50, 0, 0, paramBoolean, j, m, 0, 0, bool, n);
            break;
          }
          if ((this.mergeDialogId != 0L) && (this.endReached[1] == 0))
          {
            this.loading = true;
            this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
            localMessagesController = MessagesController.getInstance(this.currentAccount);
            l = this.mergeDialogId;
            j = this.maxMessageId[1];
            if (this.cacheEndReached[1] != 0) {
              break label595;
            }
          }
        }
      }
      for (paramBoolean = true;; paramBoolean = false)
      {
        m = this.minDate[1];
        n = this.classGuid;
        bool = ChatObject.isChannel(this.currentChat);
        i1 = this.lastLoadIndex;
        this.lastLoadIndex = (i1 + 1);
        localMessagesController.loadMessages(l, 50, j, 0, paramBoolean, m, n, 0, 0, bool, i1);
        break label208;
        break;
      }
    } while (this.forwardEndReached[0] != 0);
    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
    MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
    long l = this.dialog_id;
    int i = this.minMessageId[0];
    int j = this.maxDate[0];
    int k = this.classGuid;
    paramBoolean = ChatObject.isChannel(this.currentChat);
    int m = this.lastLoadIndex;
    this.lastLoadIndex = (m + 1);
    localMessagesController.loadMessages(l, 50, i, 0, true, j, k, 1, 0, paramBoolean, m);
    this.loadingForward = true;
  }
  
  private void clearChatData()
  {
    this.messages.clear();
    this.messagesByDays.clear();
    this.waitingForLoad.clear();
    this.groupedMessagesMap.clear();
    FrameLayout localFrameLayout = this.progressView;
    int i;
    if (this.chatAdapter.botInfoRow == -1)
    {
      i = 0;
      localFrameLayout.setVisibility(i);
      this.chatListView.setEmptyView(null);
      i = 0;
      label61:
      if (i >= 2) {
        break label170;
      }
      this.messagesDict[i].clear();
      if (this.currentEncryptedChat != null) {
        break label149;
      }
      this.maxMessageId[i] = Integer.MAX_VALUE;
      this.minMessageId[i] = Integer.MIN_VALUE;
    }
    for (;;)
    {
      this.maxDate[i] = Integer.MIN_VALUE;
      this.minDate[i] = 0;
      this.endReached[i] = false;
      this.cacheEndReached[i] = false;
      this.forwardEndReached[i] = true;
      i += 1;
      break label61;
      i = 4;
      break;
      label149:
      this.maxMessageId[i] = Integer.MIN_VALUE;
      this.minMessageId[i] = Integer.MAX_VALUE;
    }
    label170:
    this.first = true;
    this.firstLoading = true;
    this.loading = true;
    this.loadingForward = false;
    this.waitingForReplyMessageLoad = false;
    this.startLoadFromMessageId = 0;
    this.last_message_id = 0;
    this.unreadMessageObject = null;
    this.createUnreadMessageAfterId = 0;
    this.createUnreadMessageAfterIdLoading = false;
    this.needSelectFromMessageId = false;
    this.chatAdapter.notifyDataSetChanged();
  }
  
  private void createChatAttachView()
  {
    if (getParentActivity() == null) {}
    while (this.chatAttachAlert != null) {
      return;
    }
    this.chatAttachAlert = new ChatAttachAlert(getParentActivity(), this);
    this.chatAttachAlert.setDelegate(new ChatAttachAlert.ChatAttachViewDelegate()
    {
      public void didPressedButton(int paramAnonymousInt)
      {
        if ((ChatActivity.this.getParentActivity() == null) || (ChatActivity.this.chatAttachAlert == null)) {}
        HashMap localHashMap;
        ArrayList localArrayList2;
        do
        {
          return;
          if ((paramAnonymousInt != 8) && (paramAnonymousInt != 7) && ((paramAnonymousInt != 4) || (ChatActivity.this.chatAttachAlert.getSelectedPhotos().isEmpty()))) {
            break;
          }
          if (paramAnonymousInt != 8) {
            ChatActivity.this.chatAttachAlert.dismiss();
          }
          localHashMap = ChatActivity.this.chatAttachAlert.getSelectedPhotos();
          localArrayList2 = ChatActivity.this.chatAttachAlert.getSelectedPhotosOrder();
        } while (localHashMap.isEmpty());
        ArrayList localArrayList1 = new ArrayList();
        int i = 0;
        if (i < localArrayList2.size())
        {
          MediaController.PhotoEntry localPhotoEntry = (MediaController.PhotoEntry)localHashMap.get(localArrayList2.get(i));
          SendMessagesHelper.SendingMediaInfo localSendingMediaInfo = new SendMessagesHelper.SendingMediaInfo();
          if (localPhotoEntry.imagePath != null)
          {
            localSendingMediaInfo.path = localPhotoEntry.imagePath;
            label165:
            localSendingMediaInfo.isVideo = localPhotoEntry.isVideo;
            if (localPhotoEntry.caption == null) {
              break label305;
            }
            localObject = localPhotoEntry.caption.toString();
            label195:
            localSendingMediaInfo.caption = ((String)localObject);
            localSendingMediaInfo.entities = localPhotoEntry.entities;
            if (localPhotoEntry.stickers.isEmpty()) {
              break label311;
            }
          }
          label305:
          label311:
          for (localObject = new ArrayList(localPhotoEntry.stickers);; localObject = null)
          {
            localSendingMediaInfo.masks = ((ArrayList)localObject);
            localSendingMediaInfo.ttl = localPhotoEntry.ttl;
            localSendingMediaInfo.videoEditedInfo = localPhotoEntry.editedInfo;
            localArrayList1.add(localSendingMediaInfo);
            localPhotoEntry.reset();
            i += 1;
            break;
            if (localPhotoEntry.path == null) {
              break label165;
            }
            localSendingMediaInfo.path = localPhotoEntry.path;
            break label165;
            localObject = null;
            break label195;
          }
        }
        long l = ChatActivity.this.dialog_id;
        Object localObject = ChatActivity.this.replyingMessageObject;
        if (paramAnonymousInt == 4) {}
        for (boolean bool = true;; bool = false)
        {
          SendMessagesHelper.prepareSendingMedia(localArrayList1, l, (MessageObject)localObject, null, bool, SharedConfig.groupPhotosEnabled);
          ChatActivity.this.showReplyPanel(false, null, null, null, false);
          DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
          return;
        }
        if (ChatActivity.this.chatAttachAlert != null) {
          ChatActivity.this.chatAttachAlert.dismissWithButtonClick(paramAnonymousInt);
        }
        ChatActivity.this.processSelectedAttach(paramAnonymousInt);
      }
      
      public void didSelectBot(TLRPC.User paramAnonymousUser)
      {
        if ((ChatActivity.this.chatActivityEnterView == null) || (TextUtils.isEmpty(paramAnonymousUser.username))) {
          return;
        }
        ChatActivity.this.chatActivityEnterView.setFieldText("@" + paramAnonymousUser.username + " ");
        ChatActivity.this.chatActivityEnterView.openKeyboard();
      }
      
      public View getRevealView()
      {
        return ChatActivity.this.chatActivityEnterView.getAttachButton();
      }
      
      public void onCameraOpened()
      {
        ChatActivity.this.chatActivityEnterView.closeKeyboard();
      }
    });
  }
  
  private void createDeleteMessagesAlert(MessageObject paramMessageObject, MessageObject.GroupedMessages paramGroupedMessages)
  {
    createDeleteMessagesAlert(paramMessageObject, paramGroupedMessages, 1);
  }
  
  private void createDeleteMessagesAlert(final MessageObject paramMessageObject, final MessageObject.GroupedMessages paramGroupedMessages, final int paramInt)
  {
    if (getParentActivity() == null) {
      return;
    }
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    label34:
    final boolean[] arrayOfBoolean1;
    final boolean[] arrayOfBoolean2;
    int j;
    label121:
    label140:
    int n;
    boolean bool;
    int i3;
    if (paramGroupedMessages != null)
    {
      i = paramGroupedMessages.messages.size();
      localBuilder.setMessage(LocaleController.formatString("AreYouSureDeleteMessages", 2131493005, new Object[] { LocaleController.formatPluralString("messages", i) }));
      localBuilder.setTitle(LocaleController.getString("Message", 2131493817));
      arrayOfBoolean1 = new boolean[3];
      arrayOfBoolean2 = new boolean[1];
      localObject1 = null;
      localObject2 = null;
      localObject3 = null;
      if ((this.currentUser == null) || (!MessagesController.getInstance(this.currentAccount).canRevokePmInbox)) {
        break label498;
      }
      j = 1;
      if (this.currentUser == null) {
        break label504;
      }
      k = MessagesController.getInstance(this.currentAccount).revokeTimePmLimit;
      if ((this.currentChat == null) || (!this.currentChat.megagroup)) {
        break label1439;
      }
      n = 0;
      bool = ChatObject.canBlockUsers(this.currentChat);
      i3 = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
      if (paramMessageObject == null) {
        break label525;
      }
      if ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty)))
      {
        localObject1 = localObject3;
        if (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
      }
      else
      {
        localObject1 = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramMessageObject.messageOwner.from_id));
      }
      if ((paramMessageObject.isSendError()) || (paramMessageObject.getDialogId() != this.mergeDialogId) || ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty))) || (!paramMessageObject.isOut()) || (i3 - paramMessageObject.messageOwner.date > k)) {
        break label519;
      }
    }
    label498:
    label504:
    label519:
    for (int i = 1;; i = 0)
    {
      if ((localObject1 == null) || (((TLRPC.User)localObject1).id == UserConfig.getInstance(this.currentAccount).getClientUserId()) || (paramInt == 2)) {
        break label1226;
      }
      if ((paramInt != 1) || (this.currentChat.creator)) {
        break label882;
      }
      localObject2 = new AlertDialog[1];
      localObject2[0] = new AlertDialog(getParentActivity(), 1);
      localObject3 = new TLRPC.TL_channels_getParticipant();
      ((TLRPC.TL_channels_getParticipant)localObject3).channel = MessagesController.getInputChannel(this.currentChat);
      ((TLRPC.TL_channels_getParticipant)localObject3).user_id = MessagesController.getInstance(this.currentAccount).getInputUser((TLRPC.User)localObject1);
      paramInt = ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject)localObject3, new RequestDelegate()
      {
        public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              try
              {
                ChatActivity.97.this.val$progressDialog[0].dismiss();
                ChatActivity.97.this.val$progressDialog[0] = null;
                int j = 2;
                int i = j;
                if (paramAnonymousTLObject != null)
                {
                  TLRPC.TL_channels_channelParticipant localTL_channels_channelParticipant = (TLRPC.TL_channels_channelParticipant)paramAnonymousTLObject;
                  i = j;
                  if (!(localTL_channels_channelParticipant.participant instanceof TLRPC.TL_channelParticipantAdmin))
                  {
                    i = j;
                    if (!(localTL_channels_channelParticipant.participant instanceof TLRPC.TL_channelParticipantCreator)) {
                      i = 0;
                    }
                  }
                }
                ChatActivity.this.createDeleteMessagesAlert(ChatActivity.97.this.val$finalSelectedObject, ChatActivity.97.this.val$finalSelectedGroup, i);
                return;
              }
              catch (Throwable localThrowable)
              {
                for (;;) {}
              }
            }
          });
        }
      });
      if (paramInt == 0) {
        break;
      }
      AndroidUtilities.runOnUIThread(new Runnable()
      {
        public void run()
        {
          if (localObject2[0] == null) {
            return;
          }
          localObject2[0].setMessage(LocaleController.getString("Loading", 2131493762));
          localObject2[0].setCanceledOnTouchOutside(false);
          localObject2[0].setCancelable(false);
          localObject2[0].setButton(-2, LocaleController.getString("Cancel", 2131493127), new DialogInterface.OnClickListener()
          {
            public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
            {
              ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.98.this.val$reqId, true);
              try
              {
                paramAnonymous2DialogInterface.dismiss();
                return;
              }
              catch (Exception paramAnonymous2DialogInterface)
              {
                FileLog.e(paramAnonymous2DialogInterface);
              }
            }
          });
          ChatActivity.this.showDialog(localObject2[0]);
        }
      }, 1000L);
      return;
      if (paramMessageObject != null)
      {
        i = 1;
        break label34;
      }
      i = this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size();
      break label34;
      j = 0;
      break label121;
      k = MessagesController.getInstance(this.currentAccount).revokeTimeLimit;
      break label140;
    }
    label525:
    i = -1;
    int k = 1;
    label531:
    int m = i;
    label547:
    int i1;
    if (k >= 0)
    {
      m = 0;
      j = i;
      i = j;
      if (m < this.selectedMessagesIds[k].size())
      {
        localObject2 = (MessageObject)this.selectedMessagesIds[k].valueAt(m);
        i = j;
        if (j == -1) {
          i = ((MessageObject)localObject2).messageOwner.from_id;
        }
        if ((i < 0) || (i != ((MessageObject)localObject2).messageOwner.from_id)) {
          i = -2;
        }
      }
      else
      {
        if (i != -2) {
          break label781;
        }
        m = i;
      }
    }
    else
    {
      i1 = 0;
      j = 1;
      i = n;
      n = j;
    }
    int i2;
    for (;;)
    {
      j = i;
      if (n >= 0)
      {
        i2 = 0;
        for (j = i;; j = i)
        {
          k = i1;
          i = j;
          if (i2 >= this.selectedMessagesIds[n].size()) {
            break label796;
          }
          localObject2 = (MessageObject)this.selectedMessagesIds[n].valueAt(i2);
          if (n != 1) {
            break label839;
          }
          if ((!((MessageObject)localObject2).isOut()) || (((MessageObject)localObject2).messageOwner.action != null)) {
            break;
          }
          i = j;
          if (i3 - ((MessageObject)localObject2).messageOwner.date <= 172800) {
            i = 1;
          }
          label755:
          i2 += 1;
        }
        m += 1;
        j = i;
        break label547;
        label781:
        k -= 1;
        break label531;
        i = 0;
      }
      for (k = 1;; k = 1)
      {
        label796:
        if (k == 0) {
          break label869;
        }
        j = i;
        i = j;
        if (m == -1) {
          break;
        }
        localObject1 = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(m));
        i = j;
        break;
        label839:
        i = j;
        if (n != 0) {
          break label755;
        }
        i = j;
        if (((MessageObject)localObject2).isOut()) {
          break label755;
        }
        i = 0;
      }
      label869:
      n -= 1;
      i1 = k;
    }
    label882:
    final Object localObject2 = new FrameLayout(getParentActivity());
    i = 0;
    paramInt = 0;
    while (paramInt < 3) {
      if ((!bool) && (paramInt == 0))
      {
        paramInt += 1;
      }
      else
      {
        localObject3 = new CheckBoxCell(getParentActivity(), 1);
        ((CheckBoxCell)localObject3).setBackgroundDrawable(Theme.getSelectorDrawable(false));
        ((CheckBoxCell)localObject3).setTag(Integer.valueOf(paramInt));
        if (paramInt == 0)
        {
          ((CheckBoxCell)localObject3).setText(LocaleController.getString("DeleteBanUser", 2131493363), "", false, false);
          label976:
          if (!LocaleController.isRTL) {
            break label1138;
          }
          j = AndroidUtilities.dp(16.0F);
          label990:
          if (!LocaleController.isRTL) {
            break label1149;
          }
        }
        label1138:
        label1149:
        for (k = AndroidUtilities.dp(8.0F);; k = AndroidUtilities.dp(16.0F))
        {
          ((CheckBoxCell)localObject3).setPadding(j, 0, k, 0);
          ((FrameLayout)localObject2).addView((View)localObject3, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, i * 48, 0.0F, 0.0F));
          ((CheckBoxCell)localObject3).setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              if (!paramAnonymousView.isEnabled()) {
                return;
              }
              paramAnonymousView = (CheckBoxCell)paramAnonymousView;
              Integer localInteger = (Integer)paramAnonymousView.getTag();
              boolean[] arrayOfBoolean = arrayOfBoolean1;
              int i = localInteger.intValue();
              if (arrayOfBoolean1[localInteger.intValue()] == 0) {}
              for (int j = 1;; j = 0)
              {
                arrayOfBoolean[i] = j;
                paramAnonymousView.setChecked(arrayOfBoolean1[localInteger.intValue()], true);
                return;
              }
            }
          });
          i += 1;
          break;
          if (paramInt == 1)
          {
            ((CheckBoxCell)localObject3).setText(LocaleController.getString("DeleteReportSpam", 2131493375), "", false, false);
            break label976;
          }
          if (paramInt != 2) {
            break label976;
          }
          ((CheckBoxCell)localObject3).setText(LocaleController.formatString("DeleteAllFrom", 2131493360, new Object[] { ContactsController.formatName(((TLRPC.User)localObject1).first_name, ((TLRPC.User)localObject1).last_name) }), "", false, false);
          break label976;
          j = AndroidUtilities.dp(8.0F);
          break label990;
        }
      }
    }
    localBuilder.setView((View)localObject2);
    label1226:
    label1293:
    label1306:
    label1412:
    label1422:
    label1439:
    label1625:
    do
    {
      do
      {
        do
        {
          for (;;)
          {
            localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
              {
                paramAnonymousDialogInterface = null;
                Object localObject2;
                Object localObject1;
                if (paramMessageObject != null)
                {
                  localObject2 = new ArrayList();
                  paramAnonymousDialogInterface = null;
                  localObject1 = null;
                  if (paramGroupedMessages != null)
                  {
                    paramAnonymousInt = 0;
                    for (paramAnonymousDialogInterface = (DialogInterface)localObject1;; paramAnonymousDialogInterface = (DialogInterface)localObject1)
                    {
                      localObject1 = paramAnonymousDialogInterface;
                      if (paramAnonymousInt >= paramGroupedMessages.messages.size()) {
                        break;
                      }
                      MessageObject localMessageObject = (MessageObject)paramGroupedMessages.messages.get(paramAnonymousInt);
                      ((ArrayList)localObject2).add(Integer.valueOf(localMessageObject.getId()));
                      localObject1 = paramAnonymousDialogInterface;
                      if (ChatActivity.this.currentEncryptedChat != null)
                      {
                        localObject1 = paramAnonymousDialogInterface;
                        if (localMessageObject.messageOwner.random_id != 0L)
                        {
                          localObject1 = paramAnonymousDialogInterface;
                          if (localMessageObject.type != 10)
                          {
                            localObject1 = paramAnonymousDialogInterface;
                            if (paramAnonymousDialogInterface == null) {
                              localObject1 = new ArrayList();
                            }
                            ((ArrayList)localObject1).add(Long.valueOf(localMessageObject.messageOwner.random_id));
                          }
                        }
                      }
                      paramAnonymousInt += 1;
                    }
                  }
                  ((ArrayList)localObject2).add(Integer.valueOf(paramMessageObject.getId()));
                  localObject1 = paramAnonymousDialogInterface;
                  if (ChatActivity.this.currentEncryptedChat != null)
                  {
                    localObject1 = paramAnonymousDialogInterface;
                    if (paramMessageObject.messageOwner.random_id != 0L)
                    {
                      localObject1 = paramAnonymousDialogInterface;
                      if (paramMessageObject.type != 10)
                      {
                        localObject1 = new ArrayList();
                        ((ArrayList)localObject1).add(Long.valueOf(paramMessageObject.messageOwner.random_id));
                      }
                    }
                  }
                  MessagesController.getInstance(ChatActivity.this.currentAccount).deleteMessages((ArrayList)localObject2, (ArrayList)localObject1, ChatActivity.this.currentEncryptedChat, paramMessageObject.messageOwner.to_id.channel_id, arrayOfBoolean2[0]);
                  paramAnonymousDialogInterface = (DialogInterface)localObject2;
                }
                for (;;)
                {
                  if (localObject1 != null)
                  {
                    if (arrayOfBoolean1[0] != 0) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat(ChatActivity.this.currentChat.id, localObject1, ChatActivity.this.info);
                    }
                    if (arrayOfBoolean1[1] != 0)
                    {
                      localObject1 = new TLRPC.TL_channels_reportSpam();
                      ((TLRPC.TL_channels_reportSpam)localObject1).channel = MessagesController.getInputChannel(ChatActivity.this.currentChat);
                      ((TLRPC.TL_channels_reportSpam)localObject1).user_id = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputUser(localObject1);
                      ((TLRPC.TL_channels_reportSpam)localObject1).id = paramAnonymousDialogInterface;
                      ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest((TLObject)localObject1, new RequestDelegate()
                      {
                        public void run(TLObject paramAnonymous2TLObject, TLRPC.TL_error paramAnonymous2TL_error) {}
                      });
                    }
                    if (arrayOfBoolean1[2] != 0) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserChannelHistory(ChatActivity.this.currentChat, localObject1, 0);
                    }
                  }
                  return;
                  paramAnonymousInt = 1;
                  while (paramAnonymousInt >= 0)
                  {
                    localObject1 = new ArrayList();
                    int i = 0;
                    while (i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size())
                    {
                      ((ArrayList)localObject1).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                      i += 1;
                    }
                    paramAnonymousDialogInterface = null;
                    int j = 0;
                    i = j;
                    if (!((ArrayList)localObject1).isEmpty())
                    {
                      localObject2 = (MessageObject)ChatActivity.this.selectedMessagesIds[paramAnonymousInt].get(((Integer)((ArrayList)localObject1).get(0)).intValue());
                      i = j;
                      if (0 == 0)
                      {
                        i = j;
                        if (((MessageObject)localObject2).messageOwner.to_id.channel_id != 0) {
                          i = ((MessageObject)localObject2).messageOwner.to_id.channel_id;
                        }
                      }
                    }
                    if (ChatActivity.this.currentEncryptedChat != null)
                    {
                      localObject2 = new ArrayList();
                      j = 0;
                      for (;;)
                      {
                        paramAnonymousDialogInterface = (DialogInterface)localObject2;
                        if (j >= ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size()) {
                          break;
                        }
                        paramAnonymousDialogInterface = (MessageObject)ChatActivity.this.selectedMessagesIds[paramAnonymousInt].valueAt(j);
                        if ((paramAnonymousDialogInterface.messageOwner.random_id != 0L) && (paramAnonymousDialogInterface.type != 10)) {
                          ((ArrayList)localObject2).add(Long.valueOf(paramAnonymousDialogInterface.messageOwner.random_id));
                        }
                        j += 1;
                      }
                    }
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteMessages((ArrayList)localObject1, paramAnonymousDialogInterface, ChatActivity.this.currentEncryptedChat, i, arrayOfBoolean2[0]);
                    paramAnonymousInt -= 1;
                    paramAnonymousDialogInterface = (DialogInterface)localObject1;
                  }
                  ChatActivity.this.actionBar.hideActionMode();
                  ChatActivity.this.updatePinnedMessageView(true);
                }
              }
            });
            localBuilder.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
            showDialog(localBuilder.create());
            return;
            if (i != 0)
            {
              localObject2 = new FrameLayout(getParentActivity());
              localObject3 = new CheckBoxCell(getParentActivity(), 1);
              ((CheckBoxCell)localObject3).setBackgroundDrawable(Theme.getSelectorDrawable(false));
              if (this.currentChat != null)
              {
                ((CheckBoxCell)localObject3).setText(LocaleController.getString("DeleteForAll", 2131493367), "", false, false);
                if (!LocaleController.isRTL) {
                  break label1412;
                }
                paramInt = AndroidUtilities.dp(16.0F);
                if (!LocaleController.isRTL) {
                  break label1422;
                }
              }
              for (i = AndroidUtilities.dp(8.0F);; i = AndroidUtilities.dp(16.0F))
              {
                ((CheckBoxCell)localObject3).setPadding(paramInt, 0, i, 0);
                ((FrameLayout)localObject2).addView((View)localObject3, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, 0.0F, 0.0F, 0.0F));
                ((CheckBoxCell)localObject3).setOnClickListener(new View.OnClickListener()
                {
                  public void onClick(View paramAnonymousView)
                  {
                    paramAnonymousView = (CheckBoxCell)paramAnonymousView;
                    boolean[] arrayOfBoolean = arrayOfBoolean2;
                    if (arrayOfBoolean2[0] == 0) {}
                    for (int i = 1;; i = 0)
                    {
                      arrayOfBoolean[0] = i;
                      paramAnonymousView.setChecked(arrayOfBoolean2[0], true);
                      return;
                    }
                  }
                });
                localBuilder.setView((View)localObject2);
                break;
                ((CheckBoxCell)localObject3).setText(LocaleController.formatString("DeleteForUser", 2131493368, new Object[] { UserObject.getFirstName(this.currentUser) }), "", false, false);
                break label1293;
                paramInt = AndroidUtilities.dp(8.0F);
                break label1306;
              }
            }
            localObject1 = null;
          }
          localObject1 = localObject2;
        } while (ChatObject.isChannel(this.currentChat));
        localObject1 = localObject2;
      } while (this.currentEncryptedChat != null);
      i = 0;
      paramInt = 0;
      i3 = ConnectionsManager.getInstance(this.currentAccount).getCurrentTime();
      if (((this.currentUser != null) && (this.currentUser.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (!this.currentUser.bot)) || (this.currentChat != null))
      {
        if (paramMessageObject == null) {
          break label1787;
        }
        if ((paramMessageObject.isSendError()) || ((paramMessageObject.messageOwner.action != null) && (!(paramMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty))) || ((!paramMessageObject.isOut()) && (j == 0) && ((this.currentChat == null) || ((!this.currentChat.creator) && ((!this.currentChat.admin) || (!this.currentChat.admins_enabled))))) || (i3 - paramMessageObject.messageOwner.date > k)) {
          break;
        }
        paramInt = 1;
      }
      localObject1 = localObject2;
    } while (paramInt == 0);
    final Object localObject1 = new FrameLayout(getParentActivity());
    Object localObject3 = new CheckBoxCell(getParentActivity(), 1);
    ((CheckBoxCell)localObject3).setBackgroundDrawable(Theme.getSelectorDrawable(false));
    if (this.currentChat != null)
    {
      ((CheckBoxCell)localObject3).setText(LocaleController.getString("DeleteForAll", 2131493367), "", false, false);
      label1695:
      if (!LocaleController.isRTL) {
        break label2017;
      }
      paramInt = AndroidUtilities.dp(16.0F);
      label1708:
      if (!LocaleController.isRTL) {
        break label2027;
      }
    }
    label1787:
    label1954:
    label2017:
    label2027:
    for (i = AndroidUtilities.dp(8.0F);; i = AndroidUtilities.dp(16.0F))
    {
      ((CheckBoxCell)localObject3).setPadding(paramInt, 0, i, 0);
      ((FrameLayout)localObject1).addView((View)localObject3, LayoutHelper.createFrame(-1, 48.0F, 51, 0.0F, 0.0F, 0.0F, 0.0F));
      ((CheckBoxCell)localObject3).setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          paramAnonymousView = (CheckBoxCell)paramAnonymousView;
          boolean[] arrayOfBoolean = arrayOfBoolean2;
          if (arrayOfBoolean2[0] == 0) {}
          for (int i = 1;; i = 0)
          {
            arrayOfBoolean[0] = i;
            paramAnonymousView.setChecked(arrayOfBoolean2[0], true);
            return;
          }
        }
      });
      localBuilder.setView((View)localObject1);
      localObject1 = localObject2;
      break;
      paramInt = 0;
      break label1625;
      n = 0;
      m = 1;
      for (;;)
      {
        paramInt = i;
        if (m < 0) {
          break;
        }
        i1 = 0;
        paramInt = i;
        i2 = n;
        i = paramInt;
        if (i1 < this.selectedMessagesIds[m].size())
        {
          localObject1 = (MessageObject)this.selectedMessagesIds[m].valueAt(i1);
          if (((MessageObject)localObject1).messageOwner.action != null) {
            i = paramInt;
          }
          for (;;)
          {
            i1 += 1;
            paramInt = i;
            break;
            if ((!((MessageObject)localObject1).isOut()) && (j == 0) && ((this.currentChat == null) || ((!this.currentChat.creator) && ((!this.currentChat.admin) || (!this.currentChat.admins_enabled))))) {
              break label1954;
            }
            i = paramInt;
            if (paramInt == 0)
            {
              i = paramInt;
              if (i3 - ((MessageObject)localObject1).messageOwner.date <= k) {
                i = 1;
              }
            }
          }
          i2 = 1;
          i = 0;
        }
        paramInt = i;
        if (i2 != 0) {
          break;
        }
        m -= 1;
        n = i2;
      }
      ((CheckBoxCell)localObject3).setText(LocaleController.formatString("DeleteForUser", 2131493368, new Object[] { UserObject.getFirstName(this.currentUser) }), "", false, false);
      break label1695;
      paramInt = AndroidUtilities.dp(8.0F);
      break label1708;
    }
  }
  
  private void createMenu(View paramView, boolean paramBoolean1, boolean paramBoolean2)
  {
    createMenu(paramView, paramBoolean1, paramBoolean2, true);
  }
  
  private void createMenu(View paramView, boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    if (this.actionBar.isActionModeShowed()) {}
    MessageObject localMessageObject;
    int i1;
    label104:
    label333:
    int j;
    label437:
    int k;
    label479:
    int m;
    label635:
    do
    {
      do
      {
        for (;;)
        {
          return;
          localMessageObject = null;
          if ((paramView instanceof ChatMessageCell)) {
            localMessageObject = ((ChatMessageCell)paramView).getMessageObject();
          }
          while (localMessageObject != null)
          {
            i1 = getMessageType(localMessageObject);
            if ((!paramBoolean1) || (!(localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionPinMessage))) {
              break label104;
            }
            scrollToMessageId(localMessageObject.messageOwner.reply_to_msg_id, localMessageObject.messageOwner.id, true, 0, false);
            return;
            if ((paramView instanceof ChatActionCell)) {
              localMessageObject = ((ChatActionCell)paramView).getMessageObject();
            }
          }
        }
        this.selectedObject = null;
        this.selectedObjectGroup = null;
        this.forwardingMessage = null;
        this.forwardingMessageGroup = null;
        i = 1;
        while (i >= 0)
        {
          this.selectedMessagesCanCopyIds[i].clear();
          this.selectedMessagesCanStarIds[i].clear();
          this.selectedMessagesIds[i].clear();
          i -= 1;
        }
        this.cantDeleteMessagesCount = 0;
        this.canEditMessagesCount = 0;
        this.actionBar.hideActionMode();
        updatePinnedMessageView(true);
        if (!paramBoolean3) {
          break;
        }
        paramView = getValidGroupedMessage(localMessageObject);
        int n = 1;
        if ((localMessageObject.getDialogId() == this.mergeDialogId) || (localMessageObject.getId() <= 0) || (!ChatObject.isChannel(this.currentChat)) || ((!this.currentChat.creator) && ((this.currentChat.admin_rights == null) || (((!this.currentChat.megagroup) || (!this.currentChat.admin_rights.pin_messages)) && ((this.currentChat.megagroup) || (!this.currentChat.admin_rights.edit_messages))))) || ((localMessageObject.messageOwner.action != null) && (!(localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionEmpty)))) {
          break label848;
        }
        i = 1;
        if ((localMessageObject.getDialogId() == this.mergeDialogId) || (this.info == null) || (this.info.pinned_msg_id != localMessageObject.getId()) || ((!this.currentChat.creator) && ((this.currentChat.admin_rights == null) || (((!this.currentChat.megagroup) || (!this.currentChat.admin_rights.pin_messages)) && ((this.currentChat.megagroup) || (!this.currentChat.admin_rights.edit_messages)))))) {
          break label854;
        }
        j = 1;
        if ((paramView != null) || (!localMessageObject.canEditMessage(this.currentChat)) || (this.chatActivityEnterView.hasAudioToSend()) || (localMessageObject.getDialogId() == this.mergeDialogId)) {
          break label860;
        }
        k = 1;
        if (((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) && ((i1 != 1) || ((localMessageObject.getDialogId() != this.mergeDialogId) && (!localMessageObject.needDrawBluredPreview()))) && ((this.currentEncryptedChat != null) || (localMessageObject.getId() >= 0)) && ((this.bottomOverlayChat == null) || (this.bottomOverlayChat.getVisibility() != 0)) && (!this.isBroadcast))
        {
          m = n;
          if (this.currentChat == null) {
            break label635;
          }
          if ((!ChatObject.isNotInChat(this.currentChat)) && ((!ChatObject.isChannel(this.currentChat)) || (ChatObject.canPost(this.currentChat)) || (this.currentChat.megagroup)))
          {
            m = n;
            if (ChatObject.canSendMessages(this.currentChat)) {
              break label635;
            }
          }
        }
        m = 0;
        if ((!paramBoolean1) && (i1 >= 2) && (i1 != 20) && (!localMessageObject.needDrawBluredPreview()) && (!localMessageObject.isLiveLocation())) {
          break label3531;
        }
      } while (i1 < 0);
      this.selectedObject = localMessageObject;
      this.selectedObjectGroup = paramView;
    } while (getParentActivity() == null);
    Object localObject1 = new AlertDialog.Builder(getParentActivity());
    Object localObject2 = new ArrayList();
    final ArrayList localArrayList = new ArrayList();
    if (i1 == 0)
    {
      ((ArrayList)localObject2).add(LocaleController.getString("Retry", 2131494273));
      localArrayList.add(Integer.valueOf(0));
      ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
      localArrayList.add(Integer.valueOf(1));
    }
    for (;;)
    {
      label777:
      if (!localArrayList.isEmpty())
      {
        ((AlertDialog.Builder)localObject1).setItems((CharSequence[])((ArrayList)localObject2).toArray(new CharSequence[((ArrayList)localObject2).size()]), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            if ((ChatActivity.this.selectedObject == null) || (paramAnonymousInt < 0) || (paramAnonymousInt >= localArrayList.size())) {
              return;
            }
            ChatActivity.this.processSelectedOption(((Integer)localArrayList.get(paramAnonymousInt)).intValue());
          }
        });
        ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("Message", 2131493817));
        showDialog(((AlertDialog.Builder)localObject1).create());
        return;
        paramView = null;
        break;
        label848:
        i = 0;
        break label333;
        label854:
        j = 0;
        break label437;
        label860:
        k = 0;
        break label479;
        if (i1 == 1)
        {
          if ((this.currentChat != null) && (!this.isBroadcast))
          {
            if (m != 0)
            {
              ((ArrayList)localObject2).add(LocaleController.getString("Reply", 2131494235));
              localArrayList.add(Integer.valueOf(8));
            }
            if (j != 0)
            {
              ((ArrayList)localObject2).add(LocaleController.getString("UnpinMessage", 2131494514));
              localArrayList.add(Integer.valueOf(14));
            }
            for (;;)
            {
              if (k != 0)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("Edit", 2131493397));
                localArrayList.add(Integer.valueOf(12));
              }
              if ((this.selectedObject.contentType == 0) && (this.selectedObject.getId() > 0) && (!this.selectedObject.isOut()) && ((ChatObject.isChannel(this.currentChat)) || ((this.currentUser != null) && (this.currentUser.bot))))
              {
                ((ArrayList)localObject2).add(LocaleController.getString("ReportChat", 2131494238));
                localArrayList.add(Integer.valueOf(23));
              }
              if (!localMessageObject.canDeleteMessage(this.currentChat)) {
                break;
              }
              ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
              localArrayList.add(Integer.valueOf(1));
              break;
              if (i != 0)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("PinMessage", 2131494166));
                localArrayList.add(Integer.valueOf(13));
              }
            }
          }
          TLRPC.TL_messageActionPhoneCall localTL_messageActionPhoneCall;
          if ((localMessageObject.messageOwner.action != null) && ((localMessageObject.messageOwner.action instanceof TLRPC.TL_messageActionPhoneCall)))
          {
            localTL_messageActionPhoneCall = (TLRPC.TL_messageActionPhoneCall)localMessageObject.messageOwner.action;
            if (((!(localTL_messageActionPhoneCall.reason instanceof TLRPC.TL_phoneCallDiscardReasonMissed)) && (!(localTL_messageActionPhoneCall.reason instanceof TLRPC.TL_phoneCallDiscardReasonBusy))) || (localMessageObject.isOutOwner())) {
              break label1351;
            }
          }
          label1351:
          for (paramView = LocaleController.getString("CallBack", 2131493107);; paramView = LocaleController.getString("CallAgain", 2131493106))
          {
            ((ArrayList)localObject2).add(paramView);
            localArrayList.add(Integer.valueOf(18));
            if (VoIPHelper.canRateCall(localTL_messageActionPhoneCall))
            {
              ((ArrayList)localObject2).add(LocaleController.getString("CallMessageReportProblem", 2131493114));
              localArrayList.add(Integer.valueOf(19));
            }
            if ((paramBoolean1) && (this.selectedObject.getId() > 0) && (m != 0))
            {
              ((ArrayList)localObject2).add(LocaleController.getString("Reply", 2131494235));
              localArrayList.add(Integer.valueOf(8));
            }
            if (!localMessageObject.canDeleteMessage(this.currentChat)) {
              break;
            }
            ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
            localArrayList.add(Integer.valueOf(1));
            break;
          }
        }
        if (i1 == 20)
        {
          ((ArrayList)localObject2).add(LocaleController.getString("Retry", 2131494273));
          localArrayList.add(Integer.valueOf(0));
          ((ArrayList)localObject2).add(LocaleController.getString("Copy", 2131493303));
          localArrayList.add(Integer.valueOf(3));
          ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
          localArrayList.add(Integer.valueOf(1));
        }
        else
        {
          if (this.currentEncryptedChat == null)
          {
            if (m != 0)
            {
              ((ArrayList)localObject2).add(LocaleController.getString("Reply", 2131494235));
              localArrayList.add(Integer.valueOf(8));
            }
            if ((this.selectedObject.type == 0) || (this.selectedObject.caption != null))
            {
              ((ArrayList)localObject2).add(LocaleController.getString("Copy", 2131493303));
              localArrayList.add(Integer.valueOf(3));
            }
            if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.megagroup) && (!TextUtils.isEmpty(this.currentChat.username)) && (ChatObject.hasAdminRights(this.currentChat)))
            {
              ((ArrayList)localObject2).add(LocaleController.getString("CopyLink", 2131493304));
              localArrayList.add(Integer.valueOf(22));
            }
            if (i1 == 3)
            {
              if (((this.selectedObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) && (MessageObject.isNewGifDocument(this.selectedObject.messageOwner.media.webpage.document)))
              {
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToGIFs", 2131494289));
                localArrayList.add(Integer.valueOf(11));
              }
              label1671:
              if ((!this.selectedObject.needDrawBluredPreview()) && (!this.selectedObject.isLiveLocation()))
              {
                ((ArrayList)localObject2).add(LocaleController.getString("Forward", 2131493548));
                localArrayList.add(Integer.valueOf(2));
              }
              if (j == 0) {
                break label2875;
              }
              ((ArrayList)localObject2).add(LocaleController.getString("UnpinMessage", 2131494514));
              localArrayList.add(Integer.valueOf(14));
            }
            for (;;)
            {
              if (k != 0)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("Edit", 2131493397));
                localArrayList.add(Integer.valueOf(12));
              }
              if ((this.selectedObject.contentType == 0) && (this.selectedObject.getId() > 0) && (!this.selectedObject.isOut()) && ((ChatObject.isChannel(this.currentChat)) || ((this.currentUser != null) && (this.currentUser.bot))))
              {
                ((ArrayList)localObject2).add(LocaleController.getString("ReportChat", 2131494238));
                localArrayList.add(Integer.valueOf(23));
              }
              if (!localMessageObject.canDeleteMessage(this.currentChat)) {
                break;
              }
              ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
              localArrayList.add(Integer.valueOf(1));
              break;
              if (i1 == 4)
              {
                if (this.selectedObject.isVideo())
                {
                  if (this.selectedObject.needDrawBluredPreview()) {
                    break label1671;
                  }
                  ((ArrayList)localObject2).add(LocaleController.getString("SaveToGallery", 2131494290));
                  localArrayList.add(Integer.valueOf(4));
                  ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                  localArrayList.add(Integer.valueOf(6));
                  break label1671;
                }
                if (this.selectedObject.isMusic())
                {
                  ((ArrayList)localObject2).add(LocaleController.getString("SaveToMusic", 2131494292));
                  localArrayList.add(Integer.valueOf(10));
                  ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                  localArrayList.add(Integer.valueOf(6));
                  break label1671;
                }
                if (this.selectedObject.getDocument() != null)
                {
                  if (MessageObject.isNewGifDocument(this.selectedObject.getDocument()))
                  {
                    ((ArrayList)localObject2).add(LocaleController.getString("SaveToGIFs", 2131494289));
                    localArrayList.add(Integer.valueOf(11));
                  }
                  ((ArrayList)localObject2).add(LocaleController.getString("SaveToDownloads", 2131494288));
                  localArrayList.add(Integer.valueOf(10));
                  ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                  localArrayList.add(Integer.valueOf(6));
                  break label1671;
                }
                if (this.selectedObject.needDrawBluredPreview()) {
                  break label1671;
                }
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToGallery", 2131494290));
                localArrayList.add(Integer.valueOf(4));
                break label1671;
              }
              if (i1 == 5)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("ApplyLocalizationFile", 2131492983));
                localArrayList.add(Integer.valueOf(5));
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToDownloads", 2131494288));
                localArrayList.add(Integer.valueOf(10));
                ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                localArrayList.add(Integer.valueOf(6));
                break label1671;
              }
              if (i1 == 10)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("ApplyThemeFile", 2131492985));
                localArrayList.add(Integer.valueOf(5));
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToDownloads", 2131494288));
                localArrayList.add(Integer.valueOf(10));
                ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                localArrayList.add(Integer.valueOf(6));
                break label1671;
              }
              if (i1 == 6)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToGallery", 2131494290));
                localArrayList.add(Integer.valueOf(7));
                ((ArrayList)localObject2).add(LocaleController.getString("SaveToDownloads", 2131494288));
                localArrayList.add(Integer.valueOf(10));
                ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
                localArrayList.add(Integer.valueOf(6));
                break label1671;
              }
              if (i1 == 7)
              {
                if (this.selectedObject.isMask())
                {
                  ((ArrayList)localObject2).add(LocaleController.getString("AddToMasks", 2131492942));
                  localArrayList.add(Integer.valueOf(9));
                  break label1671;
                }
                ((ArrayList)localObject2).add(LocaleController.getString("AddToStickers", 2131492943));
                localArrayList.add(Integer.valueOf(9));
                if (!DataQuery.getInstance(this.currentAccount).isStickerInFavorites(this.selectedObject.getDocument()))
                {
                  if (!DataQuery.getInstance(this.currentAccount).canAddStickerToFavorites()) {
                    break label1671;
                  }
                  ((ArrayList)localObject2).add(LocaleController.getString("AddToFavorites", 2131492941));
                  localArrayList.add(Integer.valueOf(20));
                  break label1671;
                }
                ((ArrayList)localObject2).add(LocaleController.getString("DeleteFromFavorites", 2131493369));
                localArrayList.add(Integer.valueOf(21));
                break label1671;
              }
              if (i1 == 8)
              {
                paramView = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.selectedObject.messageOwner.media.user_id));
                if ((paramView != null) && (paramView.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(paramView.id)) == null))
                {
                  ((ArrayList)localObject2).add(LocaleController.getString("AddContactTitle", 2131492928));
                  localArrayList.add(Integer.valueOf(15));
                }
                if (TextUtils.isEmpty(this.selectedObject.messageOwner.media.phone_number)) {
                  break label1671;
                }
                ((ArrayList)localObject2).add(LocaleController.getString("Copy", 2131493303));
                localArrayList.add(Integer.valueOf(16));
                ((ArrayList)localObject2).add(LocaleController.getString("Call", 2131493105));
                localArrayList.add(Integer.valueOf(17));
                break label1671;
              }
              if (i1 != 9) {
                break label1671;
              }
              if (!DataQuery.getInstance(this.currentAccount).isStickerInFavorites(this.selectedObject.getDocument()))
              {
                ((ArrayList)localObject2).add(LocaleController.getString("AddToFavorites", 2131492941));
                localArrayList.add(Integer.valueOf(20));
                break label1671;
              }
              ((ArrayList)localObject2).add(LocaleController.getString("DeleteFromFavorites", 2131493369));
              localArrayList.add(Integer.valueOf(21));
              break label1671;
              label2875:
              if (i != 0)
              {
                ((ArrayList)localObject2).add(LocaleController.getString("PinMessage", 2131494166));
                localArrayList.add(Integer.valueOf(13));
              }
            }
          }
          if (m != 0)
          {
            ((ArrayList)localObject2).add(LocaleController.getString("Reply", 2131494235));
            localArrayList.add(Integer.valueOf(8));
          }
          if ((this.selectedObject.type == 0) || (this.selectedObject.caption != null))
          {
            ((ArrayList)localObject2).add(LocaleController.getString("Copy", 2131493303));
            localArrayList.add(Integer.valueOf(3));
          }
          if (i1 != 4) {
            break label3248;
          }
          if (!this.selectedObject.isVideo()) {
            break label3080;
          }
          ((ArrayList)localObject2).add(LocaleController.getString("SaveToGallery", 2131494290));
          localArrayList.add(Integer.valueOf(4));
          ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
          localArrayList.add(Integer.valueOf(6));
        }
      }
    }
    for (;;)
    {
      ((ArrayList)localObject2).add(LocaleController.getString("Delete", 2131493356));
      localArrayList.add(Integer.valueOf(1));
      break label777;
      break;
      label3080:
      if (this.selectedObject.isMusic())
      {
        ((ArrayList)localObject2).add(LocaleController.getString("SaveToMusic", 2131494292));
        localArrayList.add(Integer.valueOf(10));
        ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
        localArrayList.add(Integer.valueOf(6));
      }
      else if ((!this.selectedObject.isVideo()) && (this.selectedObject.getDocument() != null))
      {
        ((ArrayList)localObject2).add(LocaleController.getString("SaveToDownloads", 2131494288));
        localArrayList.add(Integer.valueOf(10));
        ((ArrayList)localObject2).add(LocaleController.getString("ShareFile", 2131494383));
        localArrayList.add(Integer.valueOf(6));
      }
      else
      {
        ((ArrayList)localObject2).add(LocaleController.getString("SaveToGallery", 2131494290));
        localArrayList.add(Integer.valueOf(4));
        continue;
        label3248:
        if (i1 == 5)
        {
          ((ArrayList)localObject2).add(LocaleController.getString("ApplyLocalizationFile", 2131492983));
          localArrayList.add(Integer.valueOf(5));
        }
        else if (i1 == 10)
        {
          ((ArrayList)localObject2).add(LocaleController.getString("ApplyThemeFile", 2131492985));
          localArrayList.add(Integer.valueOf(5));
        }
        else if (i1 == 7)
        {
          ((ArrayList)localObject2).add(LocaleController.getString("AddToStickers", 2131492943));
          localArrayList.add(Integer.valueOf(9));
        }
        else if (i1 == 8)
        {
          paramView = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.selectedObject.messageOwner.media.user_id));
          if ((paramView != null) && (paramView.id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(paramView.id)) == null))
          {
            ((ArrayList)localObject2).add(LocaleController.getString("AddContactTitle", 2131492928));
            localArrayList.add(Integer.valueOf(15));
          }
          if (!TextUtils.isEmpty(this.selectedObject.messageOwner.media.phone_number))
          {
            ((ArrayList)localObject2).add(LocaleController.getString("Copy", 2131493303));
            localArrayList.add(Integer.valueOf(16));
            ((ArrayList)localObject2).add(LocaleController.getString("Call", 2131493105));
            localArrayList.add(Integer.valueOf(17));
          }
        }
      }
    }
    label3531:
    paramView = this.actionBar.createActionMode();
    localObject1 = paramView.getItem(11);
    if (localObject1 != null) {
      ((View)localObject1).setVisibility(0);
    }
    paramView = paramView.getItem(12);
    if (paramView != null) {
      paramView.setVisibility(0);
    }
    this.actionBar.showActionMode();
    updatePinnedMessageView(true);
    paramView = new AnimatorSet();
    localObject1 = new ArrayList();
    int i = 0;
    while (i < this.actionModeViews.size())
    {
      localObject2 = (View)this.actionModeViews.get(i);
      ((View)localObject2).setPivotY(ActionBar.getCurrentActionBarHeight() / 2);
      AndroidUtilities.clearDrawableAnimation((View)localObject2);
      ((ArrayList)localObject1).add(ObjectAnimator.ofFloat(localObject2, "scaleY", new float[] { 0.1F, 1.0F }));
      i += 1;
    }
    paramView.playTogether((Collection)localObject1);
    paramView.setDuration(250L);
    paramView.start();
    addToSelectedMessages(localMessageObject, paramBoolean2);
    this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), false);
    updateVisibleRows();
  }
  
  private TextureView createTextureView(boolean paramBoolean)
  {
    if (this.parentLayout == null) {
      return null;
    }
    if (this.roundVideoContainer == null)
    {
      if (Build.VERSION.SDK_INT < 21) {
        break label252;
      }
      this.roundVideoContainer = new FrameLayout(getParentActivity())
      {
        public void setTranslationY(float paramAnonymousFloat)
        {
          super.setTranslationY(paramAnonymousFloat);
          ChatActivity.this.contentView.invalidate();
        }
      };
      this.roundVideoContainer.setOutlineProvider(new ViewOutlineProvider()
      {
        @TargetApi(21)
        public void getOutline(View paramAnonymousView, Outline paramAnonymousOutline)
        {
          paramAnonymousOutline.setOval(0, 0, AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize);
        }
      });
      this.roundVideoContainer.setClipToOutline(true);
    }
    for (;;)
    {
      this.roundVideoContainer.setWillNotDraw(false);
      this.roundVideoContainer.setVisibility(4);
      this.aspectRatioFrameLayout = new AspectRatioFrameLayout(getParentActivity());
      this.aspectRatioFrameLayout.setBackgroundColor(0);
      if (paramBoolean) {
        this.roundVideoContainer.addView(this.aspectRatioFrameLayout, LayoutHelper.createFrame(-1, -1.0F));
      }
      this.videoTextureView = new TextureView(getParentActivity());
      this.videoTextureView.setOpaque(false);
      this.aspectRatioFrameLayout.addView(this.videoTextureView, LayoutHelper.createFrame(-1, -1.0F));
      ViewGroup localViewGroup2 = (ViewGroup)this.roundVideoContainer.getParent();
      ViewGroup localViewGroup1 = localViewGroup2;
      if (localViewGroup2 != null)
      {
        localViewGroup1 = localViewGroup2;
        if (localViewGroup2 != this.contentView)
        {
          localViewGroup2.removeView(this.roundVideoContainer);
          localViewGroup1 = null;
        }
      }
      if (localViewGroup1 == null) {
        this.contentView.addView(this.roundVideoContainer, 1, new FrameLayout.LayoutParams(AndroidUtilities.roundMessageSize, AndroidUtilities.roundMessageSize));
      }
      this.roundVideoContainer.setVisibility(4);
      this.aspectRatioFrameLayout.setDrawingReady(false);
      return this.videoTextureView;
      label252:
      this.roundVideoContainer = new FrameLayout(getParentActivity())
      {
        protected void dispatchDraw(Canvas paramAnonymousCanvas)
        {
          super.dispatchDraw(paramAnonymousCanvas);
          paramAnonymousCanvas.drawPath(ChatActivity.this.aspectPath, ChatActivity.this.aspectPaint);
        }
        
        protected void onSizeChanged(int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
        {
          super.onSizeChanged(paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
          ChatActivity.this.aspectPath.reset();
          ChatActivity.this.aspectPath.addCircle(paramAnonymousInt1 / 2, paramAnonymousInt2 / 2, paramAnonymousInt1 / 2, Path.Direction.CW);
          ChatActivity.this.aspectPath.toggleInverseFillType();
        }
        
        public void setTranslationY(float paramAnonymousFloat)
        {
          super.setTranslationY(paramAnonymousFloat);
          ChatActivity.this.contentView.invalidate();
        }
        
        public void setVisibility(int paramAnonymousInt)
        {
          super.setVisibility(paramAnonymousInt);
          if (paramAnonymousInt == 0) {
            setLayerType(2, null);
          }
        }
      };
      this.aspectPath = new Path();
      this.aspectPaint = new Paint(1);
      this.aspectPaint.setColor(-16777216);
      this.aspectPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));
    }
  }
  
  private ArrayList<MessageObject> createVoiceMessagesPlaylist(MessageObject paramMessageObject, boolean paramBoolean)
  {
    ArrayList localArrayList = new ArrayList();
    localArrayList.add(paramMessageObject);
    int j = paramMessageObject.getId();
    paramMessageObject.getDialogId();
    if (j != 0)
    {
      int i = this.messages.size() - 1;
      if (i >= 0)
      {
        MessageObject localMessageObject = (MessageObject)this.messages.get(i);
        if ((localMessageObject.getDialogId() == this.mergeDialogId) && (paramMessageObject.getDialogId() != this.mergeDialogId)) {}
        for (;;)
        {
          i -= 1;
          break;
          if (((this.currentEncryptedChat == null) && (localMessageObject.getId() > j)) || ((this.currentEncryptedChat != null) && (localMessageObject.getId() < j) && ((localMessageObject.isVoice()) || (localMessageObject.isRoundVideo())) && ((!paramBoolean) || ((localMessageObject.isContentUnread()) && (!localMessageObject.isOut()))))) {
            localArrayList.add(localMessageObject);
          }
        }
      }
    }
    return localArrayList;
  }
  
  private void destroyTextureView()
  {
    if ((this.roundVideoContainer == null) || (this.roundVideoContainer.getParent() == null)) {}
    do
    {
      return;
      this.contentView.removeView(this.roundVideoContainer);
      this.aspectRatioFrameLayout.setDrawingReady(false);
      this.roundVideoContainer.setVisibility(4);
    } while (Build.VERSION.SDK_INT >= 21);
    this.roundVideoContainer.setLayerType(0, null);
  }
  
  private void fixLayout()
  {
    if (this.avatarContainer != null) {
      this.avatarContainer.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
      {
        public boolean onPreDraw()
        {
          if (ChatActivity.this.avatarContainer != null) {
            ChatActivity.this.avatarContainer.getViewTreeObserver().removeOnPreDrawListener(this);
          }
          return ChatActivity.this.fixLayoutInternal();
        }
      });
    }
  }
  
  private boolean fixLayoutInternal()
  {
    if ((!AndroidUtilities.isTablet()) && (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 2)) {
      this.selectedMessagesCountTextView.setTextSize(18);
    }
    Object localObject1;
    for (;;)
    {
      localObject1 = null;
      int j = this.chatListView.getChildCount();
      int i = 0;
      while (i < j)
      {
        Object localObject2 = this.chatListView.getChildAt(i);
        Object localObject3 = localObject1;
        if ((localObject2 instanceof ChatMessageCell))
        {
          MessageObject.GroupedMessages localGroupedMessages = ((ChatMessageCell)localObject2).getCurrentMessagesGroup();
          localObject3 = localObject1;
          if (localGroupedMessages != null)
          {
            localObject3 = localObject1;
            if (localGroupedMessages.hasSibling)
            {
              localObject2 = localObject1;
              if (localObject1 == null) {
                localObject2 = new HashMap();
              }
              localObject3 = localObject2;
              if (!((HashMap)localObject2).containsKey(Long.valueOf(localGroupedMessages.groupId)))
              {
                ((HashMap)localObject2).put(Long.valueOf(localGroupedMessages.groupId), localGroupedMessages);
                localObject1 = (MessageObject)localGroupedMessages.messages.get(localGroupedMessages.messages.size() - 1);
                int k = this.messages.indexOf(localObject1);
                localObject3 = localObject2;
                if (k >= 0)
                {
                  this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + k, localGroupedMessages.messages.size());
                  localObject3 = localObject2;
                }
              }
            }
          }
        }
        i += 1;
        localObject1 = localObject3;
      }
      this.selectedMessagesCountTextView.setTextSize(20);
    }
    if (AndroidUtilities.isTablet())
    {
      if ((AndroidUtilities.isSmallTablet()) && (ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == 1))
      {
        this.actionBar.setBackButtonDrawable(new BackDrawable(false));
        if ((this.fragmentContextView != null) && (this.fragmentContextView.getParent() == null)) {
          ((ViewGroup)this.fragmentView).addView(this.fragmentContextView, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
        }
        return false;
      }
      localObject1 = this.actionBar;
      if ((this.parentLayout == null) || (this.parentLayout.fragmentsStack.isEmpty()) || (this.parentLayout.fragmentsStack.get(0) == this) || (this.parentLayout.fragmentsStack.size() == 1)) {}
      for (boolean bool = true;; bool = false)
      {
        ((ActionBar)localObject1).setBackButtonDrawable(new BackDrawable(bool));
        if ((this.fragmentContextView == null) || (this.fragmentContextView.getParent() == null)) {
          break;
        }
        this.fragmentView.setPadding(0, 0, 0, 0);
        ((ViewGroup)this.fragmentView).removeView(this.fragmentContextView);
        break;
      }
    }
    return true;
  }
  
  private void forwardMessages(ArrayList<MessageObject> paramArrayList, boolean paramBoolean)
  {
    if ((paramArrayList == null) || (paramArrayList.isEmpty())) {}
    for (;;)
    {
      return;
      if (!paramBoolean)
      {
        AlertsCreator.showSendMediaAlert(SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramArrayList, this.dialog_id), this);
        return;
      }
      paramArrayList = paramArrayList.iterator();
      while (paramArrayList.hasNext())
      {
        MessageObject localMessageObject = (MessageObject)paramArrayList.next();
        SendMessagesHelper.getInstance(this.currentAccount).processForwardFromMyName(localMessageObject, this.dialog_id);
      }
    }
  }
  
  private String getMessageContent(MessageObject paramMessageObject, int paramInt, boolean paramBoolean)
  {
    String str2 = "";
    String str1 = str2;
    Object localObject;
    if (paramBoolean)
    {
      str1 = str2;
      if (paramInt != paramMessageObject.messageOwner.from_id)
      {
        if (paramMessageObject.messageOwner.from_id <= 0) {
          break label146;
        }
        localObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramMessageObject.messageOwner.from_id));
        str1 = str2;
        if (localObject != null) {
          str1 = ContactsController.formatName(((TLRPC.User)localObject).first_name, ((TLRPC.User)localObject).last_name) + ":\n";
        }
      }
    }
    while ((paramMessageObject.type == 0) && (paramMessageObject.messageOwner.message != null))
    {
      return str1 + paramMessageObject.messageOwner.message;
      label146:
      str1 = str2;
      if (paramMessageObject.messageOwner.from_id < 0)
      {
        localObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(-paramMessageObject.messageOwner.from_id));
        str1 = str2;
        if (localObject != null) {
          str1 = ((TLRPC.Chat)localObject).title + ":\n";
        }
      }
    }
    if ((paramMessageObject.messageOwner.media != null) && (paramMessageObject.messageOwner.message != null)) {
      return str1 + paramMessageObject.messageOwner.message;
    }
    return str1 + paramMessageObject.messageText;
  }
  
  private int getMessageType(MessageObject paramMessageObject)
  {
    int j = 0;
    int i;
    if (paramMessageObject == null) {
      i = -1;
    }
    String str;
    do
    {
      return i;
      if (this.currentEncryptedChat == null)
      {
        if ((this.isBroadcast) && (paramMessageObject.getId() <= 0) && (paramMessageObject.isSendError())) {
          i = 1;
        }
        for (;;)
        {
          if (((!this.isBroadcast) && (paramMessageObject.getId() <= 0) && (paramMessageObject.isOut())) || (i != 0))
          {
            if (paramMessageObject.isSendError())
            {
              i = j;
              if (!paramMessageObject.isMediaEmpty()) {
                break;
              }
              return 20;
              i = 0;
              continue;
            }
            return -1;
          }
        }
        if (paramMessageObject.type == 6) {
          return -1;
        }
        if ((paramMessageObject.type == 10) || (paramMessageObject.type == 11) || (paramMessageObject.type == 16))
        {
          if (paramMessageObject.getId() == 0) {
            return -1;
          }
          return 1;
        }
        if (paramMessageObject.isVoice()) {
          return 2;
        }
        if (paramMessageObject.isSticker())
        {
          paramMessageObject = paramMessageObject.getInputStickerSet();
          if ((paramMessageObject instanceof TLRPC.TL_inputStickerSetID))
          {
            if (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.id)) {
              return 7;
            }
          }
          else if (((paramMessageObject instanceof TLRPC.TL_inputStickerSetShortName)) && (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.short_name))) {
            return 7;
          }
          return 9;
        }
        if (((!paramMessageObject.isRoundVideo()) || ((paramMessageObject.isRoundVideo()) && (BuildVars.DEBUG_VERSION))) && (((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto)) || (paramMessageObject.getDocument() != null) || (paramMessageObject.isMusic()) || (paramMessageObject.isVideo())))
        {
          j = 0;
          i = j;
          if (!TextUtils.isEmpty(paramMessageObject.messageOwner.attachPath))
          {
            i = j;
            if (new File(paramMessageObject.messageOwner.attachPath).exists()) {
              i = 1;
            }
          }
          j = i;
          if (i == 0)
          {
            j = i;
            if (FileLoader.getPathToMessage(paramMessageObject.messageOwner).exists()) {
              j = 1;
            }
          }
          if (j != 0)
          {
            if (paramMessageObject.getDocument() != null)
            {
              str = paramMessageObject.getDocument().mime_type;
              if (str != null)
              {
                if (paramMessageObject.getDocumentName().toLowerCase().endsWith("attheme")) {
                  return 10;
                }
                if (str.endsWith("/xml")) {
                  return 5;
                }
                if ((str.endsWith("/png")) || (str.endsWith("/jpg")) || (str.endsWith("/jpeg"))) {
                  return 6;
                }
              }
            }
            return 4;
          }
        }
        else
        {
          if (paramMessageObject.type == 12) {
            return 8;
          }
          if (paramMessageObject.isMediaEmpty()) {
            return 3;
          }
        }
        return 2;
      }
      if (paramMessageObject.isSending()) {
        return -1;
      }
      if (paramMessageObject.type == 6) {
        return -1;
      }
      if (!paramMessageObject.isSendError()) {
        break;
      }
      i = j;
    } while (!paramMessageObject.isMediaEmpty());
    return 20;
    if ((paramMessageObject.type == 10) || (paramMessageObject.type == 11))
    {
      if ((paramMessageObject.getId() == 0) || (paramMessageObject.isSending())) {
        return -1;
      }
      return 1;
    }
    if (paramMessageObject.isVoice()) {
      return 2;
    }
    if (paramMessageObject.isSticker())
    {
      paramMessageObject = paramMessageObject.getInputStickerSet();
      if (((paramMessageObject instanceof TLRPC.TL_inputStickerSetShortName)) && (!DataQuery.getInstance(this.currentAccount).isStickerPackInstalled(paramMessageObject.short_name))) {
        return 7;
      }
    }
    else if ((!paramMessageObject.isRoundVideo()) && (((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaPhoto)) || (paramMessageObject.getDocument() != null) || (paramMessageObject.isMusic()) || (paramMessageObject.isVideo())))
    {
      j = 0;
      i = j;
      if (!TextUtils.isEmpty(paramMessageObject.messageOwner.attachPath))
      {
        i = j;
        if (new File(paramMessageObject.messageOwner.attachPath).exists()) {
          i = 1;
        }
      }
      j = i;
      if (i == 0)
      {
        j = i;
        if (FileLoader.getPathToMessage(paramMessageObject.messageOwner).exists()) {
          j = 1;
        }
      }
      if (j != 0)
      {
        if (paramMessageObject.getDocument() != null)
        {
          str = paramMessageObject.getDocument().mime_type;
          if ((str != null) && (str.endsWith("text/xml"))) {
            return 5;
          }
        }
        if (paramMessageObject.messageOwner.ttl <= 0) {
          return 4;
        }
      }
    }
    else
    {
      if (paramMessageObject.type == 12) {
        return 8;
      }
      if (paramMessageObject.isMediaEmpty()) {
        return 3;
      }
    }
    return 2;
  }
  
  private int getScrollOffsetForMessage(MessageObject paramMessageObject)
  {
    int i = Integer.MAX_VALUE;
    MessageObject.GroupedMessages localGroupedMessages = getValidGroupedMessage(paramMessageObject);
    float f6;
    float f3;
    float f4;
    float f2;
    if (localGroupedMessages != null)
    {
      MessageObject.GroupedMessagePosition localGroupedMessagePosition1 = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(paramMessageObject);
      f6 = Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5F;
      label87:
      MessageObject.GroupedMessagePosition localGroupedMessagePosition2;
      float f1;
      float f5;
      if (localGroupedMessagePosition1.siblingHeights != null)
      {
        f3 = localGroupedMessagePosition1.siblingHeights[0];
        f4 = 0.0F;
        f2 = 0.0F;
        SparseBooleanArray localSparseBooleanArray = new SparseBooleanArray();
        i = 0;
        if (i >= localGroupedMessages.posArray.size()) {
          break label241;
        }
        localGroupedMessagePosition2 = (MessageObject.GroupedMessagePosition)localGroupedMessages.posArray.get(i);
        f1 = f2;
        f5 = f4;
        if (localSparseBooleanArray.indexOfKey(localGroupedMessagePosition2.minY) < 0)
        {
          f1 = f2;
          f5 = f4;
          if (localGroupedMessagePosition2.siblingHeights == null)
          {
            localSparseBooleanArray.put(localGroupedMessagePosition2.minY, true);
            if (localGroupedMessagePosition2.minY >= localGroupedMessagePosition1.minY) {
              break label215;
            }
            f1 = f2 - localGroupedMessagePosition2.ph;
          }
        }
      }
      for (;;)
      {
        f5 = f4 + localGroupedMessagePosition2.ph;
        i += 1;
        f2 = f1;
        f4 = f5;
        break label87;
        f3 = localGroupedMessagePosition1.ph;
        break;
        label215:
        f1 = f2;
        if (localGroupedMessagePosition2.minY > localGroupedMessagePosition1.minY) {
          f1 = f2 + localGroupedMessagePosition2.ph;
        }
      }
      label241:
      if (Math.abs(f4 - f3) >= 0.02F) {
        break label325;
      }
    }
    label325:
    for (i = (int)(this.chatListView.getMeasuredHeight() - f4 * f6) / 2 - this.chatListView.getPaddingTop() - AndroidUtilities.dp(7.0F);; i = (int)(this.chatListView.getMeasuredHeight() - (f3 + f2) * f6) / 2 - this.chatListView.getPaddingTop() - AndroidUtilities.dp(7.0F))
    {
      int j = i;
      if (i == Integer.MAX_VALUE) {
        j = (this.chatListView.getMeasuredHeight() - paramMessageObject.getApproximateHeight()) / 2;
      }
      return Math.max(0, j);
    }
  }
  
  private MessageObject.GroupedMessages getValidGroupedMessage(MessageObject paramMessageObject)
  {
    Object localObject = null;
    if (paramMessageObject.getGroupId() != 0L)
    {
      MessageObject.GroupedMessages localGroupedMessages = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(paramMessageObject.getGroupId());
      localObject = localGroupedMessages;
      if (localGroupedMessages != null) {
        if (localGroupedMessages.messages.size() > 1)
        {
          localObject = localGroupedMessages;
          if (localGroupedMessages.positions.get(paramMessageObject) != null) {}
        }
        else
        {
          localObject = null;
        }
      }
    }
    return (MessageObject.GroupedMessages)localObject;
  }
  
  private void hideFloatingDateView(boolean paramBoolean)
  {
    if ((this.floatingDateView.getTag() != null) && (!this.currentFloatingDateOnScreen) && ((!this.scrollingFloatingDate) || (this.currentFloatingTopIsNotMessage)))
    {
      this.floatingDateView.setTag(null);
      if (paramBoolean)
      {
        this.floatingDateAnimation = new AnimatorSet();
        this.floatingDateAnimation.setDuration(150L);
        this.floatingDateAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.floatingDateView, "alpha", new float[] { 0.0F }) });
        this.floatingDateAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if (paramAnonymousAnimator.equals(ChatActivity.this.floatingDateAnimation)) {
              ChatActivity.access$12602(ChatActivity.this, null);
            }
          }
        });
        this.floatingDateAnimation.setStartDelay(500L);
        this.floatingDateAnimation.start();
      }
    }
    else
    {
      return;
    }
    if (this.floatingDateAnimation != null)
    {
      this.floatingDateAnimation.cancel();
      this.floatingDateAnimation = null;
    }
    this.floatingDateView.setAlpha(0.0F);
  }
  
  private void hidePinnedMessageView(boolean paramBoolean)
  {
    if (this.pinnedMessageView.getTag() == null)
    {
      this.pinnedMessageView.setTag(Integer.valueOf(1));
      if (this.pinnedMessageViewAnimator != null)
      {
        this.pinnedMessageViewAnimator.cancel();
        this.pinnedMessageViewAnimator = null;
      }
      if (paramBoolean)
      {
        this.pinnedMessageViewAnimator = new AnimatorSet();
        this.pinnedMessageViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pinnedMessageView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
        this.pinnedMessageViewAnimator.setDuration(200L);
        this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$26002(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator)))
            {
              ChatActivity.this.pinnedMessageView.setVisibility(8);
              ChatActivity.access$26002(ChatActivity.this, null);
            }
          }
        });
        this.pinnedMessageViewAnimator.start();
      }
    }
    else
    {
      return;
    }
    this.pinnedMessageView.setTranslationY(-AndroidUtilities.dp(50.0F));
    this.pinnedMessageView.setVisibility(8);
  }
  
  private void hideVoiceHint()
  {
    this.voiceHintAnimation = new AnimatorSet();
    this.voiceHintAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.voiceHintTextView, "alpha", new float[] { 0.0F }) });
    this.voiceHintAnimation.addListener(new AnimatorListenerAdapter()
    {
      public void onAnimationCancel(Animator paramAnonymousAnimator)
      {
        if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
        {
          ChatActivity.access$23002(ChatActivity.this, null);
          ChatActivity.access$23002(ChatActivity.this, null);
        }
      }
      
      public void onAnimationEnd(Animator paramAnonymousAnimator)
      {
        if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
        {
          ChatActivity.access$22902(ChatActivity.this, null);
          ChatActivity.access$23002(ChatActivity.this, null);
          if (ChatActivity.this.voiceHintTextView != null) {
            ChatActivity.this.voiceHintTextView.setVisibility(8);
          }
        }
      }
    });
    this.voiceHintAnimation.setDuration(300L);
    this.voiceHintAnimation.start();
  }
  
  private void initStickers()
  {
    if ((this.chatActivityEnterView == null) || (getParentActivity() == null) || (this.stickersAdapter != null) || ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 23))) {
      return;
    }
    if (this.stickersAdapter != null) {
      this.stickersAdapter.onDestroy();
    }
    this.stickersListView.setPadding(AndroidUtilities.dp(18.0F), 0, AndroidUtilities.dp(18.0F), 0);
    RecyclerListView localRecyclerListView = this.stickersListView;
    Object localObject = new StickersAdapter(getParentActivity(), new StickersAdapter.StickersAdapterDelegate()
    {
      public void needChangePanelVisibility(final boolean paramAnonymousBoolean)
      {
        float f2 = 1.0F;
        if (((paramAnonymousBoolean) && (ChatActivity.this.stickersPanel.getVisibility() == 0)) || ((!paramAnonymousBoolean) && (ChatActivity.this.stickersPanel.getVisibility() == 8))) {}
        label165:
        label249:
        label254:
        do
        {
          return;
          Object localObject;
          int i;
          FrameLayout localFrameLayout;
          float f1;
          if (paramAnonymousBoolean)
          {
            ChatActivity.this.stickersListView.scrollToPosition(0);
            localObject = ChatActivity.this.stickersPanel;
            if (ChatActivity.this.allowStickersPanel)
            {
              i = 0;
              ((FrameLayout)localObject).setVisibility(i);
            }
          }
          else
          {
            if (ChatActivity.this.runningAnimation != null)
            {
              ChatActivity.this.runningAnimation.cancel();
              ChatActivity.access$22502(ChatActivity.this, null);
            }
            if (ChatActivity.this.stickersPanel.getVisibility() == 4) {
              continue;
            }
            ChatActivity.access$22502(ChatActivity.this, new AnimatorSet());
            localObject = ChatActivity.this.runningAnimation;
            localFrameLayout = ChatActivity.this.stickersPanel;
            if (!paramAnonymousBoolean) {
              break label249;
            }
            f1 = 0.0F;
            if (!paramAnonymousBoolean) {
              break label254;
            }
          }
          for (;;)
          {
            ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(localFrameLayout, "alpha", new float[] { f1, f2 }) });
            ChatActivity.this.runningAnimation.setDuration(150L);
            ChatActivity.this.runningAnimation.addListener(new AnimatorListenerAdapter()
            {
              public void onAnimationCancel(Animator paramAnonymous2Animator)
              {
                if ((ChatActivity.this.runningAnimation != null) && (ChatActivity.this.runningAnimation.equals(paramAnonymous2Animator))) {
                  ChatActivity.access$22502(ChatActivity.this, null);
                }
              }
              
              public void onAnimationEnd(Animator paramAnonymous2Animator)
              {
                if ((ChatActivity.this.runningAnimation != null) && (ChatActivity.this.runningAnimation.equals(paramAnonymous2Animator)))
                {
                  if (!paramAnonymousBoolean)
                  {
                    ChatActivity.this.stickersAdapter.clearStickers();
                    ChatActivity.this.stickersPanel.setVisibility(8);
                    if (StickerPreviewViewer.getInstance().isVisible()) {
                      StickerPreviewViewer.getInstance().close();
                    }
                    StickerPreviewViewer.getInstance().reset();
                  }
                  ChatActivity.access$22502(ChatActivity.this, null);
                }
              }
            });
            ChatActivity.this.runningAnimation.start();
            return;
            i = 4;
            break;
            f1 = 1.0F;
            break label165;
            f2 = 0.0F;
          }
        } while (paramAnonymousBoolean);
        ChatActivity.this.stickersPanel.setVisibility(8);
      }
    });
    this.stickersAdapter = ((StickersAdapter)localObject);
    localRecyclerListView.setAdapter((RecyclerView.Adapter)localObject);
    localRecyclerListView = this.stickersListView;
    localObject = new RecyclerListView.OnItemClickListener()
    {
      public void onItemClick(View paramAnonymousView, int paramAnonymousInt)
      {
        paramAnonymousView = ChatActivity.this.stickersAdapter.getItem(paramAnonymousInt);
        if ((paramAnonymousView instanceof TLRPC.TL_document))
        {
          SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendSticker(paramAnonymousView, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject);
          ChatActivity.this.showReplyPanel(false, null, null, null, false);
          ChatActivity.this.chatActivityEnterView.addStickerToRecent(paramAnonymousView);
        }
        ChatActivity.this.chatActivityEnterView.setFieldText("");
      }
    };
    this.stickersOnItemClickListener = ((RecyclerListView.OnItemClickListener)localObject);
    localRecyclerListView.setOnItemClickListener((RecyclerListView.OnItemClickListener)localObject);
  }
  
  private void jumpToDate(int paramInt)
  {
    if (this.messages.isEmpty()) {}
    do
    {
      for (;;)
      {
        return;
        localObject = (MessageObject)this.messages.get(0);
        MessageObject localMessageObject = (MessageObject)this.messages.get(this.messages.size() - 1);
        if ((((MessageObject)localObject).messageOwner.date < paramInt) || (localMessageObject.messageOwner.date > paramInt)) {
          break;
        }
        i = this.messages.size() - 1;
        while (i >= 0)
        {
          localObject = (MessageObject)this.messages.get(i);
          if ((((MessageObject)localObject).messageOwner.date >= paramInt) && (((MessageObject)localObject).getId() != 0))
          {
            i = ((MessageObject)localObject).getId();
            if (((MessageObject)localObject).getDialogId() == this.mergeDialogId) {}
            for (paramInt = 1;; paramInt = 0)
            {
              scrollToMessageId(i, 0, false, paramInt, false);
              return;
            }
          }
          i -= 1;
        }
      }
    } while ((int)this.dialog_id == 0);
    clearChatData();
    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
    Object localObject = MessagesController.getInstance(this.currentAccount);
    long l = this.dialog_id;
    int i = this.classGuid;
    boolean bool = ChatObject.isChannel(this.currentChat);
    int j = this.lastLoadIndex;
    this.lastLoadIndex = (j + 1);
    ((MessagesController)localObject).loadMessages(l, 30, 0, paramInt, true, 0, i, 4, 0, bool, j);
    this.floatingDateView.setAlpha(0.0F);
    this.floatingDateView.setTag(null);
  }
  
  private void mentionListViewUpdateLayout()
  {
    if (this.mentionListView.getChildCount() <= 0)
    {
      this.mentionListViewScrollOffsetY = 0;
      this.mentionListViewLastViewPosition = -1;
    }
    label185:
    label194:
    label314:
    label317:
    for (;;)
    {
      return;
      Object localObject = this.mentionListView.getChildAt(this.mentionListView.getChildCount() - 1);
      RecyclerListView.Holder localHolder = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject);
      int i;
      if (this.mentionLayoutManager.getReverseLayout())
      {
        if (localHolder != null)
        {
          this.mentionListViewLastViewPosition = localHolder.getAdapterPosition();
          this.mentionListViewLastViewTop = ((View)localObject).getBottom();
          localObject = this.mentionListView.getChildAt(0);
          localHolder = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject);
          if ((((View)localObject).getBottom() >= this.mentionListView.getMeasuredHeight()) || (localHolder == null) || (localHolder.getAdapterPosition() != 0)) {
            break label185;
          }
        }
        for (i = ((View)localObject).getBottom();; i = this.mentionListView.getMeasuredHeight())
        {
          if (this.mentionListViewScrollOffsetY == i) {
            break label194;
          }
          localObject = this.mentionListView;
          this.mentionListViewScrollOffsetY = i;
          ((RecyclerListView)localObject).setBottomGlowOffset(i);
          this.mentionListView.setTopGlowOffset(0);
          this.mentionListView.invalidate();
          this.mentionContainer.invalidate();
          return;
          this.mentionListViewLastViewPosition = -1;
          break;
        }
      }
      else
      {
        if (localHolder != null)
        {
          this.mentionListViewLastViewPosition = localHolder.getAdapterPosition();
          this.mentionListViewLastViewTop = ((View)localObject).getTop();
          localObject = this.mentionListView.getChildAt(0);
          localHolder = (RecyclerListView.Holder)this.mentionListView.findContainingViewHolder((View)localObject);
          if ((((View)localObject).getTop() <= 0) || (localHolder == null) || (localHolder.getAdapterPosition() != 0)) {
            break label314;
          }
        }
        for (i = ((View)localObject).getTop();; i = 0)
        {
          if (this.mentionListViewScrollOffsetY == i) {
            break label317;
          }
          localObject = this.mentionListView;
          this.mentionListViewScrollOffsetY = i;
          ((RecyclerListView)localObject).setTopGlowOffset(i);
          this.mentionListView.setBottomGlowOffset(0);
          this.mentionListView.invalidate();
          this.mentionContainer.invalidate();
          return;
          this.mentionListViewLastViewPosition = -1;
          break;
        }
      }
    }
  }
  
  private void moveScrollToLastMessage()
  {
    if ((this.chatListView != null) && (!this.messages.isEmpty())) {
      this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
    }
  }
  
  private void openAttachMenu()
  {
    if (getParentActivity() == null) {
      return;
    }
    createChatAttachView();
    this.chatAttachAlert.loadGalleryPhotos();
    if ((Build.VERSION.SDK_INT == 21) || (Build.VERSION.SDK_INT == 22)) {
      this.chatActivityEnterView.closeKeyboard();
    }
    this.chatAttachAlert.init();
    showDialog(this.chatAttachAlert);
  }
  
  private void openSearchWithText(String paramString)
  {
    if (!this.actionBar.isSearchFieldVisible())
    {
      this.avatarContainer.setVisibility(8);
      this.headerItem.setVisibility(8);
      this.attachItem.setVisibility(8);
      this.searchItem.setVisibility(0);
      updateSearchButtons(0, 0, -1);
      updateBottomOverlay();
    }
    if (paramString == null) {}
    for (boolean bool = true;; bool = false)
    {
      this.openSearchKeyboard = bool;
      this.searchItem.openSearch(this.openSearchKeyboard);
      if (paramString != null)
      {
        this.searchItem.getSearchField().setText(paramString);
        this.searchItem.getSearchField().setSelection(this.searchItem.getSearchField().length());
        DataQuery.getInstance(this.currentAccount).searchMessagesInChat(paramString, this.dialog_id, this.mergeDialogId, this.classGuid, 0, this.searchingUserMessages);
      }
      updatePinnedMessageView(true);
      return;
    }
  }
  
  private void processRowSelect(View paramView, boolean paramBoolean)
  {
    MessageObject localMessageObject = null;
    if ((paramView instanceof ChatMessageCell)) {
      localMessageObject = ((ChatMessageCell)paramView).getMessageObject();
    }
    for (;;)
    {
      int i = getMessageType(localMessageObject);
      if ((i >= 2) && (i != 20)) {
        break;
      }
      return;
      if ((paramView instanceof ChatActionCell)) {
        localMessageObject = ((ChatActionCell)paramView).getMessageObject();
      }
    }
    addToSelectedMessages(localMessageObject, paramBoolean);
    updateActionModeTitle();
    updateVisibleRows();
  }
  
  private void processSelectedAttach(int paramInt)
  {
    int i = 1;
    if (paramInt == 0) {
      if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.CAMERA") != 0)) {
        getParentActivity().requestPermissions(new String[] { "android.permission.CAMERA" }, 19);
      }
    }
    Object localObject2;
    do
    {
      do
      {
        return;
        File localFile;
        for (;;)
        {
          try
          {
            Intent localIntent = new Intent("android.media.action.IMAGE_CAPTURE");
            localFile = AndroidUtilities.generatePicturePath();
            if (localFile != null)
            {
              if (Build.VERSION.SDK_INT >= 24)
              {
                localIntent.putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.provider", localFile));
                localIntent.addFlags(2);
                localIntent.addFlags(1);
                this.currentPicturePath = localFile.getAbsolutePath();
              }
            }
            else
            {
              startActivityForResult(localIntent, 0);
              return;
            }
          }
          catch (Exception localException1)
          {
            FileLog.e(localException1);
            return;
          }
          localException1.putExtra("output", Uri.fromFile(localFile));
        }
        Object localObject1;
        if (paramInt == 1)
        {
          if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
          {
            getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
            return;
          }
          if ((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 46)) {}
          for (boolean bool = true;; bool = false)
          {
            localObject1 = new PhotoAlbumPickerActivity(false, bool, true, this);
            ((PhotoAlbumPickerActivity)localObject1).setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate()
            {
              public void didSelectPhotos(ArrayList<SendMessagesHelper.SendingMediaInfo> paramAnonymousArrayList)
              {
                SendMessagesHelper.prepareSendingMedia(paramAnonymousArrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, false, SharedConfig.groupPhotosEnabled);
                ChatActivity.this.showReplyPanel(false, null, null, null, false);
                DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
              }
              
              public void startPhotoSelectActivity()
              {
                try
                {
                  Intent localIntent1 = new Intent();
                  localIntent1.setType("video/*");
                  localIntent1.setAction("android.intent.action.GET_CONTENT");
                  localIntent1.putExtra("android.intent.extra.sizeLimit", 1610612736L);
                  Intent localIntent2 = new Intent("android.intent.action.PICK");
                  localIntent2.setType("image/*");
                  localIntent2 = Intent.createChooser(localIntent2, null);
                  localIntent2.putExtra("android.intent.extra.INITIAL_INTENTS", new Intent[] { localIntent1 });
                  ChatActivity.this.startActivityForResult(localIntent2, 1);
                  return;
                }
                catch (Exception localException)
                {
                  FileLog.e(localException);
                }
              }
            });
            presentFragment((BaseFragment)localObject1);
            return;
          }
        }
        if (paramInt == 2)
        {
          if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.CAMERA") != 0))
          {
            getParentActivity().requestPermissions(new String[] { "android.permission.CAMERA" }, 20);
            return;
          }
          for (;;)
          {
            try
            {
              localObject1 = new Intent("android.media.action.VIDEO_CAPTURE");
              localFile = AndroidUtilities.generateVideoPath();
              if (localFile != null)
              {
                if (Build.VERSION.SDK_INT >= 24)
                {
                  ((Intent)localObject1).putExtra("output", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.provider", localFile));
                  ((Intent)localObject1).addFlags(2);
                  ((Intent)localObject1).addFlags(1);
                  ((Intent)localObject1).putExtra("android.intent.extra.sizeLimit", 1610612736L);
                  this.currentPicturePath = localFile.getAbsolutePath();
                }
              }
              else
              {
                startActivityForResult((Intent)localObject1, 2);
                return;
              }
            }
            catch (Exception localException2)
            {
              FileLog.e(localException2);
              return;
            }
            if (Build.VERSION.SDK_INT >= 18) {
              localException2.putExtra("output", Uri.fromFile(localFile));
            }
          }
        }
        if (paramInt != 6) {
          break;
        }
      } while (!AndroidUtilities.isGoogleMapsInstalled(this));
      if (this.currentEncryptedChat == null) {}
      for (paramInt = i;; paramInt = 0)
      {
        localObject2 = new LocationActivity(paramInt);
        ((LocationActivity)localObject2).setDialogId(this.dialog_id);
        ((LocationActivity)localObject2).setDelegate(this);
        presentFragment((BaseFragment)localObject2);
        return;
      }
      if (paramInt == 4)
      {
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
        {
          getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
          return;
        }
        localObject2 = new DocumentSelectActivity();
        ((DocumentSelectActivity)localObject2).setDelegate(new DocumentSelectActivity.DocumentSelectActivityDelegate()
        {
          public void didSelectFiles(DocumentSelectActivity paramAnonymousDocumentSelectActivity, ArrayList<String> paramAnonymousArrayList)
          {
            paramAnonymousDocumentSelectActivity.finishFragment();
            SendMessagesHelper.prepareSendingDocuments(paramAnonymousArrayList, paramAnonymousArrayList, null, null, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null);
            ChatActivity.this.showReplyPanel(false, null, null, null, false);
            DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
          }
          
          public void startDocumentSelectActivity()
          {
            try
            {
              Intent localIntent = new Intent("android.intent.action.GET_CONTENT");
              if (Build.VERSION.SDK_INT >= 18) {
                localIntent.putExtra("android.intent.extra.ALLOW_MULTIPLE", true);
              }
              localIntent.setType("*/*");
              ChatActivity.this.startActivityForResult(localIntent, 21);
              return;
            }
            catch (Exception localException)
            {
              FileLog.e(localException);
            }
          }
        });
        presentFragment((BaseFragment)localObject2);
        return;
      }
      if (paramInt == 3)
      {
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_EXTERNAL_STORAGE") != 0))
        {
          getParentActivity().requestPermissions(new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, 4);
          return;
        }
        localObject2 = new AudioSelectActivity();
        ((AudioSelectActivity)localObject2).setDelegate(new AudioSelectActivity.AudioSelectActivityDelegate()
        {
          public void didSelectAudio(ArrayList<MessageObject> paramAnonymousArrayList)
          {
            SendMessagesHelper.prepareSendingAudioDocuments(paramAnonymousArrayList, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject);
            ChatActivity.this.showReplyPanel(false, null, null, null, false);
            DataQuery.getInstance(ChatActivity.this.currentAccount).cleanDraft(ChatActivity.this.dialog_id, true);
          }
        });
        presentFragment((BaseFragment)localObject2);
        return;
      }
    } while (paramInt != 5);
    if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.READ_CONTACTS") != 0))
    {
      getParentActivity().requestPermissions(new String[] { "android.permission.READ_CONTACTS" }, 5);
      return;
    }
    try
    {
      localObject2 = new Intent("android.intent.action.PICK", ContactsContract.Contacts.CONTENT_URI);
      ((Intent)localObject2).setType("vnd.android.cursor.dir/phone_v2");
      startActivityForResult((Intent)localObject2, 31);
      return;
    }
    catch (Exception localException3)
    {
      FileLog.e(localException3);
    }
  }
  
  private void processSelectedOption(int paramInt)
  {
    if ((this.selectedObject == null) || (getParentActivity() == null)) {
      return;
    }
    switch (paramInt)
    {
    }
    for (;;)
    {
      this.selectedObject = null;
      this.selectedObjectGroup = null;
      return;
      int i;
      if (this.selectedObjectGroup != null)
      {
        i = 1;
        paramInt = 0;
        while (paramInt < this.selectedObjectGroup.messages.size())
        {
          if (!SendMessagesHelper.getInstance(this.currentAccount).retrySendMessage((MessageObject)this.selectedObjectGroup.messages.get(paramInt), false)) {
            i = 0;
          }
          paramInt += 1;
        }
        if (i != 0) {
          moveScrollToLastMessage();
        }
      }
      else if (SendMessagesHelper.getInstance(this.currentAccount).retrySendMessage(this.selectedObject, false))
      {
        updateVisibleRows();
        moveScrollToLastMessage();
        continue;
        if (getParentActivity() == null)
        {
          this.selectedObject = null;
          this.selectedObjectGroup = null;
          return;
        }
        createDeleteMessagesAlert(this.selectedObject, this.selectedObjectGroup);
        continue;
        this.forwardingMessage = this.selectedObject;
        this.forwardingMessageGroup = this.selectedObjectGroup;
        final Object localObject1 = new Bundle();
        ((Bundle)localObject1).putBoolean("onlySelect", true);
        ((Bundle)localObject1).putInt("dialogsType", 3);
        localObject1 = new DialogsActivity((Bundle)localObject1);
        ((DialogsActivity)localObject1).setDelegate(this);
        presentFragment((BaseFragment)localObject1);
        continue;
        AndroidUtilities.addToClipboard(getMessageContent(this.selectedObject, 0, false));
        continue;
        if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
        {
          getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
          this.selectedObject = null;
          this.selectedObjectGroup = null;
          return;
        }
        if (this.selectedObjectGroup != null)
        {
          paramInt = 0;
          while (paramInt < this.selectedObjectGroup.messages.size())
          {
            saveMessageToGallery((MessageObject)this.selectedObjectGroup.messages.get(paramInt));
            paramInt += 1;
          }
        }
        saveMessageToGallery(this.selectedObject);
        continue;
        Object localObject2 = null;
        localObject1 = localObject2;
        File localFile;
        if (!TextUtils.isEmpty(this.selectedObject.messageOwner.attachPath))
        {
          localFile = new File(this.selectedObject.messageOwner.attachPath);
          localObject1 = localObject2;
          if (localFile.exists()) {
            localObject1 = localFile;
          }
        }
        localObject2 = localObject1;
        if (localObject1 == null)
        {
          localFile = FileLoader.getPathToMessage(this.selectedObject.messageOwner);
          localObject2 = localObject1;
          if (localFile.exists()) {
            localObject2 = localFile;
          }
        }
        if (localObject2 != null) {
          if (((File)localObject2).getName().toLowerCase().endsWith("attheme"))
          {
            if (this.chatLayoutManager != null)
            {
              paramInt = this.chatLayoutManager.findFirstVisibleItemPosition();
              if (paramInt == 0) {
                break label706;
              }
              this.scrollToPositionOnRecreate = paramInt;
              localObject1 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(this.scrollToPositionOnRecreate);
              if (localObject1 == null) {
                break label698;
              }
              this.scrollToOffsetOnRecreate = (this.chatListView.getMeasuredHeight() - ((RecyclerListView.Holder)localObject1).itemView.getBottom() - this.chatListView.getPaddingBottom());
            }
            for (;;)
            {
              localObject1 = Theme.applyThemeFile((File)localObject2, this.selectedObject.getDocumentName(), true);
              if (localObject1 == null) {
                break label714;
              }
              presentFragment(new ThemePreviewActivity((File)localObject2, (Theme.ThemeInfo)localObject1));
              break;
              label698:
              this.scrollToPositionOnRecreate = -1;
              continue;
              label706:
              this.scrollToPositionOnRecreate = -1;
            }
            label714:
            this.scrollToPositionOnRecreate = -1;
            if (getParentActivity() == null)
            {
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              return;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", 2131492981));
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("IncorrectTheme", 2131493674));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", 2131494028), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
          }
          else if (LocaleController.getInstance().applyLanguageFile((File)localObject2, this.currentAccount))
          {
            presentFragment(new LanguageSelectActivity());
          }
          else
          {
            if (getParentActivity() == null)
            {
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              return;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", 2131492981));
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("IncorrectLocalization", 2131493673));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", 2131494028), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
            continue;
            localObject2 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject2;
            if (localObject2 != null)
            {
              localObject1 = localObject2;
              if (((String)localObject2).length() > 0)
              {
                localObject1 = localObject2;
                if (!new File((String)localObject2).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject2 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject2 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            localObject1 = new Intent("android.intent.action.SEND");
            ((Intent)localObject1).setType(this.selectedObject.getDocument().mime_type);
            localObject2 = new File((String)localObject2);
            if (Build.VERSION.SDK_INT >= 24) {}
            for (;;)
            {
              try
              {
                ((Intent)localObject1).putExtra("android.intent.extra.STREAM", FileProvider.getUriForFile(getParentActivity(), "org.telegram.messenger.provider", (File)localObject2));
                ((Intent)localObject1).setFlags(1);
                getParentActivity().startActivityForResult(Intent.createChooser((Intent)localObject1, LocaleController.getString("ShareFile", 2131494383)), 500);
              }
              catch (Exception localException2)
              {
                ((Intent)localObject1).putExtra("android.intent.extra.STREAM", Uri.fromFile((File)localObject2));
                continue;
              }
              ((Intent)localObject1).putExtra("android.intent.extra.STREAM", Uri.fromFile((File)localObject2));
            }
            localObject2 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject2;
            if (localObject2 != null)
            {
              localObject1 = localObject2;
              if (((String)localObject2).length() > 0)
              {
                localObject1 = localObject2;
                if (!new File((String)localObject2).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject2 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject2 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
            {
              getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              return;
            }
            MediaController.saveFile((String)localObject2, getParentActivity(), 0, null, null);
            continue;
            showReplyPanel(true, this.selectedObject, null, null, false);
            continue;
            localObject2 = getParentActivity();
            Object localObject3 = this.selectedObject.getInputStickerSet();
            if ((this.bottomOverlayChat.getVisibility() != 0) && (ChatObject.canSendStickers(this.currentChat))) {}
            for (localObject1 = this.chatActivityEnterView;; localObject1 = null)
            {
              showDialog(new StickersAlert((Context)localObject2, this, (TLRPC.InputStickerSet)localObject3, null, (StickersAlert.StickersAlertDelegate)localObject1));
              break;
            }
            if ((Build.VERSION.SDK_INT >= 23) && (getParentActivity().checkSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0))
            {
              getParentActivity().requestPermissions(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, 4);
              this.selectedObject = null;
              this.selectedObjectGroup = null;
              return;
            }
            localObject1 = FileLoader.getDocumentFileName(this.selectedObject.getDocument());
            localObject2 = localObject1;
            if (TextUtils.isEmpty((CharSequence)localObject1)) {
              localObject2 = this.selectedObject.getFileName();
            }
            localObject3 = this.selectedObject.messageOwner.attachPath;
            localObject1 = localObject3;
            if (localObject3 != null)
            {
              localObject1 = localObject3;
              if (((String)localObject3).length() > 0)
              {
                localObject1 = localObject3;
                if (!new File((String)localObject3).exists()) {
                  localObject1 = null;
                }
              }
            }
            if (localObject1 != null)
            {
              localObject3 = localObject1;
              if (((String)localObject1).length() != 0) {}
            }
            else
            {
              localObject3 = FileLoader.getPathToMessage(this.selectedObject.messageOwner).toString();
            }
            Object localObject4 = getParentActivity();
            if (this.selectedObject.isMusic())
            {
              paramInt = 3;
              label1579:
              if (this.selectedObject.getDocument() == null) {
                break label1621;
              }
            }
            label1621:
            for (localObject1 = this.selectedObject.getDocument().mime_type;; localObject1 = "")
            {
              MediaController.saveFile((String)localObject3, (Context)localObject4, paramInt, (String)localObject2, (String)localObject1);
              break;
              paramInt = 2;
              break label1579;
            }
            localObject1 = this.selectedObject.getDocument();
            MessagesController.getInstance(this.currentAccount).saveGif((TLRPC.Document)localObject1);
            showGifHint();
            this.chatActivityEnterView.addRecentGif((TLRPC.Document)localObject1);
            continue;
            startEditingMessageObject(this.selectedObject);
            this.selectedObject = null;
            this.selectedObjectGroup = null;
            continue;
            final int j = this.selectedObject.getId();
            localObject2 = new AlertDialog.Builder(getParentActivity());
            if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.megagroup))
            {
              ((AlertDialog.Builder)localObject2).setMessage(LocaleController.getString("PinMessageAlert", 2131494167));
              localObject1 = new boolean[1];
              localObject1[0] = 1;
              localObject3 = new FrameLayout(getParentActivity());
              localObject4 = new CheckBoxCell(getParentActivity(), 1);
              ((CheckBoxCell)localObject4).setBackgroundDrawable(Theme.getSelectorDrawable(false));
              ((CheckBoxCell)localObject4).setText(LocaleController.getString("PinNotify", 2131494169), "", true, false);
              if (LocaleController.isRTL)
              {
                paramInt = AndroidUtilities.dp(8.0F);
                label1821:
                if (!LocaleController.isRTL) {
                  break label1960;
                }
                i = 0;
                label1829:
                ((CheckBoxCell)localObject4).setPadding(paramInt, 0, i, 0);
                ((FrameLayout)localObject3).addView((View)localObject4, LayoutHelper.createFrame(-1, 48.0F, 51, 8.0F, 0.0F, 8.0F, 0.0F));
                ((CheckBoxCell)localObject4).setOnClickListener(new View.OnClickListener()
                {
                  public void onClick(View paramAnonymousView)
                  {
                    paramAnonymousView = (CheckBoxCell)paramAnonymousView;
                    boolean[] arrayOfBoolean = localObject1;
                    if (localObject1[0] == 0) {}
                    for (int i = 1;; i = 0)
                    {
                      arrayOfBoolean[0] = i;
                      paramAnonymousView.setChecked(localObject1[0], true);
                      return;
                    }
                  }
                });
                ((AlertDialog.Builder)localObject2).setView((View)localObject3);
              }
            }
            for (;;)
            {
              ((AlertDialog.Builder)localObject2).setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
                {
                  MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, j, localObject1[0]);
                }
              });
              ((AlertDialog.Builder)localObject2).setTitle(LocaleController.getString("AppName", 2131492981));
              ((AlertDialog.Builder)localObject2).setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
              showDialog(((AlertDialog.Builder)localObject2).create());
              break;
              paramInt = 0;
              break label1821;
              label1960:
              i = AndroidUtilities.dp(8.0F);
              break label1829;
              ((AlertDialog.Builder)localObject2).setMessage(LocaleController.getString("PinMessageAlertChannel", 2131494168));
              localObject1 = new boolean[1];
              localObject1[0] = 0;
            }
            localObject1 = new AlertDialog.Builder(getParentActivity());
            ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("UnpinMessageAlert", 2131494515));
            ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
            {
              public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
              {
                MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, 0, false);
              }
            });
            ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", 2131492981));
            ((AlertDialog.Builder)localObject1).setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
            showDialog(((AlertDialog.Builder)localObject1).create());
            continue;
            localObject1 = new Bundle();
            ((Bundle)localObject1).putInt("user_id", this.selectedObject.messageOwner.media.user_id);
            ((Bundle)localObject1).putString("phone", this.selectedObject.messageOwner.media.phone_number);
            ((Bundle)localObject1).putBoolean("addContact", true);
            presentFragment(new ContactAddActivity((Bundle)localObject1));
            continue;
            AndroidUtilities.addToClipboard(this.selectedObject.messageOwner.media.phone_number);
            continue;
            try
            {
              localObject1 = new Intent("android.intent.action.DIAL", Uri.parse("tel:" + this.selectedObject.messageOwner.media.phone_number));
              ((Intent)localObject1).addFlags(268435456);
              getParentActivity().startActivityForResult((Intent)localObject1, 500);
            }
            catch (Exception localException1)
            {
              FileLog.e(localException1);
            }
            continue;
            if (this.currentUser != null)
            {
              VoIPHelper.startCall(this.currentUser, getParentActivity(), MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id));
              continue;
              VoIPHelper.showRateAlert(getParentActivity(), (TLRPC.TL_messageActionPhoneCall)this.selectedObject.messageOwner.action);
              continue;
              DataQuery.getInstance(this.currentAccount).addRecentSticker(2, this.selectedObject.getDocument(), (int)(System.currentTimeMillis() / 1000L), false);
              continue;
              DataQuery.getInstance(this.currentAccount).addRecentSticker(2, this.selectedObject.getDocument(), (int)(System.currentTimeMillis() / 1000L), true);
              continue;
              TLRPC.TL_channels_exportMessageLink localTL_channels_exportMessageLink = new TLRPC.TL_channels_exportMessageLink();
              localTL_channels_exportMessageLink.id = this.selectedObject.getId();
              localTL_channels_exportMessageLink.channel = MessagesController.getInputChannel(this.currentChat);
              ConnectionsManager.getInstance(this.currentAccount).sendRequest(localTL_channels_exportMessageLink, new RequestDelegate()
              {
                public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
                {
                  AndroidUtilities.runOnUIThread(new Runnable()
                  {
                    public void run()
                    {
                      TLRPC.TL_exportedMessageLink localTL_exportedMessageLink;
                      if (paramAnonymousTLObject != null) {
                        localTL_exportedMessageLink = (TLRPC.TL_exportedMessageLink)paramAnonymousTLObject;
                      }
                      try
                      {
                        ((ClipboardManager)ApplicationLoader.applicationContext.getSystemService("clipboard")).setPrimaryClip(ClipData.newPlainText("label", localTL_exportedMessageLink.link));
                        Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("LinkCopied", 2131493748), 0).show();
                        return;
                      }
                      catch (Exception localException)
                      {
                        FileLog.e(localException);
                      }
                    }
                  });
                }
              });
              continue;
              showDialog(AlertsCreator.createReportAlert(getParentActivity(), this.dialog_id, this.selectedObject.getId(), this));
            }
          }
        }
      }
    }
  }
  
  private void removeMessageObject(MessageObject paramMessageObject)
  {
    int i = this.messages.indexOf(paramMessageObject);
    if (i == -1) {}
    do
    {
      return;
      this.messages.remove(i);
    } while (this.chatAdapter == null);
    this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow + i);
  }
  
  private void removeUnreadPlane(boolean paramBoolean)
  {
    if (this.unreadMessageObject != null)
    {
      if (paramBoolean)
      {
        boolean[] arrayOfBoolean = this.forwardEndReached;
        this.forwardEndReached[1] = true;
        arrayOfBoolean[0] = true;
        this.first_unread_id = 0;
        this.last_message_id = 0;
      }
      this.createUnreadMessageAfterId = 0;
      this.createUnreadMessageAfterIdLoading = false;
      removeMessageObject(this.unreadMessageObject);
      this.unreadMessageObject = null;
    }
  }
  
  private void saveMessageToGallery(MessageObject paramMessageObject)
  {
    Object localObject2 = paramMessageObject.messageOwner.attachPath;
    Object localObject1 = localObject2;
    if (!TextUtils.isEmpty((CharSequence)localObject2))
    {
      localObject1 = localObject2;
      if (!new File((String)localObject2).exists()) {
        localObject1 = null;
      }
    }
    localObject2 = localObject1;
    if (TextUtils.isEmpty((CharSequence)localObject1)) {
      localObject2 = FileLoader.getPathToMessage(paramMessageObject.messageOwner).toString();
    }
    localObject1 = getParentActivity();
    if (paramMessageObject.isVideo()) {}
    for (int i = 1;; i = 0)
    {
      MediaController.saveFile((String)localObject2, (Context)localObject1, i, null, null);
      return;
    }
  }
  
  private void scrollToLastMessage(boolean paramBoolean)
  {
    if ((this.forwardEndReached[0] != 0) && (this.first_unread_id == 0) && (this.startLoadFromMessageId == 0))
    {
      if ((paramBoolean) && (this.chatLayoutManager.findFirstCompletelyVisibleItemPosition() == 0))
      {
        showPagedownButton(false, true);
        this.highlightMessageId = Integer.MAX_VALUE;
        updateVisibleRows();
        return;
      }
      this.chatLayoutManager.scrollToPositionWithOffset(0, 0);
      return;
    }
    clearChatData();
    this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
    MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
    long l = this.dialog_id;
    int i = this.classGuid;
    paramBoolean = ChatObject.isChannel(this.currentChat);
    int j = this.lastLoadIndex;
    this.lastLoadIndex = (j + 1);
    localMessagesController.loadMessages(l, 30, 0, 0, true, 0, i, 0, 0, paramBoolean, j);
  }
  
  private void searchLinks(final CharSequence paramCharSequence, final boolean paramBoolean)
  {
    if ((this.currentEncryptedChat != null) && ((MessagesController.getInstance(this.currentAccount).secretWebpagePreview == 0) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46))) {
      return;
    }
    int k;
    int j;
    if ((paramBoolean) && (this.foundWebPage != null)) {
      if (this.foundWebPage.url != null)
      {
        k = TextUtils.indexOf(paramCharSequence, this.foundWebPage.url);
        i = 0;
        j = 0;
        if (k != -1) {
          break label263;
        }
        if (this.foundWebPage.display_url != null)
        {
          k = TextUtils.indexOf(paramCharSequence, this.foundWebPage.display_url);
          if ((k == -1) || (this.foundWebPage.display_url.length() + k != paramCharSequence.length())) {
            break label252;
          }
          j = 1;
          if ((k == -1) || (j != 0)) {
            break label258;
          }
        }
      }
    }
    label166:
    label252:
    label258:
    for (int i = paramCharSequence.charAt(this.foundWebPage.display_url.length() + k);; i = 0)
    {
      if ((k != -1) && ((j != 0) || (i == 32) || (i == 44) || (i == 46) || (i == 33) || (i == 47))) {
        break label314;
      }
      this.pendingLinkSearchString = null;
      showReplyPanel(false, null, null, this.foundWebPage, false);
      final MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
      Utilities.searchQueue.postRunnable(new Runnable()
      {
        public void run()
        {
          if (ChatActivity.this.linkSearchRequestId != 0)
          {
            ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.this.linkSearchRequestId, true);
            ChatActivity.access$23502(ChatActivity.this, 0);
          }
          int j;
          int i;
          for (;;)
          {
            try
            {
              localObject3 = AndroidUtilities.WEB_URL.matcher(paramCharSequence);
              localObject1 = null;
            }
            catch (Exception localException1)
            {
              Object localObject1;
              FileLog.e(localException1);
              Object localObject2 = paramCharSequence.toString().toLowerCase();
              if ((paramCharSequence.length() < 13) || ((!((String)localObject2).contains("http://")) && (!((String)localObject2).contains("https://"))))
              {
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    if (ChatActivity.this.foundWebPage != null)
                    {
                      ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                      ChatActivity.access$19502(ChatActivity.this, null);
                    }
                  }
                });
                return;
              }
              localObject2 = paramCharSequence;
              continue;
              final Object localObject3 = new TLRPC.TL_messages_getWebPagePreview();
              if ((localObject2 instanceof String))
              {
                ((TLRPC.TL_messages_getWebPagePreview)localObject3).message = ((String)localObject2);
                ChatActivity.access$23502(ChatActivity.this, ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest((TLObject)localObject3, new RequestDelegate()
                {
                  public void run(final TLObject paramAnonymous2TLObject, final TLRPC.TL_error paramAnonymous2TL_error)
                  {
                    AndroidUtilities.runOnUIThread(new Runnable()
                    {
                      public void run()
                      {
                        ChatActivity.access$23502(ChatActivity.this, 0);
                        if (paramAnonymous2TL_error == null)
                        {
                          if (!(paramAnonymous2TLObject instanceof TLRPC.TL_messageMediaWebPage)) {
                            break label291;
                          }
                          ChatActivity.access$19502(ChatActivity.this, ((TLRPC.TL_messageMediaWebPage)paramAnonymous2TLObject).webpage);
                          if ((!(ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPage)) && (!(ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending))) {
                            break label229;
                          }
                          if ((ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending)) {
                            ChatActivity.access$23902(ChatActivity.this, ChatActivity.76.4.this.val$req.message);
                          }
                          if ((ChatActivity.this.currentEncryptedChat != null) && ((ChatActivity.this.foundWebPage instanceof TLRPC.TL_webPagePending))) {
                            ChatActivity.this.foundWebPage.url = ChatActivity.76.4.this.val$req.message;
                          }
                          ChatActivity.this.showReplyPanel(true, null, null, ChatActivity.this.foundWebPage, false);
                        }
                        label229:
                        label291:
                        while (ChatActivity.this.foundWebPage == null)
                        {
                          do
                          {
                            return;
                          } while (ChatActivity.this.foundWebPage == null);
                          ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                          ChatActivity.access$19502(ChatActivity.this, null);
                          return;
                        }
                        ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                        ChatActivity.access$19502(ChatActivity.this, null);
                      }
                    });
                  }
                }));
                ConnectionsManager.getInstance(ChatActivity.this.currentAccount).bindRequestToGuid(ChatActivity.this.linkSearchRequestId, ChatActivity.this.classGuid);
                return;
              }
              ((TLRPC.TL_messages_getWebPagePreview)localObject3).message = ((CharSequence)localObject2).toString();
              continue;
            }
            try
            {
              if (!((Matcher)localObject3).find()) {
                continue;
              }
              if ((((Matcher)localObject3).start() > 0) && (paramCharSequence.charAt(((Matcher)localObject3).start() - 1) == '@')) {
                continue;
              }
              if (localObject1 != null) {
                break label445;
              }
              localObject1 = new ArrayList();
            }
            catch (Exception localException2)
            {
              continue;
              continue;
              i += 1;
              continue;
              if (j == 0) {
                continue;
              }
            }
            ((ArrayList)localObject1).add(paramCharSequence.subSequence(((Matcher)localObject3).start(), ((Matcher)localObject3).end()));
            continue;
            if ((localObject1 != null) && (ChatActivity.this.foundUrls != null) && (((ArrayList)localObject1).size() == ChatActivity.this.foundUrls.size()))
            {
              j = 1;
              i = 0;
              if (i >= ((ArrayList)localObject1).size()) {
                break label455;
              }
              if (TextUtils.equals((CharSequence)((ArrayList)localObject1).get(i), (CharSequence)ChatActivity.this.foundUrls.get(i))) {
                break label448;
              }
              j = 0;
              break label448;
            }
            ChatActivity.access$23702(ChatActivity.this, (ArrayList)localObject1);
            if (localObject1 == null)
            {
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  if (ChatActivity.this.foundWebPage != null)
                  {
                    ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, false);
                    ChatActivity.access$19502(ChatActivity.this, null);
                  }
                }
              });
              return;
            }
            localObject1 = TextUtils.join(" ", (Iterable)localObject1);
            if ((ChatActivity.this.currentEncryptedChat != null) && (localMessagesController.secretWebpagePreview == 2))
            {
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  AlertDialog.Builder localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                  localBuilder.setTitle(LocaleController.getString("AppName", 2131492981));
                  localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous3DialogInterface, int paramAnonymous3Int)
                    {
                      ChatActivity.76.this.val$messagesController.secretWebpagePreview = 1;
                      MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", MessagesController.getInstance(ChatActivity.this.currentAccount).secretWebpagePreview).commit();
                      ChatActivity.access$23702(ChatActivity.this, null);
                      ChatActivity.this.searchLinks(ChatActivity.76.this.val$charSequence, ChatActivity.76.this.val$force);
                    }
                  });
                  localBuilder.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
                  localBuilder.setMessage(LocaleController.getString("SecretLinkPreviewAlert", 2131494324));
                  ChatActivity.this.showDialog(localBuilder.create());
                  ChatActivity.76.this.val$messagesController.secretWebpagePreview = 0;
                  MessagesController.getGlobalMainSettings().edit().putInt("secretWebpage2", ChatActivity.76.this.val$messagesController.secretWebpagePreview).commit();
                }
              });
              return;
            }
          }
          label445:
          label448:
          label455:
          return;
        }
      });
      return;
      j = 0;
      break;
    }
    label263:
    if (this.foundWebPage.url.length() + k == paramCharSequence.length())
    {
      j = 1;
      label288:
      if (j != 0) {
        break label322;
      }
    }
    label314:
    label322:
    for (i = paramCharSequence.charAt(this.foundWebPage.url.length() + k);; i = 0)
    {
      break label166;
      break;
      j = 0;
      break label288;
    }
  }
  
  private void sendBotInlineResult(TLRPC.BotInlineResult paramBotInlineResult)
  {
    int i = this.mentionsAdapter.getContextBotId();
    HashMap localHashMap = new HashMap();
    localHashMap.put("id", paramBotInlineResult.id);
    localHashMap.put("query_id", "" + paramBotInlineResult.query_id);
    localHashMap.put("bot", "" + i);
    localHashMap.put("bot_name", this.mentionsAdapter.getContextBotName());
    SendMessagesHelper.prepareSendingBotContextResult(paramBotInlineResult, localHashMap, this.dialog_id, this.replyingMessageObject);
    this.chatActivityEnterView.setFieldText("");
    showReplyPanel(false, null, null, null, false);
    DataQuery.getInstance(this.currentAccount).increaseInlineRaiting(i);
  }
  
  private boolean sendSecretMessageRead(MessageObject paramMessageObject)
  {
    int i = 0;
    if ((paramMessageObject == null) || (paramMessageObject.isOut()) || (!paramMessageObject.isSecretMedia()) || (paramMessageObject.messageOwner.destroyTime != 0) || (paramMessageObject.messageOwner.ttl <= 0)) {
      return false;
    }
    if (this.currentEncryptedChat != null) {
      MessagesController.getInstance(this.currentAccount).markMessageAsRead(this.dialog_id, paramMessageObject.messageOwner.random_id, paramMessageObject.messageOwner.ttl);
    }
    for (;;)
    {
      paramMessageObject.messageOwner.destroyTime = (paramMessageObject.messageOwner.ttl + ConnectionsManager.getInstance(this.currentAccount).getCurrentTime());
      return true;
      MessagesController localMessagesController = MessagesController.getInstance(this.currentAccount);
      int j = paramMessageObject.getId();
      if (ChatObject.isChannel(this.currentChat)) {
        i = this.currentChat.id;
      }
      localMessagesController.markMessageAsRead(j, i, paramMessageObject.messageOwner.ttl);
    }
  }
  
  private void sendUriAsDocument(Uri paramUri)
  {
    if (paramUri == null) {
      return;
    }
    Object localObject1 = paramUri.toString();
    Uri localUri1 = paramUri;
    if (((String)localObject1).contains("com.google.android.apps.photos.contentprovider")) {}
    try
    {
      localObject1 = localObject1.split("/1/")[1];
      int i = ((String)localObject1).indexOf("/ACTUAL");
      localUri1 = paramUri;
      if (i != -1) {
        localUri1 = Uri.parse(URLDecoder.decode(((String)localObject1).substring(0, i), "UTF-8"));
      }
    }
    catch (Exception localException)
    {
      Object localObject2;
      for (;;)
      {
        FileLog.e(localException);
        Uri localUri2 = paramUri;
      }
      SendMessagesHelper.prepareSendingDocument((String)localObject1, (String)localObject2, null, null, this.dialog_id, this.replyingMessageObject, null);
    }
    paramUri = AndroidUtilities.getPath(localUri1);
    localObject2 = paramUri;
    localObject1 = paramUri;
    if (paramUri == null)
    {
      localObject2 = localUri1.toString();
      localObject1 = MediaController.copyFileToCache(localUri1, "file");
    }
    if (localObject1 == null)
    {
      showAttachmentError();
      return;
    }
  }
  
  private void setCellSelectionBackground(MessageObject paramMessageObject, ChatMessageCell paramChatMessageCell, int paramInt)
  {
    MessageObject.GroupedMessages localGroupedMessages = getValidGroupedMessage(paramMessageObject);
    paramMessageObject = localGroupedMessages;
    int k;
    int i;
    if (localGroupedMessages != null)
    {
      k = 0;
      i = 0;
    }
    for (;;)
    {
      int j = k;
      if (i < localGroupedMessages.messages.size())
      {
        if (this.selectedMessagesIds[paramInt].indexOfKey(((MessageObject)localGroupedMessages.messages.get(i)).getId()) < 0) {
          j = 1;
        }
      }
      else
      {
        paramMessageObject = localGroupedMessages;
        if (j == 0) {
          paramMessageObject = null;
        }
        if (paramMessageObject != null) {
          break;
        }
        paramChatMessageCell.setBackgroundColor(Theme.getColor("chat_selectedBackground"));
        return;
      }
      i += 1;
    }
    paramChatMessageCell.setBackground(null);
  }
  
  private void showAttachmentError()
  {
    if (getParentActivity() == null) {
      return;
    }
    Toast.makeText(getParentActivity(), LocaleController.getString("UnsupportedAttachment", 2131494517), 0).show();
  }
  
  private void showGifHint()
  {
    Object localObject = MessagesController.getGlobalMainSettings();
    if (((SharedPreferences)localObject).getBoolean("gifhint", false)) {}
    int i;
    do
    {
      do
      {
        do
        {
          return;
          ((SharedPreferences)localObject).edit().putBoolean("gifhint", true).commit();
        } while ((getParentActivity() == null) || (this.fragmentView == null) || (this.gifHintTextView != null));
        if (this.allowContextBotPanelSecond) {
          break;
        }
      } while (this.chatActivityEnterView == null);
      this.chatActivityEnterView.setOpenGifsTabFirst();
      return;
      localObject = (SizeNotifierFrameLayout)this.fragmentView;
      i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
    } while (i == -1);
    this.chatActivityEnterView.setOpenGifsTabFirst();
    this.emojiButtonRed = new View(getParentActivity());
    this.emojiButtonRed.setBackgroundResource(2131165618);
    ((SizeNotifierFrameLayout)localObject).addView(this.emojiButtonRed, i + 1, LayoutHelper.createFrame(10, 10.0F, 83, 30.0F, 0.0F, 0.0F, 27.0F));
    this.gifHintTextView = new TextView(getParentActivity());
    this.gifHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
    this.gifHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
    this.gifHintTextView.setTextSize(1, 14.0F);
    this.gifHintTextView.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
    this.gifHintTextView.setText(LocaleController.getString("TapHereGifs", 2131494462));
    this.gifHintTextView.setGravity(16);
    ((SizeNotifierFrameLayout)localObject).addView(this.gifHintTextView, i + 1, LayoutHelper.createFrame(-2, -2.0F, 83, 5.0F, 0.0F, 5.0F, 3.0F));
    localObject = new AnimatorSet();
    ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(this.gifHintTextView, "alpha", new float[] { 0.0F, 1.0F }), ObjectAnimator.ofFloat(this.emojiButtonRed, "alpha", new float[] { 0.0F, 1.0F }) });
    ((AnimatorSet)localObject).addListener(new AnimatorListenerAdapter()
    {
      public void onAnimationEnd(Animator paramAnonymousAnimator)
      {
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            if (ChatActivity.this.gifHintTextView == null) {
              return;
            }
            AnimatorSet localAnimatorSet = new AnimatorSet();
            localAnimatorSet.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.gifHintTextView, "alpha", new float[] { 0.0F }) });
            localAnimatorSet.addListener(new AnimatorListenerAdapter()
            {
              public void onAnimationEnd(Animator paramAnonymous3Animator)
              {
                if (ChatActivity.this.gifHintTextView != null) {
                  ChatActivity.this.gifHintTextView.setVisibility(8);
                }
              }
            });
            localAnimatorSet.setDuration(300L);
            localAnimatorSet.start();
          }
        }, 2000L);
      }
    });
    ((AnimatorSet)localObject).setDuration(300L);
    ((AnimatorSet)localObject).start();
  }
  
  private void showMediaBannedHint()
  {
    if ((getParentActivity() == null) || (this.currentChat == null) || (this.currentChat.banned_rights == null) || (this.fragmentView == null) || ((this.mediaBanTooltip != null) && (this.mediaBanTooltip.getVisibility() == 0))) {}
    Object localObject;
    int i;
    do
    {
      return;
      localObject = (SizeNotifierFrameLayout)this.fragmentView;
      i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
    } while (i == -1);
    if (this.mediaBanTooltip == null)
    {
      this.mediaBanTooltip = new CorrectlyMeasuringTextView(getParentActivity());
      this.mediaBanTooltip.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
      this.mediaBanTooltip.setTextColor(Theme.getColor("chat_gifSaveHintText"));
      this.mediaBanTooltip.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
      this.mediaBanTooltip.setGravity(16);
      this.mediaBanTooltip.setTextSize(1, 14.0F);
      ((SizeNotifierFrameLayout)localObject).addView(this.mediaBanTooltip, i + 1, LayoutHelper.createFrame(-2, -2.0F, 85, 30.0F, 0.0F, 5.0F, 3.0F));
    }
    if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights.until_date)) {
      this.mediaBanTooltip.setText(LocaleController.getString("AttachMediaRestrictedForever", 2131493035));
    }
    for (;;)
    {
      this.mediaBanTooltip.setVisibility(0);
      localObject = new AnimatorSet();
      ((AnimatorSet)localObject).playTogether(new Animator[] { ObjectAnimator.ofFloat(this.mediaBanTooltip, "alpha", new float[] { 0.0F, 1.0F }) });
      ((AnimatorSet)localObject).addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              if (ChatActivity.this.mediaBanTooltip == null) {
                return;
              }
              AnimatorSet localAnimatorSet = new AnimatorSet();
              localAnimatorSet.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mediaBanTooltip, "alpha", new float[] { 0.0F }) });
              localAnimatorSet.addListener(new AnimatorListenerAdapter()
              {
                public void onAnimationEnd(Animator paramAnonymous3Animator)
                {
                  if (ChatActivity.this.mediaBanTooltip != null) {
                    ChatActivity.this.mediaBanTooltip.setVisibility(8);
                  }
                }
              });
              localAnimatorSet.setDuration(300L);
              localAnimatorSet.start();
            }
          }, 5000L);
        }
      });
      ((AnimatorSet)localObject).setDuration(300L);
      ((AnimatorSet)localObject).start();
      return;
      this.mediaBanTooltip.setText(LocaleController.formatString("AttachMediaRestricted", 2131493034, new Object[] { LocaleController.formatDateForBan(this.currentChat.banned_rights.until_date) }));
    }
  }
  
  private void showMentiondownButton(boolean paramBoolean1, boolean paramBoolean2)
  {
    if (this.mentiondownButton == null) {}
    do
    {
      do
      {
        return;
        if (!paramBoolean1) {
          break;
        }
      } while (this.mentiondownButton.getTag() != null);
      if (this.mentiondownButtonAnimation != null)
      {
        this.mentiondownButtonAnimation.cancel();
        this.mentiondownButtonAnimation = null;
      }
      if (paramBoolean2)
      {
        this.mentiondownButton.setVisibility(0);
        this.mentiondownButton.setTag(Integer.valueOf(1));
        if (this.pagedownButton.getVisibility() == 0) {
          this.mentiondownButton.setTranslationY(-AndroidUtilities.dp(72.0F));
        }
        for (this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "alpha", new float[] { 0.0F, 1.0F }).setDuration(200L);; this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { 0.0F }).setDuration(200L))
        {
          this.mentiondownButtonAnimation.start();
          return;
          if (this.mentiondownButton.getTranslationY() == 0.0F) {
            this.mentiondownButton.setTranslationY(AndroidUtilities.dp(100.0F));
          }
        }
      }
      this.mentiondownButton.setVisibility(0);
      return;
      this.returnToMessageId = 0;
    } while (this.mentiondownButton.getTag() == null);
    this.mentiondownButton.setTag(null);
    if (this.mentiondownButtonAnimation != null)
    {
      this.mentiondownButtonAnimation.cancel();
      this.mentiondownButtonAnimation = null;
    }
    if (paramBoolean2)
    {
      if (this.pagedownButton.getVisibility() == 0) {}
      for (this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "alpha", new float[] { 1.0F, 0.0F }).setDuration(200L);; this.mentiondownButtonAnimation = ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }).setDuration(200L))
      {
        this.mentiondownButtonAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            ChatActivity.this.mentiondownButtonCounter.setVisibility(4);
            ChatActivity.this.mentiondownButton.setVisibility(4);
          }
        });
        this.mentiondownButtonAnimation.start();
        return;
      }
    }
    this.mentiondownButton.setVisibility(4);
  }
  
  private void showPagedownButton(boolean paramBoolean1, boolean paramBoolean2)
  {
    if (this.pagedownButton == null) {}
    do
    {
      do
      {
        return;
        if (!paramBoolean1) {
          break;
        }
        this.pagedownButtonShowedByScroll = false;
      } while (this.pagedownButton.getTag() != null);
      if (this.pagedownButtonAnimation != null)
      {
        this.pagedownButtonAnimation.cancel();
        this.pagedownButtonAnimation = null;
      }
      if (paramBoolean2)
      {
        if (this.pagedownButton.getTranslationY() == 0.0F) {
          this.pagedownButton.setTranslationY(AndroidUtilities.dp(100.0F));
        }
        this.pagedownButton.setVisibility(0);
        this.pagedownButton.setTag(Integer.valueOf(1));
        this.pagedownButtonAnimation = new AnimatorSet();
        if (this.mentiondownButton.getVisibility() == 0) {
          this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { 0.0F }), ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { -AndroidUtilities.dp(72.0F) }) });
        }
        for (;;)
        {
          this.pagedownButtonAnimation.setDuration(200L);
          this.pagedownButtonAnimation.start();
          return;
          this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { 0.0F }) });
        }
      }
      this.pagedownButton.setVisibility(0);
      return;
      this.returnToMessageId = 0;
      this.newUnreadMessageCount = 0;
    } while (this.pagedownButton.getTag() == null);
    this.pagedownButton.setTag(null);
    if (this.pagedownButtonAnimation != null)
    {
      this.pagedownButtonAnimation.cancel();
      this.pagedownButtonAnimation = null;
    }
    if (paramBoolean2)
    {
      this.pagedownButtonAnimation = new AnimatorSet();
      if (this.mentiondownButton.getVisibility() == 0) {
        this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }), ObjectAnimator.ofFloat(this.mentiondownButton, "translationY", new float[] { 0.0F }) });
      }
      for (;;)
      {
        this.pagedownButtonAnimation.setDuration(200L);
        this.pagedownButtonAnimation.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            ChatActivity.this.pagedownButtonCounter.setVisibility(4);
            ChatActivity.this.pagedownButton.setVisibility(4);
          }
        });
        this.pagedownButtonAnimation.start();
        return;
        this.pagedownButtonAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pagedownButton, "translationY", new float[] { AndroidUtilities.dp(100.0F) }) });
      }
    }
    this.pagedownButton.setVisibility(4);
  }
  
  private void showVoiceHint(boolean paramBoolean1, boolean paramBoolean2)
  {
    if ((getParentActivity() == null) || (this.fragmentView == null) || ((paramBoolean1) && (this.voiceHintTextView == null))) {}
    Object localObject;
    int i;
    do
    {
      return;
      if (this.voiceHintTextView != null) {
        break;
      }
      localObject = (SizeNotifierFrameLayout)this.fragmentView;
      i = ((SizeNotifierFrameLayout)localObject).indexOfChild(this.chatActivityEnterView);
    } while (i == -1);
    this.voiceHintTextView = new TextView(getParentActivity());
    this.voiceHintTextView.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(3.0F), Theme.getColor("chat_gifSaveHintBackground")));
    this.voiceHintTextView.setTextColor(Theme.getColor("chat_gifSaveHintText"));
    this.voiceHintTextView.setTextSize(1, 14.0F);
    this.voiceHintTextView.setPadding(AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F), AndroidUtilities.dp(8.0F), AndroidUtilities.dp(7.0F));
    this.voiceHintTextView.setGravity(16);
    this.voiceHintTextView.setAlpha(0.0F);
    ((SizeNotifierFrameLayout)localObject).addView(this.voiceHintTextView, i + 1, LayoutHelper.createFrame(-2, -2.0F, 85, 5.0F, 0.0F, 5.0F, 3.0F));
    if (paramBoolean1)
    {
      if (this.voiceHintAnimation != null)
      {
        this.voiceHintAnimation.cancel();
        this.voiceHintAnimation = null;
      }
      AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
      this.voiceHintHideRunnable = null;
      hideVoiceHint();
      return;
    }
    TextView localTextView = this.voiceHintTextView;
    if (paramBoolean2)
    {
      localObject = LocaleController.getString("HoldToVideo", 2131493652);
      localTextView.setText((CharSequence)localObject);
      if (this.voiceHintHideRunnable == null) {
        break label422;
      }
      if (this.voiceHintAnimation == null) {
        break label390;
      }
      this.voiceHintAnimation.cancel();
      this.voiceHintAnimation = null;
    }
    label390:
    label422:
    while (this.voiceHintAnimation == null)
    {
      this.voiceHintTextView.setVisibility(0);
      this.voiceHintAnimation = new AnimatorSet();
      this.voiceHintAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.voiceHintTextView, "alpha", new float[] { 1.0F }) });
      this.voiceHintAnimation.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationCancel(Animator paramAnonymousAnimator)
        {
          if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation)) {
            ChatActivity.access$22902(ChatActivity.this, null);
          }
        }
        
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if (paramAnonymousAnimator.equals(ChatActivity.this.voiceHintAnimation))
          {
            ChatActivity.access$22902(ChatActivity.this, null);
            AndroidUtilities.runOnUIThread(ChatActivity.access$23002(ChatActivity.this, new Runnable()
            {
              public void run()
              {
                ChatActivity.this.hideVoiceHint();
              }
            }), 2000L);
          }
        }
      });
      this.voiceHintAnimation.setDuration(300L);
      this.voiceHintAnimation.start();
      return;
      localObject = LocaleController.getString("HoldToAudio", 2131493651);
      break;
      AndroidUtilities.cancelRunOnUIThread(this.voiceHintHideRunnable);
      localObject = new Runnable()
      {
        public void run()
        {
          ChatActivity.this.hideVoiceHint();
        }
      };
      this.voiceHintHideRunnable = ((Runnable)localObject);
      AndroidUtilities.runOnUIThread((Runnable)localObject, 2000L);
      return;
    }
  }
  
  private void startEditingMessageObject(MessageObject paramMessageObject)
  {
    if ((paramMessageObject == null) || (getParentActivity() == null)) {
      return;
    }
    if ((this.searchItem != null) && (this.actionBar.isSearchFieldVisible()))
    {
      this.actionBar.closeSearchField();
      this.chatActivityEnterView.setFieldFocused();
    }
    this.mentionsAdapter.setNeedBotContext(false);
    this.chatListView.setOnItemLongClickListener((RecyclerListView.OnItemLongClickListenerExtended)null);
    this.chatListView.setOnItemClickListener((RecyclerListView.OnItemClickListenerExtended)null);
    this.chatListView.setClickable(false);
    this.chatListView.setLongClickable(false);
    Object localObject = this.chatActivityEnterView;
    if (!paramMessageObject.isMediaEmpty()) {}
    for (boolean bool = true;; bool = false)
    {
      ((ChatActivityEnterView)localObject).setEditingMessageObject(paramMessageObject, bool);
      updateBottomOverlay();
      this.actionModeTitleContainer.setVisibility(0);
      this.selectedMessagesCountTextView.setVisibility(8);
      checkEditTimer();
      this.chatActivityEnterView.setAllowStickersAndGifs(false, false);
      localObject = this.actionBar.createActionMode();
      ((ActionBarMenu)localObject).getItem(19).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(10).setVisibility(8);
      if (((ActionBarMenu)localObject).getItem(11) != null) {
        ((ActionBarMenu)localObject).getItem(11).setVisibility(8);
      }
      ((ActionBarMenu)localObject).getItem(12).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(23).setVisibility(8);
      ((ActionBarMenu)localObject).getItem(22).setVisibility(8);
      this.actionBar.showActionMode();
      updatePinnedMessageView(true);
      updateVisibleRows();
      localObject = new TLRPC.TL_messages_getMessageEditData();
      ((TLRPC.TL_messages_getMessageEditData)localObject).peer = MessagesController.getInstance(this.currentAccount).getInputPeer((int)this.dialog_id);
      ((TLRPC.TL_messages_getMessageEditData)localObject).id = paramMessageObject.getId();
      this.editingMessageObjectReqId = ConnectionsManager.getInstance(this.currentAccount).sendRequest((TLObject)localObject, new RequestDelegate()
      {
        public void run(final TLObject paramAnonymousTLObject, TLRPC.TL_error paramAnonymousTL_error)
        {
          AndroidUtilities.runOnUIThread(new Runnable()
          {
            public void run()
            {
              ChatActivity.access$18602(ChatActivity.this, 0);
              if (paramAnonymousTLObject == null)
              {
                localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                localBuilder.setTitle(LocaleController.getString("AppName", 2131492981));
                localBuilder.setMessage(LocaleController.getString("EditMessageError", 2131493415));
                localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
                ChatActivity.this.showDialog(localBuilder.create());
                if (ChatActivity.this.chatActivityEnterView != null) {
                  ChatActivity.this.chatActivityEnterView.setEditingMessageObject(null, false);
                }
              }
              while (ChatActivity.this.chatActivityEnterView == null)
              {
                AlertDialog.Builder localBuilder;
                return;
              }
              ChatActivity.this.chatActivityEnterView.showEditDoneProgress(false, true);
            }
          });
        }
      });
      return;
    }
  }
  
  private void toggleMute(boolean paramBoolean)
  {
    if (!MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id))
    {
      if (paramBoolean)
      {
        localObject = MessagesController.getNotificationsSettings(this.currentAccount).edit();
        ((SharedPreferences.Editor)localObject).putInt("notify2_" + this.dialog_id, 2);
        MessagesStorage.getInstance(this.currentAccount).setDialogFlags(this.dialog_id, 1L);
        ((SharedPreferences.Editor)localObject).commit();
        localObject = (TLRPC.TL_dialog)MessagesController.getInstance(this.currentAccount).dialogs_dict.get(this.dialog_id);
        if (localObject != null)
        {
          ((TLRPC.TL_dialog)localObject).notify_settings = new TLRPC.TL_peerNotifySettings();
          ((TLRPC.TL_dialog)localObject).notify_settings.mute_until = Integer.MAX_VALUE;
        }
        NotificationsController.getInstance(this.currentAccount).updateServerNotificationsSettings(this.dialog_id);
        NotificationsController.getInstance(this.currentAccount).removeNotificationsForDialog(this.dialog_id);
        return;
      }
      showDialog(AlertsCreator.createMuteAlert(getParentActivity(), this.dialog_id));
      return;
    }
    Object localObject = MessagesController.getNotificationsSettings(this.currentAccount).edit();
    ((SharedPreferences.Editor)localObject).putInt("notify2_" + this.dialog_id, 0);
    MessagesStorage.getInstance(this.currentAccount).setDialogFlags(this.dialog_id, 0L);
    ((SharedPreferences.Editor)localObject).commit();
    localObject = (TLRPC.TL_dialog)MessagesController.getInstance(this.currentAccount).dialogs_dict.get(this.dialog_id);
    if (localObject != null) {
      ((TLRPC.TL_dialog)localObject).notify_settings = new TLRPC.TL_peerNotifySettings();
    }
    NotificationsController.getInstance(this.currentAccount).updateServerNotificationsSettings(this.dialog_id);
  }
  
  private void updateActionModeTitle()
  {
    if (!this.actionBar.isActionModeShowed()) {}
    while ((this.selectedMessagesIds[0].size() == 0) && (this.selectedMessagesIds[1].size() == 0)) {
      return;
    }
    this.selectedMessagesCountTextView.setNumber(this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size(), true);
  }
  
  private void updateBotButtons()
  {
    if ((this.headerItem == null) || (this.currentUser == null) || (this.currentEncryptedChat != null) || (!this.currentUser.bot)) {
      return;
    }
    int k = 0;
    int i = 0;
    int m = 0;
    int j = 0;
    if (this.botInfo.size() != 0)
    {
      int n = 0;
      k = i;
      m = j;
      if (n < this.botInfo.size())
      {
        TLRPC.BotInfo localBotInfo = (TLRPC.BotInfo)this.botInfo.valueAt(n);
        int i1 = 0;
        for (;;)
        {
          k = i;
          m = j;
          TLRPC.TL_botCommand localTL_botCommand;
          if (i1 < localBotInfo.commands.size())
          {
            localTL_botCommand = (TLRPC.TL_botCommand)localBotInfo.commands.get(i1);
            if (!localTL_botCommand.command.toLowerCase().equals("help")) {
              break label165;
            }
            k = 1;
          }
          for (;;)
          {
            if ((j == 0) || (k == 0)) {
              break label191;
            }
            m = j;
            n += 1;
            i = k;
            j = m;
            break;
            label165:
            k = i;
            if (localTL_botCommand.command.toLowerCase().equals("settings"))
            {
              j = 1;
              k = i;
            }
          }
          label191:
          i1 += 1;
          i = k;
        }
      }
    }
    if (k != 0) {
      this.headerItem.showSubItem(30);
    }
    while (m != 0)
    {
      this.headerItem.showSubItem(31);
      return;
      this.headerItem.hideSubItem(30);
    }
    this.headerItem.hideSubItem(31);
  }
  
  private void updateBottomOverlay()
  {
    if (this.bottomOverlayChatText == null) {
      return;
    }
    if (this.currentChat != null) {
      if ((ChatObject.isChannel(this.currentChat)) && (!(this.currentChat instanceof TLRPC.TL_channelForbidden))) {
        if (ChatObject.isNotInChat(this.currentChat))
        {
          this.bottomOverlayChatText.setText(LocaleController.getString("ChannelJoin", 2131493170));
          if ((this.searchItem == null) || (this.searchItem.getVisibility() != 0)) {
            break label418;
          }
          this.searchContainer.setVisibility(0);
          this.bottomOverlayChat.setVisibility(4);
          this.chatActivityEnterView.setFieldFocused(false);
          this.chatActivityEnterView.setVisibility(4);
          if (!this.chatActivityEnterView.isTopViewVisible()) {
            break label410;
          }
          this.topViewWasVisible = 1;
          this.chatActivityEnterView.hideTopView(false);
        }
      }
    }
    for (;;)
    {
      checkRaiseSensors();
      return;
      if (!MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id))
      {
        this.bottomOverlayChatText.setText(LocaleController.getString("ChannelMute", 2131493193));
        break;
      }
      this.bottomOverlayChatText.setText(LocaleController.getString("ChannelUnmute", 2131493211));
      break;
      this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisGroup", 2131493378));
      break;
      if (this.userBlocked)
      {
        if (this.currentUser.bot) {
          this.bottomOverlayChatText.setText(LocaleController.getString("BotUnblock", 2131493099));
        }
        for (;;)
        {
          if (this.botButtons == null) {
            break label328;
          }
          this.botButtons = null;
          if (this.chatActivityEnterView == null) {
            break;
          }
          if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
          {
            this.botReplyButtons = null;
            showReplyPanel(false, null, null, null, false);
          }
          this.chatActivityEnterView.setButtons(this.botButtons, false);
          break;
          this.bottomOverlayChatText.setText(LocaleController.getString("Unblock", 2131494506));
        }
        label328:
        break;
      }
      if ((this.botUser != null) && (this.currentUser.bot))
      {
        this.bottomOverlayChatText.setText(LocaleController.getString("BotStart", 2131493095));
        this.chatActivityEnterView.hidePopup(false);
        if (getParentActivity() == null) {
          break;
        }
        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
        break;
      }
      this.bottomOverlayChatText.setText(LocaleController.getString("DeleteThisChat", 2131493377));
      break;
      label410:
      this.topViewWasVisible = 2;
    }
    label418:
    this.searchContainer.setVisibility(4);
    if (((this.currentChat != null) && ((ChatObject.isNotInChat(this.currentChat)) || (!ChatObject.canWriteToChat(this.currentChat)))) || ((this.currentUser != null) && ((UserObject.isDeleted(this.currentUser)) || (this.userBlocked)))) {
      if (this.chatActivityEnterView.isEditingMessage())
      {
        this.chatActivityEnterView.setVisibility(0);
        this.bottomOverlayChat.setVisibility(4);
        this.chatActivityEnterView.setFieldFocused();
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            ChatActivity.this.chatActivityEnterView.openKeyboard();
          }
        }, 100L);
        label524:
        if (this.muteItem != null) {
          this.muteItem.setVisibility(8);
        }
        this.attachItem.setVisibility(8);
        this.headerItem.setVisibility(0);
      }
    }
    label557:
    label667:
    label684:
    for (;;)
    {
      if (this.topViewWasVisible == 1)
      {
        this.chatActivityEnterView.showTopView(false, false);
        this.topViewWasVisible = 0;
        break;
        this.bottomOverlayChat.setVisibility(0);
        this.chatActivityEnterView.setFieldFocused(false);
        this.chatActivityEnterView.setVisibility(4);
        this.chatActivityEnterView.closeKeyboard();
        break label524;
        if ((this.botUser == null) || (!this.currentUser.bot)) {
          break label667;
        }
        this.bottomOverlayChat.setVisibility(0);
        this.chatActivityEnterView.setVisibility(4);
      }
      for (;;)
      {
        if (this.muteItem == null) {
          break label684;
        }
        this.muteItem.setVisibility(0);
        break label557;
        break;
        this.chatActivityEnterView.setVisibility(0);
        this.bottomOverlayChat.setVisibility(4);
      }
    }
  }
  
  private void updateContactStatus()
  {
    if (this.addContactItem == null) {
      return;
    }
    if (this.currentUser == null) {
      this.addContactItem.setVisibility(8);
    }
    for (;;)
    {
      checkListViewPaddings();
      return;
      TLRPC.User localUser = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
      if (localUser != null) {
        this.currentUser = localUser;
      }
      if (((this.currentEncryptedChat != null) && (!(this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) || (MessagesController.isSupportId(this.currentUser.id)) || (UserObject.isDeleted(this.currentUser)) || (ContactsController.getInstance(this.currentAccount).isLoadingContacts()) || ((!TextUtils.isEmpty(this.currentUser.phone)) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) != null) && ((ContactsController.getInstance(this.currentAccount).contactsDict.size() != 0) || (!ContactsController.getInstance(this.currentAccount).isLoadingContacts()))))
      {
        this.addContactItem.setVisibility(8);
      }
      else
      {
        this.addContactItem.setVisibility(0);
        if (!TextUtils.isEmpty(this.currentUser.phone))
        {
          this.addContactItem.setText(LocaleController.getString("AddToContacts", 2131492940));
          this.reportSpamButton.setPadding(AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(50.0F), 0);
          this.addToContactsButton.setVisibility(0);
          this.reportSpamContainer.setLayoutParams(LayoutHelper.createLinear(-1, -1, 0.5F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        }
        else
        {
          this.addContactItem.setText(LocaleController.getString("ShareMyContactInfo", 2131494386));
          this.addToContactsButton.setVisibility(8);
          this.reportSpamButton.setPadding(AndroidUtilities.dp(50.0F), 0, AndroidUtilities.dp(50.0F), 0);
          this.reportSpamContainer.setLayoutParams(LayoutHelper.createLinear(-1, -1, 1.0F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        }
      }
    }
  }
  
  private void updateInformationForScreenshotDetector()
  {
    if (this.currentUser == null) {}
    Object localObject2;
    Object localObject1;
    do
    {
      return;
      if (this.currentEncryptedChat != null)
      {
        localObject2 = new ArrayList();
        if (this.chatListView != null)
        {
          int j = this.chatListView.getChildCount();
          int i = 0;
          while (i < j)
          {
            View localView = this.chatListView.getChildAt(i);
            localObject1 = null;
            if ((localView instanceof ChatMessageCell)) {
              localObject1 = ((ChatMessageCell)localView).getMessageObject();
            }
            if ((localObject1 != null) && (((MessageObject)localObject1).getId() < 0) && (((MessageObject)localObject1).messageOwner.random_id != 0L)) {
              ((ArrayList)localObject2).add(Long.valueOf(((MessageObject)localObject1).messageOwner.random_id));
            }
            i += 1;
          }
        }
        MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, this.chatEnterTime, this.chatLeaveTime, this.currentUser, this.currentEncryptedChat, (ArrayList)localObject2, 0);
        return;
      }
      localObject1 = SecretMediaViewer.getInstance();
      localObject2 = ((SecretMediaViewer)localObject1).getCurrentMessageObject();
    } while ((localObject2 == null) || (((MessageObject)localObject2).isOut()));
    MediaController.getInstance().setLastVisibleMessageIds(this.currentAccount, ((SecretMediaViewer)localObject1).getOpenTime(), ((SecretMediaViewer)localObject1).getCloseTime(), this.currentUser, null, null, ((MessageObject)localObject2).getId());
  }
  
  private void updateMessagesVisisblePart()
  {
    if (this.chatListView == null) {}
    label81:
    label138:
    label306:
    label498:
    label506:
    label535:
    label704:
    label806:
    label845:
    label904:
    label910:
    label1132:
    label1155:
    label1161:
    label1167:
    label1251:
    label1262:
    label1276:
    label1356:
    label1440:
    label1461:
    label1467:
    do
    {
      do
      {
        int k;
        Object localObject1;
        int j;
        int i;
        int n;
        for (;;)
        {
          return;
          int i8 = this.chatListView.getChildCount();
          int i1;
          int i2;
          Object localObject5;
          Object localObject3;
          int m;
          int i3;
          Object localObject2;
          Object localObject4;
          Object localObject7;
          int i7;
          int i4;
          int i6;
          int i5;
          Object localObject6;
          if (this.chatActivityEnterView.isTopViewVisible())
          {
            i1 = AndroidUtilities.dp(48.0F);
            int i9 = this.chatListView.getMeasuredHeight();
            k = Integer.MAX_VALUE;
            i2 = Integer.MAX_VALUE;
            localObject5 = null;
            localObject3 = null;
            localObject1 = null;
            m = 0;
            j = Integer.MIN_VALUE;
            i = Integer.MAX_VALUE;
            n = Integer.MIN_VALUE;
            i3 = 0;
            if (i3 >= i8) {
              break label704;
            }
            localObject2 = this.chatListView.getChildAt(i3);
            localObject4 = null;
            if (!(localObject2 instanceof ChatMessageCell)) {
              break label506;
            }
            localObject7 = (ChatMessageCell)localObject2;
            i7 = ((ChatMessageCell)localObject7).getTop();
            ((ChatMessageCell)localObject7).getBottom();
            if (i7 < 0) {
              break label498;
            }
            i4 = 0;
            i6 = ((ChatMessageCell)localObject7).getMeasuredHeight();
            i5 = i6;
            if (i6 > i9) {
              i5 = i4 + i9;
            }
            ((ChatMessageCell)localObject7).setVisiblePart(i4, i5 - i4);
            localObject6 = ((ChatMessageCell)localObject7).getMessageObject();
            i4 = m;
            localObject4 = localObject6;
            if (this.roundVideoContainer != null)
            {
              i4 = m;
              localObject4 = localObject6;
              if (((MessageObject)localObject6).isRoundVideo())
              {
                i4 = m;
                localObject4 = localObject6;
                if (MediaController.getInstance().isPlayingMessage((MessageObject)localObject6))
                {
                  localObject4 = ((ChatMessageCell)localObject7).getPhotoImage();
                  this.roundVideoContainer.setTranslationX(((ImageReceiver)localObject4).getImageX() + ((ChatMessageCell)localObject7).getTranslationX());
                  this.roundVideoContainer.setTranslationY(this.fragmentView.getPaddingTop() + i7 + ((ImageReceiver)localObject4).getImageY() - i1);
                  this.fragmentView.invalidate();
                  this.roundVideoContainer.invalidate();
                  i4 = 1;
                  localObject4 = localObject6;
                }
              }
            }
            m = j;
            i6 = i;
            i5 = n;
            if (localObject4 != null)
            {
              m = j;
              i6 = i;
              i5 = n;
              if (!((MessageObject)localObject4).isOut())
              {
                m = j;
                i6 = i;
                i5 = n;
                if (((MessageObject)localObject4).isUnread())
                {
                  i5 = ((MessageObject)localObject4).getId();
                  m = j;
                  if (i5 > 0) {
                    m = Math.max(j, ((MessageObject)localObject4).getId());
                  }
                  j = i;
                  if (i5 < 0) {
                    j = Math.min(i, ((MessageObject)localObject4).getId());
                  }
                  i5 = Math.max(n, ((MessageObject)localObject4).messageOwner.date);
                  i6 = j;
                }
              }
            }
            if (((View)localObject2).getBottom() > this.chatListView.getPaddingTop()) {
              break label535;
            }
            i7 = k;
            k = i2;
            localObject7 = localObject1;
            localObject6 = localObject5;
            localObject1 = localObject3;
          }
          for (;;)
          {
            i3 += 1;
            j = m;
            i = i6;
            n = i5;
            m = i4;
            localObject3 = localObject1;
            localObject5 = localObject6;
            localObject1 = localObject7;
            i2 = k;
            k = i7;
            break label81;
            i1 = 0;
            break;
            i4 = -i7;
            break label138;
            i4 = m;
            if (!(localObject2 instanceof ChatActionCell)) {
              break label306;
            }
            localObject4 = ((ChatActionCell)localObject2).getMessageObject();
            i4 = m;
            break label306;
            j = ((View)localObject2).getBottom();
            localObject4 = localObject3;
            localObject3 = localObject1;
            i = k;
            if (j < k)
            {
              i = j;
              if (((localObject2 instanceof ChatMessageCell)) || ((localObject2 instanceof ChatActionCell))) {
                localObject1 = localObject2;
              }
              localObject4 = localObject2;
              localObject3 = localObject1;
            }
            localObject1 = localObject4;
            localObject6 = localObject5;
            localObject7 = localObject3;
            k = i2;
            i7 = i;
            if ((localObject2 instanceof ChatActionCell))
            {
              localObject1 = localObject4;
              localObject6 = localObject5;
              localObject7 = localObject3;
              k = i2;
              i7 = i;
              if (((ChatActionCell)localObject2).getMessageObject().isDateObject)
              {
                if (((View)localObject2).getAlpha() != 1.0F) {
                  ((View)localObject2).setAlpha(1.0F);
                }
                localObject1 = localObject4;
                localObject6 = localObject5;
                localObject7 = localObject3;
                k = i2;
                i7 = i;
                if (j < i2)
                {
                  localObject1 = localObject4;
                  localObject6 = localObject2;
                  localObject7 = localObject3;
                  k = j;
                  i7 = i;
                }
              }
            }
          }
          if (this.roundVideoContainer != null)
          {
            if (m != 0) {
              break label1132;
            }
            this.roundVideoContainer.setTranslationY(-AndroidUtilities.roundMessageSize - 100);
            this.fragmentView.invalidate();
            localObject2 = MediaController.getInstance().getPlayingMessageObject();
            if ((localObject2 != null) && (((MessageObject)localObject2).isRoundVideo()) && (((MessageObject)localObject2).eventId == 0L) && (this.checkTextureViewPosition)) {
              MediaController.getInstance().setCurrentRoundVisible(false);
            }
          }
          if (localObject1 != null)
          {
            if ((localObject1 instanceof ChatMessageCell))
            {
              localObject1 = ((ChatMessageCell)localObject1).getMessageObject();
              this.floatingDateView.setCustomDate(((MessageObject)localObject1).messageOwner.date);
            }
          }
          else
          {
            this.currentFloatingDateOnScreen = false;
            if (((localObject3 instanceof ChatMessageCell)) || ((localObject3 instanceof ChatActionCell))) {
              break label1155;
            }
            bool = true;
            this.currentFloatingTopIsNotMessage = bool;
            if (localObject5 == null) {
              break label1262;
            }
            if ((((View)localObject5).getTop() <= this.chatListView.getPaddingTop()) && (!this.currentFloatingTopIsNotMessage)) {
              break label1167;
            }
            if (((View)localObject5).getAlpha() != 1.0F) {
              ((View)localObject5).setAlpha(1.0F);
            }
            if (this.currentFloatingTopIsNotMessage) {
              break label1161;
            }
            bool = true;
            hideFloatingDateView(bool);
            k = ((View)localObject5).getBottom() - this.chatListView.getPaddingTop();
            if ((k <= this.floatingDateView.getMeasuredHeight()) || (k >= this.floatingDateView.getMeasuredHeight() * 2)) {
              break label1251;
            }
            this.floatingDateView.setTranslationY(-this.floatingDateView.getMeasuredHeight() * 2 + k);
          }
          for (;;)
          {
            if (this.firstLoading) {
              break label1276;
            }
            if ((j == Integer.MIN_VALUE) && (i == Integer.MAX_VALUE)) {
              break label1467;
            }
            k = 0;
            i1 = 0;
            while (i1 < this.messages.size())
            {
              localObject1 = (MessageObject)this.messages.get(i1);
              i2 = ((MessageObject)localObject1).getId();
              m = k;
              if (j != Integer.MIN_VALUE)
              {
                m = k;
                if (i2 > 0)
                {
                  m = k;
                  if (i2 <= j)
                  {
                    m = k;
                    if (((MessageObject)localObject1).isUnread())
                    {
                      ((MessageObject)localObject1).setIsRead();
                      m = k + 1;
                    }
                  }
                }
              }
              k = m;
              if (i != Integer.MAX_VALUE)
              {
                k = m;
                if (i2 < 0)
                {
                  k = m;
                  if (i2 >= i)
                  {
                    k = m;
                    if (((MessageObject)localObject1).isUnread())
                    {
                      ((MessageObject)localObject1).setIsRead();
                      k = m + 1;
                    }
                  }
                }
              }
              i1 += 1;
            }
            MediaController.getInstance().setCurrentRoundVisible(true);
            break;
            localObject1 = ((ChatActionCell)localObject1).getMessageObject();
            break label806;
            bool = false;
            break label845;
            bool = false;
            break label904;
            if (((View)localObject5).getAlpha() != 0.0F) {
              ((View)localObject5).setAlpha(0.0F);
            }
            if (this.floatingDateAnimation != null)
            {
              this.floatingDateAnimation.cancel();
              this.floatingDateAnimation = null;
            }
            if (this.floatingDateView.getTag() == null) {
              this.floatingDateView.setTag(Integer.valueOf(1));
            }
            if (this.floatingDateView.getAlpha() != 1.0F) {
              this.floatingDateView.setAlpha(1.0F);
            }
            this.currentFloatingDateOnScreen = true;
            break label910;
            this.floatingDateView.setTranslationY(0.0F);
            continue;
            hideFloatingDateView(true);
            this.floatingDateView.setTranslationY(0.0F);
          }
        }
        long l;
        if ((j == this.minMessageId[0]) || (i == this.minMessageId[0]))
        {
          this.newUnreadMessageCount = 0;
          this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
          if (this.newUnreadMessageCount > 0) {
            break label1440;
          }
          if (this.pagedownButtonCounter.getVisibility() != 4) {
            this.pagedownButtonCounter.setVisibility(4);
          }
          localObject1 = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          if ((j != this.minMessageId[0]) && (i != this.minMessageId[0])) {
            break label1461;
          }
        }
        for (boolean bool = true;; bool = false)
        {
          ((MessagesController)localObject1).markDialogAsRead(l, j, i, n, false, k, bool);
          this.firstUnreadSent = true;
          return;
          this.newUnreadMessageCount -= k;
          if (this.newUnreadMessageCount >= 0) {
            break;
          }
          this.newUnreadMessageCount = 0;
          break;
          if (this.pagedownButtonCounter.getVisibility() == 0) {
            break label1356;
          }
          this.pagedownButtonCounter.setVisibility(0);
          break label1356;
        }
      } while (this.firstUnreadSent);
      this.newUnreadMessageCount = 0;
      this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
      if (this.pagedownButtonCounter.getVisibility() != 4) {
        this.pagedownButtonCounter.setVisibility(4);
      }
    } while (this.chatLayoutManager.findFirstVisibleItemPosition() != 0);
    MessagesController.getInstance(this.currentAccount).markDialogAsRead(this.dialog_id, this.minMessageId[0], this.minMessageId[0], this.maxDate[0], false, 0, true);
    this.firstUnreadSent = true;
  }
  
  private void updatePinnedMessageView(boolean paramBoolean)
  {
    if (this.pinnedMessageView == null) {
      return;
    }
    if (this.info != null)
    {
      if ((this.pinnedMessageObject != null) && (this.info.pinned_msg_id != this.pinnedMessageObject.getId())) {
        this.pinnedMessageObject = null;
      }
      if ((this.info.pinned_msg_id != 0) && (this.pinnedMessageObject == null)) {
        this.pinnedMessageObject = ((MessageObject)this.messagesDict[0].get(this.info.pinned_msg_id));
      }
    }
    Object localObject1 = MessagesController.getNotificationsSettings(this.currentAccount);
    if ((this.info == null) || (this.info.pinned_msg_id == 0) || (this.info.pinned_msg_id == ((SharedPreferences)localObject1).getInt("pin_" + this.dialog_id, 0)) || ((this.actionBar != null) && ((this.actionBar.isActionModeShowed()) || (this.actionBar.isSearchFieldVisible())))) {
      hidePinnedMessageView(paramBoolean);
    }
    for (;;)
    {
      checkListViewPaddings();
      return;
      if (this.pinnedMessageObject != null)
      {
        if (this.pinnedMessageView.getTag() != null)
        {
          this.pinnedMessageView.setTag(null);
          if (this.pinnedMessageViewAnimator != null)
          {
            this.pinnedMessageViewAnimator.cancel();
            this.pinnedMessageViewAnimator = null;
          }
          if (!paramBoolean) {
            break label543;
          }
          this.pinnedMessageView.setVisibility(0);
          this.pinnedMessageViewAnimator = new AnimatorSet();
          this.pinnedMessageViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.pinnedMessageView, "translationY", new float[] { 0.0F }) });
          this.pinnedMessageViewAnimator.setDuration(200L);
          this.pinnedMessageViewAnimator.addListener(new AnimatorListenerAdapter()
          {
            public void onAnimationCancel(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26002(ChatActivity.this, null);
              }
            }
            
            public void onAnimationEnd(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.pinnedMessageViewAnimator != null) && (ChatActivity.this.pinnedMessageViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26002(ChatActivity.this, null);
              }
            }
          });
          this.pinnedMessageViewAnimator.start();
        }
        FrameLayout.LayoutParams localLayoutParams1;
        FrameLayout.LayoutParams localLayoutParams2;
        Object localObject2;
        int i;
        for (;;)
        {
          localLayoutParams1 = (FrameLayout.LayoutParams)this.pinnedMessageNameTextView.getLayoutParams();
          localLayoutParams2 = (FrameLayout.LayoutParams)this.pinnedMessageTextView.getLayoutParams();
          localObject2 = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs2, AndroidUtilities.dp(50.0F));
          localObject1 = localObject2;
          if (localObject2 == null) {
            localObject1 = FileLoader.getClosestPhotoSizeWithSize(this.pinnedMessageObject.photoThumbs, AndroidUtilities.dp(50.0F));
          }
          if ((localObject1 != null) && (!(localObject1 instanceof TLRPC.TL_photoSizeEmpty)) && (!(((TLRPC.PhotoSize)localObject1).location instanceof TLRPC.TL_fileLocationUnavailable)) && (this.pinnedMessageObject.type != 13)) {
            break label562;
          }
          this.pinnedMessageImageView.setImageBitmap(null);
          this.pinnedImageLocation = null;
          this.pinnedMessageImageView.setVisibility(4);
          i = AndroidUtilities.dp(18.0F);
          localLayoutParams2.leftMargin = i;
          localLayoutParams1.leftMargin = i;
          this.pinnedMessageNameTextView.setLayoutParams(localLayoutParams1);
          this.pinnedMessageTextView.setLayoutParams(localLayoutParams2);
          this.pinnedMessageNameTextView.setText(LocaleController.getString("PinnedMessage", 2131494171));
          if (this.pinnedMessageObject.type != 14) {
            break label652;
          }
          this.pinnedMessageTextView.setText(String.format("%s - %s", new Object[] { this.pinnedMessageObject.getMusicAuthor(), this.pinnedMessageObject.getMusicTitle() }));
          break;
          label543:
          this.pinnedMessageView.setTranslationY(0.0F);
          this.pinnedMessageView.setVisibility(0);
        }
        label562:
        if (this.pinnedMessageObject.isRoundVideo()) {
          this.pinnedMessageImageView.setRoundRadius(AndroidUtilities.dp(16.0F));
        }
        for (;;)
        {
          this.pinnedImageLocation = ((TLRPC.PhotoSize)localObject1).location;
          this.pinnedMessageImageView.setImage(this.pinnedImageLocation, "50_50", (Drawable)null);
          this.pinnedMessageImageView.setVisibility(0);
          i = AndroidUtilities.dp(55.0F);
          localLayoutParams2.leftMargin = i;
          localLayoutParams1.leftMargin = i;
          break;
          this.pinnedMessageImageView.setRoundRadius(0);
        }
        label652:
        if ((this.pinnedMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame))
        {
          this.pinnedMessageTextView.setText(Emoji.replaceEmoji(this.pinnedMessageObject.messageOwner.media.game.title, this.pinnedMessageTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
        }
        else if (this.pinnedMessageObject.messageText != null)
        {
          localObject2 = this.pinnedMessageObject.messageText.toString();
          localObject1 = localObject2;
          if (((String)localObject2).length() > 150) {
            localObject1 = ((String)localObject2).substring(0, 150);
          }
          localObject1 = ((String)localObject1).replace('\n', ' ');
          this.pinnedMessageTextView.setText(Emoji.replaceEmoji((CharSequence)localObject1, this.pinnedMessageTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
        }
      }
      else
      {
        this.pinnedImageLocation = null;
        hidePinnedMessageView(paramBoolean);
        if (this.loadingPinnedMessage != this.info.pinned_msg_id)
        {
          this.loadingPinnedMessage = this.info.pinned_msg_id;
          DataQuery.getInstance(this.currentAccount).loadPinnedMessage(this.currentChat.id, this.info.pinned_msg_id, true);
        }
      }
    }
  }
  
  private void updateSearchButtons(int paramInt1, int paramInt2, int paramInt3)
  {
    float f2 = 1.0F;
    ImageView localImageView;
    boolean bool;
    if (this.searchUpButton != null)
    {
      localImageView = this.searchUpButton;
      if ((paramInt1 & 0x1) == 0) {
        break label122;
      }
      bool = true;
      localImageView.setEnabled(bool);
      localImageView = this.searchDownButton;
      if ((paramInt1 & 0x2) == 0) {
        break label128;
      }
      bool = true;
      label47:
      localImageView.setEnabled(bool);
      localImageView = this.searchUpButton;
      if (!this.searchUpButton.isEnabled()) {
        break label134;
      }
      f1 = 1.0F;
      label73:
      localImageView.setAlpha(f1);
      localImageView = this.searchDownButton;
      if (!this.searchDownButton.isEnabled()) {
        break label142;
      }
    }
    label122:
    label128:
    label134:
    label142:
    for (float f1 = f2;; f1 = 0.5F)
    {
      localImageView.setAlpha(f1);
      if (paramInt3 >= 0) {
        break label150;
      }
      this.searchCountText.setText("");
      return;
      bool = false;
      break;
      bool = false;
      break label47;
      f1 = 0.5F;
      break label73;
    }
    label150:
    if (paramInt3 == 0)
    {
      this.searchCountText.setText(LocaleController.getString("NoResult", 2131493906));
      return;
    }
    this.searchCountText.setText(LocaleController.formatString("Of", 2131494029, new Object[] { Integer.valueOf(paramInt2 + 1), Integer.valueOf(paramInt3) }));
  }
  
  private void updateSecretStatus()
  {
    if (this.bottomOverlay == null) {
      return;
    }
    int j = 0;
    int i;
    if ((ChatObject.isChannel(this.currentChat)) && (this.currentChat.banned_rights != null) && (this.currentChat.banned_rights.send_messages))
    {
      if (AndroidUtilities.isBannedForever(this.currentChat.banned_rights.until_date)) {
        this.bottomOverlayText.setText(LocaleController.getString("SendMessageRestrictedForever", 2131494347));
      }
      for (;;)
      {
        this.bottomOverlay.setVisibility(0);
        if (this.mentionListAnimation != null)
        {
          this.mentionListAnimation.cancel();
          this.mentionListAnimation = null;
        }
        this.mentionContainer.setVisibility(8);
        this.mentionContainer.setTag(null);
        i = 1;
        label121:
        if (i == 0) {
          break label259;
        }
        this.chatActivityEnterView.hidePopup(false);
        if (getParentActivity() == null) {
          break;
        }
        AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
        return;
        this.bottomOverlayText.setText(LocaleController.formatString("SendMessageRestricted", 2131494346, new Object[] { LocaleController.formatDateForBan(this.currentChat.banned_rights.until_date) }));
      }
    }
    if ((this.currentEncryptedChat == null) || (this.bigEmptyView == null))
    {
      this.bottomOverlay.setVisibility(4);
      return;
    }
    if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatRequested))
    {
      this.bottomOverlayText.setText(LocaleController.getString("EncryptionProcessing", 2131493441));
      this.bottomOverlay.setVisibility(0);
      i = 1;
    }
    for (;;)
    {
      checkRaiseSensors();
      checkActionBarMenu();
      break label121;
      label259:
      break;
      if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatWaiting))
      {
        this.bottomOverlayText.setText(AndroidUtilities.replaceTags(LocaleController.formatString("AwaitingEncryption", 2131493075, new Object[] { "<b>" + this.currentUser.first_name + "</b>" })));
        this.bottomOverlay.setVisibility(0);
        i = 1;
      }
      else if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChatDiscarded))
      {
        this.bottomOverlayText.setText(LocaleController.getString("EncryptionRejected", 2131493442));
        this.bottomOverlay.setVisibility(0);
        this.chatActivityEnterView.setFieldText("");
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, false);
        i = 1;
      }
      else
      {
        i = j;
        if ((this.currentEncryptedChat instanceof TLRPC.TL_encryptedChat))
        {
          this.bottomOverlay.setVisibility(4);
          i = j;
        }
      }
    }
  }
  
  private void updateSpamView()
  {
    if (this.reportSpamView == null)
    {
      if (BuildVars.LOGS_ENABLED) {
        FileLog.d("no spam view found");
      }
      return;
    }
    SharedPreferences localSharedPreferences = MessagesController.getNotificationsSettings(this.currentAccount);
    int i;
    int j;
    if (this.currentEncryptedChat != null) {
      if ((this.currentEncryptedChat.admin_id != UserConfig.getInstance(this.currentAccount).getClientUserId()) && (!ContactsController.getInstance(this.currentAccount).isLoadingContacts()) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) == null))
      {
        i = 1;
        j = i;
        if (i != 0)
        {
          j = i;
          if (localSharedPreferences.getInt("spam3_" + this.dialog_id, 0) == 1) {
            j = 0;
          }
        }
        if (j != 0) {
          break label327;
        }
        if (this.reportSpamView.getTag() == null)
        {
          if (BuildVars.LOGS_ENABLED) {
            FileLog.d("hide spam button");
          }
          this.reportSpamView.setTag(Integer.valueOf(1));
          if (this.reportSpamViewAnimator != null) {
            this.reportSpamViewAnimator.cancel();
          }
          this.reportSpamViewAnimator = new AnimatorSet();
          this.reportSpamViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.reportSpamView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
          this.reportSpamViewAnimator.setDuration(200L);
          this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter()
          {
            public void onAnimationCancel(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
                ChatActivity.access$26102(ChatActivity.this, null);
              }
            }
            
            public void onAnimationEnd(Animator paramAnonymousAnimator)
            {
              if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator)))
              {
                ChatActivity.this.reportSpamView.setVisibility(8);
                ChatActivity.access$26102(ChatActivity.this, null);
              }
            }
          });
          this.reportSpamViewAnimator.start();
        }
      }
    }
    for (;;)
    {
      checkListViewPaddings();
      return;
      i = 0;
      break;
      if (localSharedPreferences.getInt("spam3_" + this.dialog_id, 0) == 2) {}
      for (j = 1;; j = 0) {
        break;
      }
      label327:
      if (this.reportSpamView.getTag() != null)
      {
        if (BuildVars.LOGS_ENABLED) {
          FileLog.d("show spam button");
        }
        this.reportSpamView.setTag(null);
        this.reportSpamView.setVisibility(0);
        if (this.reportSpamViewAnimator != null) {
          this.reportSpamViewAnimator.cancel();
        }
        this.reportSpamViewAnimator = new AnimatorSet();
        this.reportSpamViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.reportSpamView, "translationY", new float[] { 0.0F }) });
        this.reportSpamViewAnimator.setDuration(200L);
        this.reportSpamViewAnimator.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$26102(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymousAnimator)
          {
            if ((ChatActivity.this.reportSpamViewAnimator != null) && (ChatActivity.this.reportSpamViewAnimator.equals(paramAnonymousAnimator))) {
              ChatActivity.access$26102(ChatActivity.this, null);
            }
          }
        });
        this.reportSpamViewAnimator.start();
      }
    }
  }
  
  private void updateTextureViewPosition()
  {
    if (this.fragmentView == null) {
      return;
    }
    int m = 0;
    int n = this.chatListView.getChildCount();
    int i;
    label37:
    int j;
    if (this.chatActivityEnterView.isTopViewVisible())
    {
      i = AndroidUtilities.dp(48.0F);
      j = 0;
    }
    Object localObject1;
    for (;;)
    {
      int k = m;
      if (j < n)
      {
        localObject1 = this.chatListView.getChildAt(j);
        if ((localObject1 instanceof ChatMessageCell))
        {
          localObject1 = (ChatMessageCell)localObject1;
          Object localObject2 = ((ChatMessageCell)localObject1).getMessageObject();
          if ((this.roundVideoContainer != null) && (((MessageObject)localObject2).isRoundVideo()) && (MediaController.getInstance().isPlayingMessage((MessageObject)localObject2)))
          {
            localObject2 = ((ChatMessageCell)localObject1).getPhotoImage();
            this.roundVideoContainer.setTranslationX(((ImageReceiver)localObject2).getImageX() + ((ChatMessageCell)localObject1).getTranslationX());
            this.roundVideoContainer.setTranslationY(this.fragmentView.getPaddingTop() + ((ChatMessageCell)localObject1).getTop() + ((ImageReceiver)localObject2).getImageY() - i);
            this.fragmentView.invalidate();
            this.roundVideoContainer.invalidate();
            k = 1;
          }
        }
      }
      else
      {
        if (this.roundVideoContainer == null) {
          break;
        }
        localObject1 = MediaController.getInstance().getPlayingMessageObject();
        if ((localObject1 == null) || (((MessageObject)localObject1).eventId != 0L)) {
          break;
        }
        if (k != 0) {
          break label293;
        }
        this.roundVideoContainer.setTranslationY(-AndroidUtilities.roundMessageSize - 100);
        this.fragmentView.invalidate();
        if ((localObject1 == null) || (!((MessageObject)localObject1).isRoundVideo())) {
          break;
        }
        if ((!this.checkTextureViewPosition) && (PipRoundVideoView.getInstance() == null)) {
          break label279;
        }
        MediaController.getInstance().setCurrentRoundVisible(false);
        return;
        i = 0;
        break label37;
      }
      j += 1;
    }
    label279:
    scrollToMessageId(((MessageObject)localObject1).getId(), 0, false, 0, true);
    return;
    label293:
    MediaController.getInstance().setCurrentRoundVisible(true);
    scrollToMessageId(((MessageObject)localObject1).getId(), 0, false, 0, true);
  }
  
  private void updateTitle()
  {
    if (this.avatarContainer == null) {}
    do
    {
      return;
      if (this.currentChat != null)
      {
        this.avatarContainer.setTitle(this.currentChat.title);
        return;
      }
    } while (this.currentUser == null);
    if (this.currentUser.self)
    {
      this.avatarContainer.setTitle(LocaleController.getString("SavedMessages", 2131494293));
      return;
    }
    if ((!MessagesController.isSupportId(this.currentUser.id)) && (ContactsController.getInstance(this.currentAccount).contactsDict.get(Integer.valueOf(this.currentUser.id)) == null) && ((ContactsController.getInstance(this.currentAccount).contactsDict.size() != 0) || (!ContactsController.getInstance(this.currentAccount).isLoadingContacts())))
    {
      if (!TextUtils.isEmpty(this.currentUser.phone))
      {
        this.avatarContainer.setTitle(PhoneFormat.getInstance().format("+" + this.currentUser.phone));
        return;
      }
      this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser));
      return;
    }
    this.avatarContainer.setTitle(UserObject.getUserName(this.currentUser));
  }
  
  private void updateTitleIcons()
  {
    Drawable localDrawable2 = null;
    if (this.avatarContainer == null) {
      return;
    }
    if (MessagesController.getInstance(this.currentAccount).isDialogMuted(this.dialog_id)) {}
    for (Drawable localDrawable1 = Theme.chat_muteIconDrawable;; localDrawable1 = null)
    {
      ChatAvatarContainer localChatAvatarContainer = this.avatarContainer;
      if (this.currentEncryptedChat != null) {
        localDrawable2 = Theme.chat_lockIconDrawable;
      }
      localChatAvatarContainer.setTitleIcons(localDrawable2, localDrawable1);
      if (this.muteItem == null) {
        break;
      }
      if (localDrawable1 == null) {
        break label86;
      }
      this.muteItem.setText(LocaleController.getString("UnmuteNotifications", 2131494511));
      return;
    }
    label86:
    this.muteItem.setText(LocaleController.getString("MuteNotifications", 2131493858));
  }
  
  private void updateVisibleRows()
  {
    if (this.chatListView == null) {}
    int j;
    label95:
    label166:
    label201:
    label210:
    label242:
    label254:
    label293:
    label348:
    label400:
    label405:
    label417:
    label430:
    label436:
    label442:
    label448:
    label454:
    label463:
    label491:
    do
    {
      return;
      i = -1;
      j = i;
      if (!this.wasManualScroll)
      {
        j = i;
        if (this.unreadMessageObject != null)
        {
          j = i;
          if (this.chatListView.getMeasuredHeight() != 0)
          {
            k = this.messages.indexOf(this.unreadMessageObject);
            j = i;
            if (k >= 0) {
              j = this.chatAdapter.messagesStartRow + k;
            }
          }
        }
      }
      int i1 = this.chatListView.getChildCount();
      MessageObject localMessageObject1;
      Object localObject2;
      Object localObject1;
      boolean bool1;
      boolean bool2;
      if (this.chatActivityEnterView != null)
      {
        localMessageObject1 = this.chatActivityEnterView.getEditingMessageObject();
        k = 0;
        if (k >= i1) {
          break label491;
        }
        localObject2 = this.chatListView.getChildAt(k);
        if (!(localObject2 instanceof ChatMessageCell)) {
          break label463;
        }
        localObject1 = (ChatMessageCell)localObject2;
        MessageObject localMessageObject2 = ((ChatMessageCell)localObject1).getMessageObject();
        i = 0;
        n = 0;
        m = 0;
        if (!this.actionBar.isActionModeShowed()) {
          break label417;
        }
        if (localMessageObject2.getDialogId() != this.dialog_id) {
          break label400;
        }
        i = 0;
        if ((localMessageObject2 != localMessageObject1) && (this.selectedMessagesIds[i].indexOfKey(localMessageObject2.getId()) < 0)) {
          break label405;
        }
        setCellSelectionBackground(localMessageObject2, (ChatMessageCell)localObject1, i);
        i = 1;
        n = 1;
        m = i;
        i = n;
        ((ChatMessageCell)localObject1).setMessageObject(((ChatMessageCell)localObject1).getMessageObject(), ((ChatMessageCell)localObject1).getCurrentMessagesGroup(), ((ChatMessageCell)localObject1).isPinnedBottom(), ((ChatMessageCell)localObject1).isPinnedTop());
        if (i != 0) {
          break label430;
        }
        bool1 = true;
        if ((i == 0) || (m == 0)) {
          break label436;
        }
        bool2 = true;
        ((ChatMessageCell)localObject1).setCheckPressed(bool1, bool2);
        if ((this.highlightMessageId == Integer.MAX_VALUE) || (localMessageObject2 == null) || (localMessageObject2.getId() != this.highlightMessageId)) {
          break label442;
        }
        bool1 = true;
        ((ChatMessageCell)localObject1).setHighlighted(bool1);
        if ((this.searchContainer == null) || (this.searchContainer.getVisibility() != 0)) {
          break label454;
        }
        localObject2 = DataQuery.getInstance(this.currentAccount);
        i = localMessageObject2.getId();
        if (localMessageObject2.getDialogId() != this.mergeDialogId) {
          break label448;
        }
        bool1 = true;
        if ((!((DataQuery)localObject2).isMessageFound(i, bool1)) || (DataQuery.getInstance(this.currentAccount).getLastSearchQuery() == null)) {
          break label454;
        }
        ((ChatMessageCell)localObject1).setHighlightedText(DataQuery.getInstance(this.currentAccount).getLastSearchQuery());
      }
      for (;;)
      {
        k += 1;
        break label95;
        localMessageObject1 = null;
        break;
        i = 1;
        break label166;
        ((View)localObject2).setBackgroundDrawable(null);
        i = m;
        break label201;
        ((View)localObject2).setBackgroundDrawable(null);
        m = n;
        break label210;
        bool1 = false;
        break label242;
        bool2 = false;
        break label254;
        bool1 = false;
        break label293;
        bool1 = false;
        break label348;
        ((ChatMessageCell)localObject1).setHighlightedText(null);
        continue;
        if ((localObject2 instanceof ChatActionCell))
        {
          localObject1 = (ChatActionCell)localObject2;
          ((ChatActionCell)localObject1).setMessageObject(((ChatActionCell)localObject1).getMessageObject());
        }
      }
      this.chatListView.invalidate();
    } while (j == -1);
    int i = this.chatListView.getMeasuredHeight();
    int k = this.chatListView.getPaddingBottom();
    int m = this.chatListView.getPaddingTop();
    int n = AndroidUtilities.dp(29.0F);
    this.chatLayoutManager.scrollToPositionWithOffset(j, i - k - m - n);
  }
  
  public boolean allowGroupPhotos()
  {
    return (this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 73);
  }
  
  public boolean checkRecordLocked()
  {
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isRecordLocked()))
    {
      AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
      if (this.chatActivityEnterView.isInVideoMode())
      {
        localBuilder.setTitle(LocaleController.getString("DiscardVideoMessageTitle", 2131493390));
        localBuilder.setMessage(LocaleController.getString("DiscardVideoMessageDescription", 2131493389));
      }
      for (;;)
      {
        localBuilder.setPositiveButton(LocaleController.getString("DiscardVoiceMessageAction", 2131493391), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            if (ChatActivity.this.chatActivityEnterView != null) {
              ChatActivity.this.chatActivityEnterView.cancelRecordingAudioVideo();
            }
          }
        });
        localBuilder.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
        showDialog(localBuilder.create());
        return true;
        localBuilder.setTitle(LocaleController.getString("DiscardVoiceMessageTitle", 2131493393));
        localBuilder.setMessage(LocaleController.getString("DiscardVoiceMessageDescription", 2131493392));
      }
    }
    return false;
  }
  
  public View createView(Context paramContext)
  {
    if (this.chatMessageCellsCache.isEmpty())
    {
      i = 0;
      while (i < 8)
      {
        this.chatMessageCellsCache.add(new ChatMessageCell(paramContext));
        i += 1;
      }
    }
    int i = 1;
    while (i >= 0)
    {
      this.selectedMessagesIds[i].clear();
      this.selectedMessagesCanCopyIds[i].clear();
      this.selectedMessagesCanStarIds[i].clear();
      i -= 1;
    }
    this.cantDeleteMessagesCount = 0;
    this.canEditMessagesCount = 0;
    this.roundVideoContainer = null;
    this.hasOwnBackground = true;
    if (this.chatAttachAlert != null) {}
    try
    {
      if (this.chatAttachAlert.isShowing()) {
        this.chatAttachAlert.dismiss();
      }
      this.chatAttachAlert.onDestroy();
      this.chatAttachAlert = null;
      Theme.createChatResources(paramContext, false);
      this.actionBar.setAddToContainer(false);
      this.actionBar.setBackButtonDrawable(new BackDrawable(false));
      this.actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick()
      {
        public void onItemClick(final int paramAnonymousInt)
        {
          if (paramAnonymousInt == -1) {
            if (ChatActivity.this.actionBar.isActionModeShowed())
            {
              paramAnonymousInt = 1;
              while (paramAnonymousInt >= 0)
              {
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                paramAnonymousInt -= 1;
              }
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              if (ChatActivity.this.chatActivityEnterView.isEditingMessage())
              {
                ChatActivity.this.chatActivityEnterView.setEditingMessageObject(null, false);
                ChatActivity.this.updateVisibleRows();
              }
            }
          }
          label511:
          label618:
          label779:
          label820:
          label944:
          do
          {
            Object localObject1;
            int i;
            int j;
            Object localObject3;
            final boolean bool;
            do
            {
              do
              {
                do
                {
                  do
                  {
                    return;
                    ChatActivity.this.actionBar.hideActionMode();
                    ChatActivity.this.updatePinnedMessageView(true);
                    break;
                    ChatActivity.this.finishFragment();
                    return;
                    if (paramAnonymousInt == 10)
                    {
                      localObject1 = "";
                      i = 0;
                      paramAnonymousInt = 1;
                      while (paramAnonymousInt >= 0)
                      {
                        ArrayList localArrayList = new ArrayList();
                        j = 0;
                        while (j < ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].size())
                        {
                          localArrayList.add(Integer.valueOf(ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].keyAt(j)));
                          j += 1;
                        }
                        if (ChatActivity.this.currentEncryptedChat == null) {
                          Collections.sort(localArrayList);
                        }
                        for (;;)
                        {
                          j = 0;
                          while (j < localArrayList.size())
                          {
                            localObject3 = (Integer)localArrayList.get(j);
                            MessageObject localMessageObject = (MessageObject)ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].get(((Integer)localObject3).intValue());
                            localObject3 = localObject1;
                            if (((String)localObject1).length() != 0) {
                              localObject3 = (String)localObject1 + "\n\n";
                            }
                            localObject1 = (String)localObject3 + ChatActivity.this.getMessageContent(localMessageObject, i, true);
                            i = localMessageObject.messageOwner.from_id;
                            j += 1;
                          }
                          Collections.sort(localArrayList, Collections.reverseOrder());
                        }
                        paramAnonymousInt -= 1;
                      }
                      if (((String)localObject1).length() != 0) {
                        AndroidUtilities.addToClipboard((CharSequence)localObject1);
                      }
                      paramAnonymousInt = 1;
                      while (paramAnonymousInt >= 0)
                      {
                        ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                        ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                        ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                        paramAnonymousInt -= 1;
                      }
                      ChatActivity.access$1502(ChatActivity.this, 0);
                      ChatActivity.access$1602(ChatActivity.this, 0);
                      ChatActivity.this.actionBar.hideActionMode();
                      ChatActivity.this.updatePinnedMessageView(true);
                      ChatActivity.this.updateVisibleRows();
                      return;
                    }
                    if (paramAnonymousInt != 12) {
                      break label511;
                    }
                  } while (ChatActivity.this.getParentActivity() == null);
                  ChatActivity.this.createDeleteMessagesAlert(null, null);
                  return;
                  if (paramAnonymousInt == 11)
                  {
                    localObject1 = new Bundle();
                    ((Bundle)localObject1).putBoolean("onlySelect", true);
                    ((Bundle)localObject1).putInt("dialogsType", 3);
                    localObject1 = new DialogsActivity((Bundle)localObject1);
                    ((DialogsActivity)localObject1).setDelegate(ChatActivity.this);
                    ChatActivity.this.presentFragment((BaseFragment)localObject1);
                    return;
                  }
                  if (paramAnonymousInt != 13) {
                    break label618;
                  }
                } while (ChatActivity.this.getParentActivity() == null);
                ChatActivity.this.showDialog(AlertsCreator.createTTLAlert(ChatActivity.this.getParentActivity(), ChatActivity.this.currentEncryptedChat).create());
                return;
                if ((paramAnonymousInt != 15) && (paramAnonymousInt != 16)) {
                  break label820;
                }
              } while (ChatActivity.this.getParentActivity() == null);
              if (((int)ChatActivity.this.dialog_id < 0) && ((int)(ChatActivity.this.dialog_id >> 32) != 1))
              {
                bool = true;
                localObject1 = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                ((AlertDialog.Builder)localObject1).setTitle(LocaleController.getString("AppName", 2131492981));
                if (paramAnonymousInt != 15) {
                  break label779;
                }
                ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureClearHistory", 2131493000));
              }
              for (;;)
              {
                ((AlertDialog.Builder)localObject1).setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
                {
                  public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                  {
                    if (paramAnonymousInt != 15)
                    {
                      if (bool) {
                        if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                          MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                        }
                      }
                      for (;;)
                      {
                        ChatActivity.this.finishFragment();
                        return;
                        MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat((int)-ChatActivity.this.dialog_id, MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Integer.valueOf(UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())), null);
                        continue;
                        MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                      }
                    }
                    if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (ChatActivity.this.info != null) && (ChatActivity.this.info.pinned_msg_id != 0))
                    {
                      MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.info.pinned_msg_id).commit();
                      ChatActivity.this.updatePinnedMessageView(true);
                    }
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 1);
                  }
                });
                ((AlertDialog.Builder)localObject1).setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
                ChatActivity.this.showDialog(((AlertDialog.Builder)localObject1).create());
                return;
                bool = false;
                break;
                if (bool) {
                  ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureDeleteAndExit", 2131493003));
                } else {
                  ((AlertDialog.Builder)localObject1).setMessage(LocaleController.getString("AreYouSureDeleteThisChat", 2131493007));
                }
              }
              if (paramAnonymousInt != 17) {
                break label944;
              }
            } while ((ChatActivity.this.currentUser == null) || (ChatActivity.this.getParentActivity() == null));
            if ((ChatActivity.this.currentUser.phone != null) && (ChatActivity.this.currentUser.phone.length() != 0))
            {
              localObject1 = new Bundle();
              ((Bundle)localObject1).putInt("user_id", ChatActivity.this.currentUser.id);
              ((Bundle)localObject1).putBoolean("addContact", true);
              ChatActivity.this.presentFragment(new ContactAddActivity((Bundle)localObject1));
              return;
            }
            ChatActivity.this.shareMyContact(ChatActivity.this.replyingMessageObject);
            return;
            if (paramAnonymousInt == 18)
            {
              ChatActivity.this.toggleMute(false);
              return;
            }
            if (paramAnonymousInt == 24) {
              try
              {
                DataQuery.getInstance(ChatActivity.this.currentAccount).installShortcut(ChatActivity.this.currentUser.id);
                return;
              }
              catch (Exception localException)
              {
                FileLog.e(localException);
                return;
              }
            }
            if (paramAnonymousInt == 21)
            {
              ChatActivity.this.showDialog(AlertsCreator.createReportAlert(ChatActivity.this.getParentActivity(), ChatActivity.this.dialog_id, 0, ChatActivity.this));
              return;
            }
            Object localObject2;
            if (paramAnonymousInt == 19)
            {
              localObject2 = null;
              paramAnonymousInt = 1;
              while (paramAnonymousInt >= 0)
              {
                localObject3 = localObject2;
                if (localObject2 == null)
                {
                  localObject3 = localObject2;
                  if (ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size() == 1)
                  {
                    localObject2 = new ArrayList();
                    i = 0;
                    while (i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size())
                    {
                      ((ArrayList)localObject2).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                      i += 1;
                    }
                    localObject3 = (MessageObject)ChatActivity.this.messagesDict[paramAnonymousInt].get(((Integer)((ArrayList)localObject2).get(0)).intValue());
                  }
                }
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                paramAnonymousInt -= 1;
                localObject2 = localObject3;
              }
              if ((localObject2 != null) && ((((MessageObject)localObject2).messageOwner.id > 0) || ((((MessageObject)localObject2).messageOwner.id < 0) && (ChatActivity.this.currentEncryptedChat != null)))) {
                ChatActivity.this.showReplyPanel(true, (MessageObject)localObject2, null, null, false);
              }
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              ChatActivity.this.actionBar.hideActionMode();
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateVisibleRows();
              return;
            }
            if (paramAnonymousInt == 22)
            {
              paramAnonymousInt = 0;
              while (paramAnonymousInt < 2)
              {
                i = 0;
                if (i < ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].size())
                {
                  localObject3 = (MessageObject)ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].valueAt(i);
                  localObject2 = DataQuery.getInstance(ChatActivity.this.currentAccount);
                  localObject3 = ((MessageObject)localObject3).getDocument();
                  j = (int)(System.currentTimeMillis() / 1000L);
                  if (!ChatActivity.this.hasUnfavedSelected) {}
                  for (bool = true;; bool = false)
                  {
                    ((DataQuery)localObject2).addRecentSticker(2, (TLRPC.Document)localObject3, j, bool);
                    i += 1;
                    break;
                  }
                }
                paramAnonymousInt += 1;
              }
              paramAnonymousInt = 1;
              while (paramAnonymousInt >= 0)
              {
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                paramAnonymousInt -= 1;
              }
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              ChatActivity.this.actionBar.hideActionMode();
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateVisibleRows();
              return;
            }
            if (paramAnonymousInt == 23)
            {
              localObject2 = null;
              paramAnonymousInt = 1;
              while (paramAnonymousInt >= 0)
              {
                localObject3 = localObject2;
                if (localObject2 == null)
                {
                  localObject3 = localObject2;
                  if (ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size() == 1)
                  {
                    localObject2 = new ArrayList();
                    i = 0;
                    while (i < ChatActivity.this.selectedMessagesIds[paramAnonymousInt].size())
                    {
                      ((ArrayList)localObject2).add(Integer.valueOf(ChatActivity.this.selectedMessagesIds[paramAnonymousInt].keyAt(i)));
                      i += 1;
                    }
                    localObject3 = (MessageObject)ChatActivity.this.messagesDict[paramAnonymousInt].get(((Integer)((ArrayList)localObject2).get(0)).intValue());
                  }
                }
                ChatActivity.this.selectedMessagesIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanCopyIds[paramAnonymousInt].clear();
                ChatActivity.this.selectedMessagesCanStarIds[paramAnonymousInt].clear();
                paramAnonymousInt -= 1;
                localObject2 = localObject3;
              }
              ChatActivity.access$3902(ChatActivity.this, false);
              ChatActivity.this.startEditingMessageObject((MessageObject)localObject2);
              ChatActivity.access$1502(ChatActivity.this, 0);
              ChatActivity.access$1602(ChatActivity.this, 0);
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateVisibleRows();
              return;
            }
            if (paramAnonymousInt == 14)
            {
              ChatActivity.this.openAttachMenu();
              return;
            }
            if (paramAnonymousInt == 30)
            {
              SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/help", ChatActivity.this.dialog_id, null, null, false, null, null, null);
              return;
            }
            if (paramAnonymousInt == 31)
            {
              SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/settings", ChatActivity.this.dialog_id, null, null, false, null, null, null);
              return;
            }
            if (paramAnonymousInt == 40)
            {
              ChatActivity.this.openSearchWithText(null);
              return;
            }
          } while ((paramAnonymousInt != 32) || (ChatActivity.this.currentUser == null) || (ChatActivity.this.getParentActivity() == null));
          VoIPHelper.startCall(ChatActivity.this.currentUser, ChatActivity.this.getParentActivity(), MessagesController.getInstance(ChatActivity.this.currentAccount).getUserFull(ChatActivity.this.currentUser.id));
        }
      });
      boolean bool1;
      Object localObject1;
      label500:
      label752:
      label783:
      label1351:
      label1393:
      label1432:
      label1471:
      label1495:
      label1687:
      label2986:
      label3919:
      label3955:
      label3979:
      label5013:
      boolean bool2;
      if (this.currentEncryptedChat != null)
      {
        bool1 = true;
        this.avatarContainer = new ChatAvatarContainer(paramContext, this, bool1);
        this.actionBar.addView(this.avatarContainer, 0, LayoutHelper.createFrame(-2, -1.0F, 51, 56.0F, 0.0F, 40.0F, 0.0F));
        if ((this.currentChat != null) && (!ChatObject.isChannel(this.currentChat)))
        {
          i = this.currentChat.participants_count;
          if (this.info != null) {
            i = this.info.participants.participants.size();
          }
          if ((i == 0) || (this.currentChat.deactivated) || (this.currentChat.left) || ((this.currentChat instanceof TLRPC.TL_chatForbidden)) || ((this.info != null) && ((this.info.participants instanceof TLRPC.TL_chatParticipantsForbidden)))) {
            this.avatarContainer.setEnabled(false);
          }
        }
        localObject1 = this.actionBar.createMenu();
        if ((this.currentEncryptedChat == null) && (!this.isBroadcast))
        {
          this.searchItem = ((ActionBarMenu)localObject1).addItem(0, 2131165356).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener()
          {
            boolean searchWas;
            
            public void onCaptionCleared()
            {
              if (ChatActivity.this.searchingUserMessages != null)
              {
                ChatActivity.this.searchUserButton.callOnClick();
                return;
              }
              if (ChatActivity.this.searchingForUser)
              {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                ChatActivity.access$4802(ChatActivity.this, false);
              }
              ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("Search", 2131494298));
              ChatActivity.this.searchCalendarButton.setVisibility(0);
              ChatActivity.this.searchUserButton.setVisibility(0);
              ChatActivity.access$5102(ChatActivity.this, null);
            }
            
            public void onSearchCollapse()
            {
              ChatActivity.this.searchCalendarButton.setVisibility(0);
              if (ChatActivity.this.searchUserButton != null) {
                ChatActivity.this.searchUserButton.setVisibility(0);
              }
              if (ChatActivity.this.searchingForUser)
              {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                ChatActivity.access$4802(ChatActivity.this, false);
              }
              ChatActivity.this.mentionLayoutManager.setReverseLayout(false);
              ChatActivity.this.mentionsAdapter.setSearchingMentions(false);
              ChatActivity.access$5102(ChatActivity.this, null);
              ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("Search", 2131494298));
              ChatActivity.this.searchItem.setSearchFieldCaption(null);
              ChatActivity.this.avatarContainer.setVisibility(0);
              if (ChatActivity.this.chatActivityEnterView.hasText())
              {
                if (ChatActivity.this.headerItem != null) {
                  ChatActivity.this.headerItem.setVisibility(8);
                }
                if (ChatActivity.this.attachItem != null) {
                  ChatActivity.this.attachItem.setVisibility(0);
                }
              }
              for (;;)
              {
                ChatActivity.this.searchItem.setVisibility(8);
                ChatActivity.access$5602(ChatActivity.this, Integer.MAX_VALUE);
                ChatActivity.this.updateVisibleRows();
                if (this.searchWas) {
                  ChatActivity.this.scrollToLastMessage(false);
                }
                ChatActivity.this.updateBottomOverlay();
                ChatActivity.this.updatePinnedMessageView(true);
                return;
                if (ChatActivity.this.headerItem != null) {
                  ChatActivity.this.headerItem.setVisibility(0);
                }
                if (ChatActivity.this.attachItem != null) {
                  ChatActivity.this.attachItem.setVisibility(8);
                }
              }
            }
            
            public void onSearchExpand()
            {
              if (!ChatActivity.this.openSearchKeyboard) {
                return;
              }
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  ChatActivity.10.this.searchWas = false;
                  ChatActivity.this.searchItem.getSearchField().requestFocus();
                  AndroidUtilities.showKeyboard(ChatActivity.this.searchItem.getSearchField());
                }
              }, 300L);
            }
            
            public void onSearchPressed(EditText paramAnonymousEditText)
            {
              this.searchWas = true;
              ChatActivity.this.updateSearchButtons(0, 0, -1);
              DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(paramAnonymousEditText.getText().toString(), ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 0, ChatActivity.this.searchingUserMessages);
            }
            
            public void onTextChanged(EditText paramAnonymousEditText)
            {
              if (ChatActivity.this.searchingForUser) {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag("@" + paramAnonymousEditText.getText().toString(), 0, ChatActivity.this.messages, true);
              }
              while ((ChatActivity.this.searchingForUser) || (ChatActivity.this.searchingUserMessages != null) || (ChatActivity.this.searchUserButton == null) || (!TextUtils.equals(paramAnonymousEditText.getText(), LocaleController.getString("SearchFrom", 2131494300)))) {
                return;
              }
              ChatActivity.this.searchUserButton.callOnClick();
            }
          });
          this.searchItem.getSearchField().setHint(LocaleController.getString("Search", 2131494298));
          this.searchItem.setVisibility(8);
        }
        this.headerItem = ((ActionBarMenu)localObject1).addItem(0, 2131165353);
        if (this.currentUser != null)
        {
          this.headerItem.addSubItem(32, LocaleController.getString("Call", 2131493105));
          localObject2 = MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id);
          if ((localObject2 == null) || (!((TLRPC.TL_userFull)localObject2).phone_calls_available)) {
            break label6820;
          }
          this.headerItem.showSubItem(32);
        }
        if (this.searchItem != null) {
          this.headerItem.addSubItem(40, LocaleController.getString("Search", 2131494298));
        }
        if ((ChatObject.isChannel(this.currentChat)) && (!this.currentChat.creator) && ((!this.currentChat.megagroup) || ((this.currentChat.username != null) && (this.currentChat.username.length() > 0)))) {
          this.headerItem.addSubItem(21, LocaleController.getString("ReportChat", 2131494238));
        }
        if (this.currentUser != null) {
          this.addContactItem = this.headerItem.addSubItem(17, "");
        }
        if (this.currentEncryptedChat != null) {
          this.timeItem2 = this.headerItem.addSubItem(13, LocaleController.getString("SetTimer", 2131494378));
        }
        if ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup) && (TextUtils.isEmpty(this.currentChat.username)))) {
          this.headerItem.addSubItem(15, LocaleController.getString("ClearHistory", 2131493258));
        }
        if (!ChatObject.isChannel(this.currentChat))
        {
          if ((this.currentChat == null) || (this.isBroadcast)) {
            break label6832;
          }
          this.headerItem.addSubItem(16, LocaleController.getString("DeleteAndExit", 2131493361));
        }
        if ((this.currentUser != null) && (this.currentUser.self)) {
          break label6854;
        }
        this.muteItem = this.headerItem.addSubItem(18, null);
        if ((this.currentUser != null) && (this.currentEncryptedChat == null) && (this.currentUser.bot))
        {
          this.headerItem.addSubItem(31, LocaleController.getString("BotSettings", 2131493093));
          this.headerItem.addSubItem(30, LocaleController.getString("BotHelp", 2131493088));
          updateBotButtons();
        }
        updateTitle();
        this.avatarContainer.updateOnlineCount();
        this.avatarContainer.updateSubtitle();
        updateTitleIcons();
        this.attachItem = ((ActionBarMenu)localObject1).addItem(14, 2131165353).setOverrideMenuClick(true).setAllowCloseAnimation(false);
        this.attachItem.setVisibility(8);
        this.actionModeViews.clear();
        localObject1 = this.actionBar.createActionMode();
        this.selectedMessagesCountTextView = new NumberTextView(((ActionBarMenu)localObject1).getContext());
        this.selectedMessagesCountTextView.setTextSize(18);
        this.selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.selectedMessagesCountTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        ((ActionBarMenu)localObject1).addView(this.selectedMessagesCountTextView, LayoutHelper.createLinear(0, -1, 1.0F, 65, 0, 0, 0));
        this.selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.actionModeTitleContainer = new FrameLayout(paramContext)
        {
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            paramAnonymousInt2 = paramAnonymousInt4 - paramAnonymousInt2;
            float f;
            if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
            {
              paramAnonymousInt1 = (paramAnonymousInt2 / 2 - ChatActivity.this.actionModeTextView.getTextHeight()) / 2;
              if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2))
              {
                f = 2.0F;
                paramAnonymousInt1 += AndroidUtilities.dp(f);
              }
            }
            for (;;)
            {
              ChatActivity.this.actionModeTextView.layout(0, paramAnonymousInt1, ChatActivity.this.actionModeTextView.getMeasuredWidth(), ChatActivity.this.actionModeTextView.getTextHeight() + paramAnonymousInt1);
              if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
              {
                paramAnonymousInt1 = paramAnonymousInt2 / 2;
                paramAnonymousInt2 = (paramAnonymousInt2 / 2 - ChatActivity.this.actionModeSubTextView.getTextHeight()) / 2;
                if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2)) {}
                paramAnonymousInt1 = paramAnonymousInt1 + paramAnonymousInt2 - AndroidUtilities.dp(1.0F);
                ChatActivity.this.actionModeSubTextView.layout(0, paramAnonymousInt1, ChatActivity.this.actionModeSubTextView.getMeasuredWidth(), ChatActivity.this.actionModeSubTextView.getTextHeight() + paramAnonymousInt1);
              }
              return;
              f = 3.0F;
              break;
              paramAnonymousInt1 = (paramAnonymousInt2 - ChatActivity.this.actionModeTextView.getTextHeight()) / 2;
            }
          }
          
          protected void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2)
          {
            int i = View.MeasureSpec.getSize(paramAnonymousInt1);
            setMeasuredDimension(i, View.MeasureSpec.getSize(paramAnonymousInt2));
            SimpleTextView localSimpleTextView = ChatActivity.this.actionModeTextView;
            if ((!AndroidUtilities.isTablet()) && (getResources().getConfiguration().orientation == 2))
            {
              paramAnonymousInt1 = 18;
              localSimpleTextView.setTextSize(paramAnonymousInt1);
              ChatActivity.this.actionModeTextView.measure(View.MeasureSpec.makeMeasureSpec(i, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24.0F), Integer.MIN_VALUE));
              if (ChatActivity.this.actionModeSubTextView.getVisibility() != 8)
              {
                localSimpleTextView = ChatActivity.this.actionModeSubTextView;
                if ((AndroidUtilities.isTablet()) || (getResources().getConfiguration().orientation != 2)) {
                  break label164;
                }
              }
            }
            label164:
            for (paramAnonymousInt1 = 14;; paramAnonymousInt1 = 16)
            {
              localSimpleTextView.setTextSize(paramAnonymousInt1);
              ChatActivity.this.actionModeSubTextView.measure(View.MeasureSpec.makeMeasureSpec(i, Integer.MIN_VALUE), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(20.0F), Integer.MIN_VALUE));
              return;
              paramAnonymousInt1 = 20;
              break;
            }
          }
        };
        ((ActionBarMenu)localObject1).addView(this.actionModeTitleContainer, LayoutHelper.createLinear(0, -1, 1.0F, 65, 0, 0, 0));
        this.actionModeTitleContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.actionModeTitleContainer.setVisibility(8);
        this.actionModeTextView = new SimpleTextView(paramContext);
        this.actionModeTextView.setTextSize(18);
        this.actionModeTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.actionModeTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        this.actionModeTextView.setText(LocaleController.getString("Edit", 2131493397));
        this.actionModeTitleContainer.addView(this.actionModeTextView, LayoutHelper.createFrame(-1, -1.0F));
        this.actionModeSubTextView = new SimpleTextView(paramContext);
        this.actionModeSubTextView.setGravity(3);
        this.actionModeSubTextView.setTextColor(Theme.getColor("actionBarActionModeDefaultIcon"));
        this.actionModeTitleContainer.addView(this.actionModeSubTextView, LayoutHelper.createFrame(-1, -1.0F));
        if (this.currentEncryptedChat != null) {
          break label6886;
        }
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(23, 2131165339, AndroidUtilities.dp(54.0F)));
        if (!this.isBroadcast) {
          this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(19, 2131165354, AndroidUtilities.dp(54.0F)));
        }
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(22, 2131165350, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(10, 2131165347, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(11, 2131165351, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(12, 2131165348, AndroidUtilities.dp(54.0F)));
        final Object localObject2 = ((ActionBarMenu)localObject1).getItem(23);
        if ((this.canEditMessagesCount != 1) || (this.selectedMessagesIds[0].size() + this.selectedMessagesIds[1].size() != 1)) {
          break label7009;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject2 = ((ActionBarMenu)localObject1).getItem(10);
        if (this.selectedMessagesCanCopyIds[0].size() + this.selectedMessagesCanCopyIds[1].size() == 0) {
          break label7015;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject2 = ((ActionBarMenu)localObject1).getItem(22);
        if (this.selectedMessagesCanStarIds[0].size() + this.selectedMessagesCanStarIds[1].size() == 0) {
          break label7021;
        }
        i = 0;
        ((ActionBarMenuItem)localObject2).setVisibility(i);
        localObject1 = ((ActionBarMenu)localObject1).getItem(12);
        if (this.cantDeleteMessagesCount != 0) {
          break label7027;
        }
        i = 0;
        ((ActionBarMenuItem)localObject1).setVisibility(i);
        checkActionBarMenu();
        this.fragmentView = new SizeNotifierFrameLayout(paramContext)
        {
          int inputFieldHeight = 0;
          
          protected boolean drawChild(Canvas paramAnonymousCanvas, View paramAnonymousView, long paramAnonymousLong)
          {
            MessageObject localMessageObject = MediaController.getInstance().getPlayingMessageObject();
            boolean bool1;
            if ((localMessageObject != null) && (localMessageObject.eventId == 0L) && (localMessageObject.isRoundVideo()))
            {
              i = 1;
              if ((i == 0) || (paramAnonymousView != ChatActivity.this.roundVideoContainer)) {
                break label238;
              }
              if (localMessageObject.type != 5) {
                break label232;
              }
              if ((Theme.chat_roundVideoShadow != null) && (ChatActivity.this.aspectRatioFrameLayout.isDrawingReady()))
              {
                i = (int)paramAnonymousView.getX() - AndroidUtilities.dp(3.0F);
                int j = (int)paramAnonymousView.getY() - AndroidUtilities.dp(2.0F);
                Theme.chat_roundVideoShadow.setAlpha(255);
                Theme.chat_roundVideoShadow.setBounds(i, j, AndroidUtilities.roundMessageSize + i + AndroidUtilities.dp(6.0F), AndroidUtilities.roundMessageSize + j + AndroidUtilities.dp(6.0F));
                Theme.chat_roundVideoShadow.draw(paramAnonymousCanvas);
              }
              bool1 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              label162:
              if ((paramAnonymousView == ChatActivity.this.actionBar) && (ChatActivity.this.parentLayout != null))
              {
                paramAnonymousView = ChatActivity.this.parentLayout;
                if (ChatActivity.this.actionBar.getVisibility() != 0) {
                  break label389;
                }
              }
            }
            label232:
            label238:
            label389:
            for (int i = ChatActivity.this.actionBar.getMeasuredHeight();; i = 0)
            {
              paramAnonymousView.drawHeaderShadow(paramAnonymousCanvas, i);
              return bool1;
              i = 0;
              break;
              bool1 = false;
              break label162;
              boolean bool2 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              bool1 = bool2;
              if (i == 0) {
                break label162;
              }
              bool1 = bool2;
              if (paramAnonymousView != ChatActivity.this.chatListView) {
                break label162;
              }
              bool1 = bool2;
              if (localMessageObject.type == 5) {
                break label162;
              }
              bool1 = bool2;
              if (ChatActivity.this.roundVideoContainer == null) {
                break label162;
              }
              super.drawChild(paramAnonymousCanvas, ChatActivity.this.roundVideoContainer, paramAnonymousLong);
              bool1 = bool2;
              if (ChatActivity.this.drawLaterRoundProgressCell == null) {
                break label162;
              }
              paramAnonymousCanvas.save();
              paramAnonymousCanvas.translate(ChatActivity.this.drawLaterRoundProgressCell.getX(), ChatActivity.this.drawLaterRoundProgressCell.getTop() + ChatActivity.this.chatListView.getTop());
              ChatActivity.this.drawLaterRoundProgressCell.drawRoundProgress(paramAnonymousCanvas);
              paramAnonymousCanvas.restore();
              bool1 = bool2;
              break label162;
            }
          }
          
          protected boolean isActionBarVisible()
          {
            return ChatActivity.this.actionBar.getVisibility() == 0;
          }
          
          protected void onAttachedToWindow()
          {
            super.onAttachedToWindow();
            MessageObject localMessageObject = MediaController.getInstance().getPlayingMessageObject();
            if ((localMessageObject != null) && (localMessageObject.isRoundVideo()) && (localMessageObject.eventId == 0L) && (localMessageObject.getDialogId() == ChatActivity.this.dialog_id)) {
              MediaController.getInstance().setTextureView(ChatActivity.this.createTextureView(false), ChatActivity.this.aspectRatioFrameLayout, ChatActivity.this.roundVideoContainer, true);
            }
          }
          
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            int i1 = getChildCount();
            if ((getKeyboardHeight() <= AndroidUtilities.dp(20.0F)) && (!AndroidUtilities.isInMultiwindow)) {}
            View localView;
            for (int m = ChatActivity.this.chatActivityEnterView.getEmojiPadding();; m = 0)
            {
              setBottomClip(m);
              int n = 0;
              for (;;)
              {
                if (n >= i1) {
                  break label804;
                }
                localView = getChildAt(n);
                if (localView.getVisibility() != 8) {
                  break;
                }
                n += 1;
              }
            }
            FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)localView.getLayoutParams();
            int i2 = localView.getMeasuredWidth();
            int i3 = localView.getMeasuredHeight();
            int j = localLayoutParams.gravity;
            int i = j;
            if (j == -1) {
              i = 51;
            }
            int k;
            switch (i & 0x7 & 0x7)
            {
            default: 
              k = localLayoutParams.leftMargin;
              label171:
              switch (i & 0x70)
              {
              default: 
                j = localLayoutParams.topMargin;
                label219:
                if (localView == ChatActivity.this.mentionContainer) {
                  i = j - (ChatActivity.this.chatActivityEnterView.getMeasuredHeight() - AndroidUtilities.dp(2.0F));
                }
                break;
              }
              break;
            }
            for (;;)
            {
              localView.layout(k, i, k + i2, i + i3);
              break;
              k = (paramAnonymousInt3 - paramAnonymousInt1 - i2) / 2 + localLayoutParams.leftMargin - localLayoutParams.rightMargin;
              break label171;
              k = paramAnonymousInt3 - i2 - localLayoutParams.rightMargin;
              break label171;
              i = localLayoutParams.topMargin + getPaddingTop();
              j = i;
              if (localView == ChatActivity.this.actionBar) {
                break label219;
              }
              j = i;
              if (ChatActivity.this.actionBar.getVisibility() != 0) {
                break label219;
              }
              j = i + ChatActivity.this.actionBar.getMeasuredHeight();
              break label219;
              j = (paramAnonymousInt4 - m - paramAnonymousInt2 - i3) / 2 + localLayoutParams.topMargin - localLayoutParams.bottomMargin;
              break label219;
              j = paramAnonymousInt4 - m - paramAnonymousInt2 - i3 - localLayoutParams.bottomMargin;
              break label219;
              if (localView == ChatActivity.this.pagedownButton)
              {
                i = j - ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
              }
              else if (localView == ChatActivity.this.mentiondownButton)
              {
                i = j - ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
              }
              else
              {
                if (localView == ChatActivity.this.emptyViewContainer)
                {
                  int i4 = this.inputFieldHeight / 2;
                  if (ChatActivity.this.actionBar.getVisibility() == 0) {}
                  for (i = ChatActivity.this.actionBar.getMeasuredHeight() / 2;; i = 0)
                  {
                    i = j - (i4 - i);
                    break;
                  }
                }
                if (ChatActivity.this.chatActivityEnterView.isPopupView(localView))
                {
                  if (AndroidUtilities.isInMultiwindow) {
                    i = ChatActivity.this.chatActivityEnterView.getTop() - localView.getMeasuredHeight() + AndroidUtilities.dp(1.0F);
                  } else {
                    i = ChatActivity.this.chatActivityEnterView.getBottom();
                  }
                }
                else if ((localView == ChatActivity.this.gifHintTextView) || (localView == ChatActivity.this.voiceHintTextView) || (localView == ChatActivity.this.mediaBanTooltip))
                {
                  i = j - this.inputFieldHeight;
                }
                else if ((localView == ChatActivity.this.chatListView) || (localView == ChatActivity.this.progressView))
                {
                  i = j;
                  if (ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {
                    i = j - AndroidUtilities.dp(48.0F);
                  }
                }
                else if (localView == ChatActivity.this.actionBar)
                {
                  i = j - getPaddingTop();
                }
                else if (localView == ChatActivity.this.roundVideoContainer)
                {
                  i = ChatActivity.this.actionBar.getMeasuredHeight();
                }
                else if (localView != ChatActivity.this.instantCameraView)
                {
                  i = j;
                  if (localView != ChatActivity.this.overlayView) {}
                }
                else
                {
                  i = 0;
                }
              }
            }
            label804:
            ChatActivity.this.updateMessagesVisisblePart();
            notifyHeightChanged();
          }
          
          protected void onMeasure(int paramAnonymousInt1, int paramAnonymousInt2)
          {
            int i2 = View.MeasureSpec.getSize(paramAnonymousInt1);
            int m = View.MeasureSpec.getSize(paramAnonymousInt2);
            setMeasuredDimension(i2, m);
            int j = m - getPaddingTop();
            measureChildWithMargins(ChatActivity.this.actionBar, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
            int i3 = ChatActivity.this.actionBar.getMeasuredHeight();
            int i = j;
            if (ChatActivity.this.actionBar.getVisibility() == 0) {
              i = j - i3;
            }
            int k = m;
            j = i;
            if (getKeyboardHeight() <= AndroidUtilities.dp(20.0F))
            {
              k = m;
              j = i;
              if (!AndroidUtilities.isInMultiwindow)
              {
                j = i - ChatActivity.this.chatActivityEnterView.getEmojiPadding();
                k = m - ChatActivity.this.chatActivityEnterView.getEmojiPadding();
              }
            }
            int i4 = getChildCount();
            measureChildWithMargins(ChatActivity.this.chatActivityEnterView, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
            this.inputFieldHeight = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
            i = 0;
            if (i < i4)
            {
              View localView = getChildAt(i);
              if ((localView == null) || (localView.getVisibility() == 8) || (localView == ChatActivity.this.chatActivityEnterView) || (localView == ChatActivity.this.actionBar)) {}
              for (;;)
              {
                i += 1;
                break;
                int n;
                int i1;
                if ((localView == ChatActivity.this.chatListView) || (localView == ChatActivity.this.progressView))
                {
                  n = View.MeasureSpec.makeMeasureSpec(i2, 1073741824);
                  i1 = AndroidUtilities.dp(10.0F);
                  int i5 = this.inputFieldHeight;
                  if (ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {}
                  for (m = 48;; m = 0)
                  {
                    localView.measure(n, View.MeasureSpec.makeMeasureSpec(Math.max(i1, AndroidUtilities.dp(m + 2) + (j - i5)), 1073741824));
                    break;
                  }
                }
                if ((localView == ChatActivity.this.instantCameraView) || (localView == ChatActivity.this.overlayView))
                {
                  localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(k - this.inputFieldHeight + AndroidUtilities.dp(3.0F), 1073741824));
                }
                else if (localView == ChatActivity.this.emptyViewContainer)
                {
                  localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(j, 1073741824));
                }
                else if (ChatActivity.this.chatActivityEnterView.isPopupView(localView))
                {
                  if (AndroidUtilities.isInMultiwindow)
                  {
                    if (AndroidUtilities.isTablet()) {
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(320.0F), j - this.inputFieldHeight + i3 - AndroidUtilities.statusBarHeight + getPaddingTop()), 1073741824));
                    } else {
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(j - this.inputFieldHeight + i3 - AndroidUtilities.statusBarHeight + getPaddingTop(), 1073741824));
                    }
                  }
                  else
                  {
                    m = localView.getLayoutParams().height;
                    localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(localView.getLayoutParams().height, 1073741824));
                  }
                }
                else if (localView == ChatActivity.this.mentionContainer)
                {
                  FrameLayout.LayoutParams localLayoutParams = (FrameLayout.LayoutParams)ChatActivity.this.mentionContainer.getLayoutParams();
                  if (ChatActivity.this.mentionsAdapter.isBannedInline())
                  {
                    localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(j, Integer.MIN_VALUE));
                  }
                  else
                  {
                    ChatActivity.access$8502(ChatActivity.this, true);
                    if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
                    {
                      n = ChatActivity.this.mentionGridLayoutManager.getRowsCount(i2) * 102;
                      m = n;
                      if (ChatActivity.this.mentionsAdapter.isBotContext())
                      {
                        m = n;
                        if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                          m = n + 34;
                        }
                      }
                      i1 = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                      if (m != 0)
                      {
                        n = AndroidUtilities.dp(2.0F);
                        label774:
                        n = j - i1 + n;
                        m = Math.max(0, n - AndroidUtilities.dp(Math.min(m, 122.399994F)));
                        if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                          break label892;
                        }
                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, m);
                        m = n;
                      }
                    }
                    for (;;)
                    {
                      localLayoutParams.height = m;
                      localLayoutParams.topMargin = 0;
                      ChatActivity.access$8502(ChatActivity.this, false);
                      localView.measure(View.MeasureSpec.makeMeasureSpec(i2, 1073741824), View.MeasureSpec.makeMeasureSpec(localLayoutParams.height, 1073741824));
                      break;
                      n = 0;
                      break label774;
                      label892:
                      ChatActivity.this.mentionListView.setPadding(0, m, 0, 0);
                      m = n;
                      continue;
                      i1 = ChatActivity.this.mentionsAdapter.getItemCount();
                      n = 0;
                      if (ChatActivity.this.mentionsAdapter.isBotContext())
                      {
                        m = i1;
                        if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null)
                        {
                          n = 0 + 36;
                          m = i1 - 1;
                        }
                        m = n + m * 68;
                        label981:
                        i1 = ChatActivity.this.chatActivityEnterView.getMeasuredHeight();
                        if (m == 0) {
                          break label1082;
                        }
                      }
                      label1082:
                      for (n = AndroidUtilities.dp(2.0F);; n = 0)
                      {
                        n = j - i1 + n;
                        m = Math.max(0, n - AndroidUtilities.dp(Math.min(m, 122.399994F)));
                        if (!ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                          break label1088;
                        }
                        ChatActivity.this.mentionListView.setPadding(0, 0, 0, m);
                        m = n;
                        break;
                        m = 0 + i1 * 36;
                        break label981;
                      }
                      label1088:
                      ChatActivity.this.mentionListView.setPadding(0, m, 0, 0);
                      m = n;
                    }
                  }
                }
                else
                {
                  measureChildWithMargins(localView, paramAnonymousInt1, 0, paramAnonymousInt2, 0);
                }
              }
            }
            if (ChatActivity.this.fixPaddingsInLayout)
            {
              ChatActivity.access$8802(ChatActivity.this, true);
              ChatActivity.this.checkListViewPaddingsInternal();
              ChatActivity.access$8702(ChatActivity.this, false);
              ChatActivity.access$8802(ChatActivity.this, false);
            }
            if (ChatActivity.this.scrollToPositionOnRecreate != -1)
            {
              AndroidUtilities.runOnUIThread(new Runnable()
              {
                public void run()
                {
                  ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(this.val$scrollTo, ChatActivity.this.scrollToOffsetOnRecreate);
                }
              });
              ChatActivity.access$8802(ChatActivity.this, true);
              ChatActivity.access$9002(ChatActivity.this, -1);
              ChatActivity.access$8802(ChatActivity.this, false);
            }
          }
          
          public void requestLayout()
          {
            if (ChatActivity.this.globalIgnoreLayout) {
              return;
            }
            super.requestLayout();
          }
        };
        this.contentView = ((SizeNotifierFrameLayout)this.fragmentView);
        this.contentView.setBackgroundImage(Theme.getCachedWallpaper());
        this.emptyViewContainer = new FrameLayout(paramContext);
        this.emptyViewContainer.setVisibility(4);
        this.contentView.addView(this.emptyViewContainer, LayoutHelper.createFrame(-1, -2, 17));
        this.emptyViewContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        if (this.currentEncryptedChat != null) {
          break label7264;
        }
        if ((this.currentUser == null) || (!this.currentUser.self)) {
          break label7033;
        }
        this.bigEmptyView = new ChatBigEmptyView(paramContext, false);
        this.emptyViewContainer.addView(this.bigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
        if (this.chatActivityEnterView == null) {
          break label7393;
        }
        this.chatActivityEnterView.onDestroy();
        if (this.chatActivityEnterView.isEditingMessage()) {
          break label7387;
        }
        localObject1 = this.chatActivityEnterView.getFieldText();
        if (this.mentionsAdapter != null) {
          this.mentionsAdapter.onDestroy();
        }
        this.chatListView = new RecyclerListView(paramContext)
        {
          ArrayList<ChatMessageCell> drawCaptionAfter = new ArrayList();
          ArrayList<ChatMessageCell> drawNamesAfter = new ArrayList();
          ArrayList<ChatMessageCell> drawTimeAfter = new ArrayList();
          private float endedTrackingX;
          private long lastReplyButtonAnimationTime;
          private long lastTrackingAnimationTime;
          private boolean maybeStartTracking;
          private float replyButtonProgress;
          private boolean slideAnimationInProgress;
          private ChatMessageCell slidingView;
          private boolean startedTracking;
          private int startedTrackingPointerId;
          private int startedTrackingX;
          private int startedTrackingY;
          private float trackAnimationProgress;
          private boolean wasTrackingVibrate;
          
          private void drawReplyButton(Canvas paramAnonymousCanvas)
          {
            if (this.slidingView == null) {
              return;
            }
            float f1 = this.slidingView.getTranslationX();
            long l1 = System.currentTimeMillis();
            long l2 = Math.min(17L, l1 - this.lastReplyButtonAnimationTime);
            this.lastReplyButtonAnimationTime = l1;
            if (f1 <= -AndroidUtilities.dp(50.0F))
            {
              i = 1;
              if (i == 0) {
                break label355;
              }
              if (this.replyButtonProgress < 1.0F)
              {
                this.replyButtonProgress += (float)l2 / 180.0F;
                if (this.replyButtonProgress <= 1.0F) {
                  break label348;
                }
                this.replyButtonProgress = 1.0F;
              }
              label100:
              if (i == 0) {
                break label423;
              }
              if (this.replyButtonProgress > 0.8F) {
                break label403;
              }
              f1 = 1.2F * (this.replyButtonProgress / 0.8F);
            }
            label126:
            for (int i = (int)Math.min(255.0F, 255.0F * (this.replyButtonProgress / 0.8F));; i = (int)Math.min(255.0F, 255.0F * this.replyButtonProgress))
            {
              Theme.chat_shareDrawable.setAlpha(i);
              Theme.chat_replyIconDrawable.setAlpha(i);
              float f2 = getMeasuredWidth() + this.slidingView.getTranslationX() / 2.0F;
              float f3 = this.slidingView.getTop() + this.slidingView.getMeasuredHeight() / 2;
              Theme.chat_shareDrawable.setColorFilter(Theme.colorFilter);
              Theme.chat_shareDrawable.setBounds((int)(f2 - AndroidUtilities.dp(16.0F) * f1), (int)(f3 - AndroidUtilities.dp(16.0F) * f1), (int)(AndroidUtilities.dp(16.0F) * f1 + f2), (int)(AndroidUtilities.dp(16.0F) * f1 + f3));
              Theme.chat_shareDrawable.draw(paramAnonymousCanvas);
              Theme.chat_replyIconDrawable.setBounds((int)(f2 - AndroidUtilities.dp(10.0F) * f1), (int)(f3 - AndroidUtilities.dp(8.0F) * f1), (int)(AndroidUtilities.dp(10.0F) * f1 + f2), (int)(AndroidUtilities.dp(6.0F) * f1 + f3));
              Theme.chat_replyIconDrawable.draw(paramAnonymousCanvas);
              Theme.chat_shareDrawable.setAlpha(255);
              Theme.chat_replyIconDrawable.setAlpha(255);
              return;
              i = 0;
              break;
              label348:
              invalidate();
              break label100;
              label355:
              if (this.replyButtonProgress <= 0.0F) {
                break label100;
              }
              this.replyButtonProgress -= (float)l2 / 180.0F;
              if (this.replyButtonProgress < 0.0F)
              {
                this.replyButtonProgress = 0.0F;
                break label100;
              }
              invalidate();
              break label100;
              label403:
              f1 = 1.2F - 0.2F * ((this.replyButtonProgress - 0.8F) / 0.2F);
              break label126;
              label423:
              f1 = this.replyButtonProgress;
            }
          }
          
          private void processTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            Object localObject;
            if ((paramAnonymousMotionEvent.getAction() == 0) && (!this.startedTracking) && (!this.maybeStartTracking))
            {
              localObject = getPressedChildView();
              if ((localObject instanceof ChatMessageCell))
              {
                this.slidingView = ((ChatMessageCell)localObject);
                localObject = this.slidingView.getMessageObject();
                if (((ChatActivity.this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) >= 46)) && ((ChatActivity.this.getMessageType((MessageObject)localObject) != 1) || ((((MessageObject)localObject).getDialogId() != ChatActivity.this.mergeDialogId) && (!((MessageObject)localObject).needDrawBluredPreview()))) && ((ChatActivity.this.currentEncryptedChat != null) || (((MessageObject)localObject).getId() >= 0)) && ((ChatActivity.this.bottomOverlayChat == null) || (ChatActivity.this.bottomOverlayChat.getVisibility() != 0)) && (!ChatActivity.this.isBroadcast) && ((ChatActivity.this.currentChat == null) || ((!ChatObject.isNotInChat(ChatActivity.this.currentChat)) && ((!ChatObject.isChannel(ChatActivity.this.currentChat)) || (ChatObject.canPost(ChatActivity.this.currentChat)) || (ChatActivity.this.currentChat.megagroup)) && (ChatObject.canSendMessages(ChatActivity.this.currentChat))))) {
                  break label250;
                }
                this.slidingView = null;
              }
            }
            for (;;)
            {
              return;
              label250:
              this.startedTrackingPointerId = paramAnonymousMotionEvent.getPointerId(0);
              this.maybeStartTracking = true;
              this.startedTrackingX = ((int)paramAnonymousMotionEvent.getX());
              this.startedTrackingY = ((int)paramAnonymousMotionEvent.getY());
              return;
              int i;
              if ((this.slidingView != null) && (paramAnonymousMotionEvent.getAction() == 2) && (paramAnonymousMotionEvent.getPointerId(0) == this.startedTrackingPointerId))
              {
                i = Math.max(AndroidUtilities.dp(-80.0F), Math.min(0, (int)(paramAnonymousMotionEvent.getX() - this.startedTrackingX)));
                int j = Math.abs((int)paramAnonymousMotionEvent.getY() - this.startedTrackingY);
                if ((getScrollState() == 0) && (this.maybeStartTracking) && (!this.startedTracking) && (i <= -AndroidUtilities.getPixelsInCM(0.4F, true)) && (Math.abs(i) / 3 > j))
                {
                  localObject = MotionEvent.obtain(0L, 0L, 3, 0.0F, 0.0F, 0);
                  this.slidingView.onTouchEvent((MotionEvent)localObject);
                  super.onInterceptTouchEvent((MotionEvent)localObject);
                  ((MotionEvent)localObject).recycle();
                  ChatActivity.this.chatLayoutManager.setCanScrollVertically(false);
                  this.maybeStartTracking = false;
                  this.startedTracking = true;
                  this.startedTrackingX = ((int)paramAnonymousMotionEvent.getX());
                  if (getParent() == null) {
                    continue;
                  }
                  getParent().requestDisallowInterceptTouchEvent(true);
                  return;
                }
                if (!this.startedTracking) {
                  continue;
                }
                if ((Math.abs(i) >= AndroidUtilities.dp(50.0F)) && (this.wasTrackingVibrate)) {}
              }
              try
              {
                performHapticFeedback(3, 2);
                for (this.wasTrackingVibrate = true;; this.wasTrackingVibrate = false)
                {
                  this.slidingView.setTranslationX(i);
                  if (this.slidingView.getMessageObject().isRoundVideo()) {
                    ChatActivity.this.updateTextureViewPosition();
                  }
                  setGroupTranslationX(this.slidingView, i);
                  invalidate();
                  return;
                }
                if ((this.slidingView == null) || (paramAnonymousMotionEvent.getPointerId(0) != this.startedTrackingPointerId) || ((paramAnonymousMotionEvent.getAction() != 3) && (paramAnonymousMotionEvent.getAction() != 1) && (paramAnonymousMotionEvent.getAction() != 6))) {
                  continue;
                }
                if (Math.abs(this.slidingView.getTranslationX()) >= AndroidUtilities.dp(50.0F)) {
                  ChatActivity.this.showReplyPanel(true, this.slidingView.getMessageObject(), null, null, false);
                }
                this.endedTrackingX = this.slidingView.getTranslationX();
                this.lastTrackingAnimationTime = System.currentTimeMillis();
                this.trackAnimationProgress = 0.0F;
                invalidate();
                this.maybeStartTracking = false;
                this.startedTracking = false;
                ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
                return;
              }
              catch (Exception paramAnonymousMotionEvent)
              {
                for (;;) {}
              }
            }
          }
          
          private void setGroupTranslationX(ChatMessageCell paramAnonymousChatMessageCell, float paramAnonymousFloat)
          {
            paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getCurrentMessagesGroup();
            if (paramAnonymousChatMessageCell == null) {
              return;
            }
            int j = getChildCount();
            int i = 0;
            if (i < j)
            {
              Object localObject = getChildAt(i);
              if ((localObject == this) || (!(localObject instanceof ChatMessageCell))) {}
              for (;;)
              {
                i += 1;
                break;
                localObject = (ChatMessageCell)localObject;
                if (((ChatMessageCell)localObject).getCurrentMessagesGroup() == paramAnonymousChatMessageCell)
                {
                  ((ChatMessageCell)localObject).setTranslationX(paramAnonymousFloat);
                  ((ChatMessageCell)localObject).invalidate();
                }
              }
            }
            invalidate();
          }
          
          protected void dispatchDraw(Canvas paramAnonymousCanvas)
          {
            ChatActivity.access$6902(ChatActivity.this, null);
            super.dispatchDraw(paramAnonymousCanvas);
          }
          
          public boolean drawChild(Canvas paramAnonymousCanvas, View paramAnonymousView, long paramAnonymousLong)
          {
            int m = 0;
            int n = 0;
            int k = 0;
            int i1 = 0;
            Object localObject1;
            MessageObject.GroupedMessagePosition localGroupedMessagePosition;
            Object localObject2;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              localObject1 = (ChatMessageCell)paramAnonymousView;
              localGroupedMessagePosition = ((ChatMessageCell)localObject1).getCurrentPosition();
              localObject2 = ((ChatMessageCell)localObject1).getCurrentMessagesGroup();
              i = i1;
              j = n;
              if (localGroupedMessagePosition != null)
              {
                if ((localGroupedMessagePosition.pw == localGroupedMessagePosition.spanSize) || (localGroupedMessagePosition.spanSize != 1000) || (localGroupedMessagePosition.siblingHeights != null) || (!((MessageObject.GroupedMessages)localObject2).hasSibling)) {
                  break label333;
                }
                j = ((ChatMessageCell)localObject1).getBackgroundDrawableLeft();
                i = i1;
              }
              k = i;
              m = j;
              if (((ChatMessageCell)localObject1).needDelayRoundProgressDraw())
              {
                ChatActivity.access$6902(ChatActivity.this, (ChatMessageCell)localObject1);
                m = j;
                k = i;
              }
            }
            label180:
            boolean bool2;
            if (m != 0)
            {
              paramAnonymousCanvas.save();
              paramAnonymousCanvas.clipRect(m + paramAnonymousView.getTranslationX(), paramAnonymousView.getTop(), paramAnonymousView.getRight() + paramAnonymousView.getTranslationX(), paramAnonymousView.getBottom());
              bool2 = super.drawChild(paramAnonymousCanvas, paramAnonymousView, paramAnonymousLong);
              if ((m != 0) || (k != 0)) {
                paramAnonymousCanvas.restore();
              }
              k = 0;
              m = getChildCount();
              i = 0;
            }
            for (;;)
            {
              j = k;
              if (i < m)
              {
                if (getChildAt(i) == paramAnonymousView) {
                  j = i;
                }
              }
              else
              {
                if (j != m - 1) {
                  break label671;
                }
                k = this.drawTimeAfter.size();
                if (k <= 0) {
                  break label454;
                }
                i = 0;
                while (i < k)
                {
                  localObject1 = (ChatMessageCell)this.drawTimeAfter.get(i);
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject1).getLeft() + ((ChatMessageCell)localObject1).getTranslationX(), ((ChatMessageCell)localObject1).getTop());
                  ((ChatMessageCell)localObject1).drawTimeLayout(paramAnonymousCanvas);
                  paramAnonymousCanvas.restore();
                  i += 1;
                }
                label333:
                i = i1;
                j = n;
                if (localGroupedMessagePosition.siblingHeights == null) {
                  break;
                }
                j = paramAnonymousView.getBottom();
                if (((ChatMessageCell)localObject1).isPinnedBottom()) {}
                for (i = 1;; i = 0)
                {
                  i = j - AndroidUtilities.dp(i + 1);
                  j = n;
                  break;
                }
                if (k == 0) {
                  break label180;
                }
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.clipRect(paramAnonymousView.getLeft() + paramAnonymousView.getTranslationX(), paramAnonymousView.getTop(), paramAnonymousView.getRight() + paramAnonymousView.getTranslationX(), k);
                break label180;
              }
              i += 1;
            }
            this.drawTimeAfter.clear();
            label454:
            k = this.drawNamesAfter.size();
            if (k > 0)
            {
              i = 0;
              while (i < k)
              {
                localObject1 = (ChatMessageCell)this.drawNamesAfter.get(i);
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(((ChatMessageCell)localObject1).getLeft() + ((ChatMessageCell)localObject1).getTranslationX(), ((ChatMessageCell)localObject1).getTop());
                ((ChatMessageCell)localObject1).drawNamesLayout(paramAnonymousCanvas);
                paramAnonymousCanvas.restore();
                i += 1;
              }
              this.drawNamesAfter.clear();
            }
            k = this.drawCaptionAfter.size();
            boolean bool1;
            if (k > 0)
            {
              i = 0;
              while (i < k)
              {
                localObject1 = (ChatMessageCell)this.drawCaptionAfter.get(i);
                if (((ChatMessageCell)localObject1).getCurrentPosition() == null)
                {
                  i += 1;
                }
                else
                {
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject1).getLeft() + ((ChatMessageCell)localObject1).getTranslationX(), ((ChatMessageCell)localObject1).getTop());
                  if ((((ChatMessageCell)localObject1).getCurrentPosition().flags & 0x1) == 0) {}
                  for (bool1 = true;; bool1 = false)
                  {
                    ((ChatMessageCell)localObject1).drawCaptionLayout(paramAnonymousCanvas, bool1);
                    paramAnonymousCanvas.restore();
                    break;
                  }
                }
              }
              this.drawCaptionAfter.clear();
            }
            label671:
            label864:
            label876:
            Object localObject3;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              localObject1 = (ChatMessageCell)paramAnonymousView;
              localGroupedMessagePosition = ((ChatMessageCell)localObject1).getCurrentPosition();
              if (localGroupedMessagePosition != null)
              {
                if ((localGroupedMessagePosition.last) || ((localGroupedMessagePosition.minX == 0) && (localGroupedMessagePosition.minY == 0)))
                {
                  if (j != m - 1) {
                    break label1210;
                  }
                  paramAnonymousCanvas.save();
                  paramAnonymousCanvas.translate(((ChatMessageCell)localObject1).getLeft() + ((ChatMessageCell)localObject1).getTranslationX(), ((ChatMessageCell)localObject1).getTop());
                  if (localGroupedMessagePosition.last) {
                    ((ChatMessageCell)localObject1).drawTimeLayout(paramAnonymousCanvas);
                  }
                  if ((localGroupedMessagePosition.minX == 0) && (localGroupedMessagePosition.minY == 0)) {
                    ((ChatMessageCell)localObject1).drawNamesLayout(paramAnonymousCanvas);
                  }
                  paramAnonymousCanvas.restore();
                }
                if (j != m - 1) {
                  break label1271;
                }
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(((ChatMessageCell)localObject1).getLeft() + ((ChatMessageCell)localObject1).getTranslationX(), ((ChatMessageCell)localObject1).getTop());
                if ((((ChatMessageCell)localObject1).hasCaptionLayout()) && ((localGroupedMessagePosition.flags & 0x8) != 0))
                {
                  if ((localGroupedMessagePosition.flags & 0x1) != 0) {
                    break label1265;
                  }
                  bool1 = true;
                  ((ChatMessageCell)localObject1).drawCaptionLayout(paramAnonymousCanvas, bool1);
                }
                paramAnonymousCanvas.restore();
              }
              localObject3 = ((ChatMessageCell)localObject1).getMessageObject();
              if ((ChatActivity.this.roundVideoContainer != null) && (((MessageObject)localObject3).isRoundVideo()) && (MediaController.getInstance().isPlayingMessage((MessageObject)localObject3)))
              {
                localObject2 = ((ChatMessageCell)localObject1).getPhotoImage();
                if (!ChatActivity.this.chatActivityEnterView.isTopViewVisible()) {
                  break label1303;
                }
                i = AndroidUtilities.dp(48.0F);
                label940:
                f1 = ((ImageReceiver)localObject2).getImageX() + ((ChatMessageCell)localObject1).getTranslationX();
                f2 = ChatActivity.this.fragmentView.getPaddingTop() + ((ChatMessageCell)localObject1).getTop() + ((ImageReceiver)localObject2).getImageY() - i;
                if ((ChatActivity.this.roundVideoContainer.getTranslationX() != f1) || (ChatActivity.this.roundVideoContainer.getTranslationY() != f2))
                {
                  ChatActivity.this.roundVideoContainer.setTranslationX(f1);
                  ChatActivity.this.roundVideoContainer.setTranslationY(f2);
                  ChatActivity.this.fragmentView.invalidate();
                  ChatActivity.this.roundVideoContainer.invalidate();
                }
              }
              localObject2 = ((ChatMessageCell)localObject1).getAvatarImage();
              if (localObject2 != null)
              {
                localObject3 = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject3);
                m = paramAnonymousView.getTop();
                if (!((ChatMessageCell)localObject1).isPinnedBottom()) {
                  break label1384;
                }
                RecyclerView.ViewHolder localViewHolder = ChatActivity.this.chatListView.getChildViewHolder(paramAnonymousView);
                if (localViewHolder == null) {
                  break label1384;
                }
                i = localViewHolder.getAdapterPosition();
                if ((localObject3 == null) || (localGroupedMessagePosition == null)) {
                  break label1375;
                }
                n = ((MessageObject.GroupedMessages)localObject3).posArray.indexOf(localGroupedMessagePosition);
                i1 = ((MessageObject.GroupedMessages)localObject3).posArray.size();
                if ((localGroupedMessagePosition.flags & 0x8) == 0) {
                  break label1309;
                }
                j = i - i1 + n;
              }
            }
            for (;;)
            {
              if (ChatActivity.this.chatListView.findViewHolderForAdapterPosition(j) == null) {
                break label1384;
              }
              ((ImageReceiver)localObject2).setImageY(-AndroidUtilities.dp(1000.0F));
              ((ImageReceiver)localObject2).draw(paramAnonymousCanvas);
              return bool2;
              label1210:
              if (localGroupedMessagePosition.last) {
                this.drawTimeAfter.add(localObject1);
              }
              if ((localGroupedMessagePosition.minX != 0) || (localGroupedMessagePosition.minY != 0) || (!((ChatMessageCell)localObject1).hasNameLayout())) {
                break;
              }
              this.drawNamesAfter.add(localObject1);
              break;
              label1265:
              bool1 = false;
              break label864;
              label1271:
              if ((!((ChatMessageCell)localObject1).hasCaptionLayout()) || ((localGroupedMessagePosition.flags & 0x8) == 0)) {
                break label876;
              }
              this.drawCaptionAfter.add(localObject1);
              break label876;
              label1303:
              i = 0;
              break label940;
              label1309:
              i -= 1;
              k = n + 1;
              for (;;)
              {
                j = i;
                if (n >= i1) {
                  break;
                }
                j = i;
                if (((MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject3).posArray.get(k)).minY > localGroupedMessagePosition.maxY) {
                  break;
                }
                i -= 1;
                k += 1;
              }
              label1375:
              j = i - 1;
            }
            label1384:
            float f2 = ((ChatMessageCell)localObject1).getTranslationX();
            int j = paramAnonymousView.getTop() + ((ChatMessageCell)localObject1).getLayoutHeight();
            k = ChatActivity.this.chatListView.getMeasuredHeight() - ChatActivity.this.chatListView.getPaddingBottom();
            int i = j;
            if (j > k) {
              i = k;
            }
            k = m;
            float f1 = f2;
            if (((ChatMessageCell)localObject1).isPinnedTop())
            {
              paramAnonymousView = ChatActivity.this.chatListView.getChildViewHolder(paramAnonymousView);
              k = m;
              f1 = f2;
              if (paramAnonymousView != null)
              {
                k = 0;
                j = m;
                if (k < 20) {
                  break label1586;
                }
                f1 = f2;
                k = j;
              }
            }
            label1503:
            label1586:
            int i2;
            do
            {
              j = i;
              if (i - AndroidUtilities.dp(48.0F) < k) {
                j = k + AndroidUtilities.dp(48.0F);
              }
              if (f1 != 0.0F)
              {
                paramAnonymousCanvas.save();
                paramAnonymousCanvas.translate(f1, 0.0F);
              }
              ((ImageReceiver)localObject2).setImageY(j - AndroidUtilities.dp(44.0F));
              ((ImageReceiver)localObject2).draw(paramAnonymousCanvas);
              if (f1 == 0.0F) {
                break;
              }
              paramAnonymousCanvas.restore();
              return bool2;
              i1 = k + 1;
              m = paramAnonymousView.getAdapterPosition();
              if ((localObject3 == null) || (localGroupedMessagePosition == null)) {
                break label1860;
              }
              i2 = ((MessageObject.GroupedMessages)localObject3).posArray.indexOf(localGroupedMessagePosition);
              k = j;
              f1 = f2;
            } while (i2 < 0);
            ((MessageObject.GroupedMessages)localObject3).posArray.size();
            if ((localGroupedMessagePosition.flags & 0x4) != 0) {
              m = m + i2 + 1;
            }
            for (;;)
            {
              localObject1 = ChatActivity.this.chatListView.findViewHolderForAdapterPosition(m);
              k = j;
              f1 = f2;
              if (localObject1 == null) {
                break label1503;
              }
              m = ((RecyclerView.ViewHolder)localObject1).itemView.getTop();
              float f3 = f2;
              if (i - AndroidUtilities.dp(48.0F) < ((RecyclerView.ViewHolder)localObject1).itemView.getBottom()) {
                f3 = Math.min(((RecyclerView.ViewHolder)localObject1).itemView.getTranslationX(), f2);
              }
              k = m;
              f1 = f3;
              if (!(((RecyclerView.ViewHolder)localObject1).itemView instanceof ChatMessageCell)) {
                break label1503;
              }
              paramAnonymousView = (View)localObject1;
              j = m;
              k = i1;
              f2 = f3;
              if (((ChatMessageCell)((RecyclerView.ViewHolder)localObject1).itemView).isPinnedTop()) {
                break;
              }
              k = m;
              f1 = f3;
              break label1503;
              k = m + 1;
              n = i2 - 1;
              for (;;)
              {
                m = k;
                if (i2 < 0) {
                  break;
                }
                m = k;
                if (((MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject3).posArray.get(n)).maxY < localGroupedMessagePosition.minY) {
                  break;
                }
                k += 1;
                n -= 1;
              }
              label1860:
              m += 1;
            }
          }
          
          protected void onChildPressed(View paramAnonymousView, boolean paramAnonymousBoolean)
          {
            super.onChildPressed(paramAnonymousView, paramAnonymousBoolean);
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              MessageObject.GroupedMessages localGroupedMessages = ((ChatMessageCell)paramAnonymousView).getCurrentMessagesGroup();
              if (localGroupedMessages != null)
              {
                int j = getChildCount();
                int i = 0;
                if (i < j)
                {
                  View localView = getChildAt(i);
                  if ((localView == paramAnonymousView) || (!(localView instanceof ChatMessageCell))) {}
                  for (;;)
                  {
                    i += 1;
                    break;
                    ChatMessageCell localChatMessageCell = (ChatMessageCell)localView;
                    if (((ChatMessageCell)localView).getCurrentMessagesGroup() == localGroupedMessages) {
                      localChatMessageCell.setPressed(paramAnonymousBoolean);
                    }
                  }
                }
              }
            }
          }
          
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            super.onDraw(paramAnonymousCanvas);
            if (this.slidingView != null)
            {
              float f = this.slidingView.getTranslationX();
              if ((!this.maybeStartTracking) && (!this.startedTracking) && (this.endedTrackingX != 0.0F) && (f != 0.0F))
              {
                long l1 = System.currentTimeMillis();
                long l2 = this.lastTrackingAnimationTime;
                this.trackAnimationProgress += (float)(l1 - l2) / 180.0F;
                if (this.trackAnimationProgress > 1.0F) {
                  this.trackAnimationProgress = 1.0F;
                }
                this.lastTrackingAnimationTime = l1;
                f = this.endedTrackingX * (1.0F - AndroidUtilities.decelerateInterpolator.getInterpolation(this.trackAnimationProgress));
                if (f == 0.0F) {
                  this.endedTrackingX = 0.0F;
                }
                setGroupTranslationX(this.slidingView, f);
                this.slidingView.setTranslationX(f);
                if (this.slidingView.getMessageObject().isRoundVideo()) {
                  ChatActivity.this.updateTextureViewPosition();
                }
                invalidate();
              }
              drawReplyButton(paramAnonymousCanvas);
            }
          }
          
          public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool = super.onInterceptTouchEvent(paramAnonymousMotionEvent);
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
              return bool;
            }
            processTouchEvent(paramAnonymousMotionEvent);
            return bool;
          }
          
          protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
          {
            super.onLayout(paramAnonymousBoolean, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
            ChatActivity.access$10602(ChatActivity.this, false);
            int j;
            int i;
            if (ChatActivity.ChatActivityAdapter.access$10800(ChatActivity.this.chatAdapter))
            {
              j = getChildCount();
              i = 0;
            }
            for (;;)
            {
              if (i < j)
              {
                View localView = getChildAt(i);
                if (!(localView instanceof BotHelpCell)) {
                  break label108;
                }
                paramAnonymousInt2 = (paramAnonymousInt4 - paramAnonymousInt2) / 2 - localView.getMeasuredHeight() / 2;
                if (localView.getTop() > paramAnonymousInt2) {
                  localView.layout(0, paramAnonymousInt2, paramAnonymousInt3 - paramAnonymousInt1, localView.getMeasuredHeight() + paramAnonymousInt2);
                }
              }
              return;
              label108:
              i += 1;
            }
          }
          
          public boolean onTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool = super.onTouchEvent(paramAnonymousMotionEvent);
            if (ChatActivity.this.actionBar.isActionModeShowed()) {
              return bool;
            }
            processTouchEvent(paramAnonymousMotionEvent);
            if ((this.startedTracking) || (bool)) {}
            for (bool = true;; bool = false) {
              return bool;
            }
          }
          
          public void requestDisallowInterceptTouchEvent(boolean paramAnonymousBoolean)
          {
            super.requestDisallowInterceptTouchEvent(paramAnonymousBoolean);
            if (this.slidingView != null)
            {
              this.endedTrackingX = this.slidingView.getTranslationX();
              this.lastTrackingAnimationTime = System.currentTimeMillis();
              this.trackAnimationProgress = 0.0F;
              invalidate();
              this.maybeStartTracking = false;
              this.startedTracking = false;
              ChatActivity.this.chatLayoutManager.setCanScrollVertically(true);
            }
          }
          
          public void requestLayout()
          {
            if ((ChatActivity.this.chatListViewIgnoreLayout) || (ChatActivity.this.globalIgnoreLayout)) {
              return;
            }
            super.requestLayout();
          }
        };
        this.chatListView.setTag(Integer.valueOf(1));
        this.chatListView.setVerticalScrollBarEnabled(true);
        localObject2 = this.chatListView;
        Object localObject3 = new ChatActivityAdapter(paramContext);
        this.chatAdapter = ((ChatActivityAdapter)localObject3);
        ((RecyclerListView)localObject2).setAdapter((RecyclerView.Adapter)localObject3);
        this.chatListView.setClipToPadding(false);
        this.chatListView.setPadding(0, AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(3.0F));
        this.chatListView.setItemAnimator(null);
        this.chatListView.setLayoutAnimation(null);
        this.chatLayoutManager = new GridLayoutManagerFixed(paramContext, 1000, 1, true)
        {
          protected boolean hasSiblingChild(int paramAnonymousInt)
          {
            Object localObject;
            MessageObject.GroupedMessages localGroupedMessages;
            if ((paramAnonymousInt >= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter)) && (paramAnonymousInt < ChatActivity.ChatActivityAdapter.access$12000(ChatActivity.this.chatAdapter)))
            {
              paramAnonymousInt -= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter);
              if ((paramAnonymousInt >= 0) && (paramAnonymousInt < ChatActivity.this.messages.size()))
              {
                localObject = (MessageObject)ChatActivity.this.messages.get(paramAnonymousInt);
                localGroupedMessages = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject);
                if (localGroupedMessages != null)
                {
                  localObject = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localObject);
                  if ((((MessageObject.GroupedMessagePosition)localObject).minX != ((MessageObject.GroupedMessagePosition)localObject).maxX) && (((MessageObject.GroupedMessagePosition)localObject).minY == ((MessageObject.GroupedMessagePosition)localObject).maxY) && (((MessageObject.GroupedMessagePosition)localObject).minY != 0)) {
                    break label139;
                  }
                }
              }
            }
            return false;
            label139:
            int i = localGroupedMessages.posArray.size();
            paramAnonymousInt = 0;
            label149:
            MessageObject.GroupedMessagePosition localGroupedMessagePosition;
            if (paramAnonymousInt < i)
            {
              localGroupedMessagePosition = (MessageObject.GroupedMessagePosition)localGroupedMessages.posArray.get(paramAnonymousInt);
              if (localGroupedMessagePosition != localObject) {
                break label181;
              }
            }
            label181:
            while ((localGroupedMessagePosition.minY > ((MessageObject.GroupedMessagePosition)localObject).minY) || (localGroupedMessagePosition.maxY < ((MessageObject.GroupedMessagePosition)localObject).minY))
            {
              paramAnonymousInt += 1;
              break label149;
              break;
            }
            return true;
          }
          
          public boolean shouldLayoutChildFromOpositeSide(View paramAnonymousView)
          {
            boolean bool2 = false;
            boolean bool1 = bool2;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              bool1 = bool2;
              if (!((ChatMessageCell)paramAnonymousView).getMessageObject().isOutOwner()) {
                bool1 = true;
              }
            }
            return bool1;
          }
          
          public void smoothScrollToPosition(RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState, int paramAnonymousInt)
          {
            paramAnonymousRecyclerView = new LinearSmoothScrollerMiddle(paramAnonymousRecyclerView.getContext());
            paramAnonymousRecyclerView.setTargetPosition(paramAnonymousInt);
            startSmoothScroll(paramAnonymousRecyclerView);
          }
          
          public boolean supportsPredictiveItemAnimations()
          {
            return false;
          }
        };
        this.chatLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup()
        {
          public int getSpanSize(int paramAnonymousInt)
          {
            if ((paramAnonymousInt >= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter)) && (paramAnonymousInt < ChatActivity.ChatActivityAdapter.access$12000(ChatActivity.this.chatAdapter)))
            {
              paramAnonymousInt -= ChatActivity.ChatActivityAdapter.access$11900(ChatActivity.this.chatAdapter);
              if ((paramAnonymousInt >= 0) && (paramAnonymousInt < ChatActivity.this.messages.size()))
              {
                MessageObject localMessageObject = (MessageObject)ChatActivity.this.messages.get(paramAnonymousInt);
                MessageObject.GroupedMessages localGroupedMessages = ChatActivity.this.getValidGroupedMessage(localMessageObject);
                if (localGroupedMessages != null) {
                  return ((MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localMessageObject)).spanSize;
                }
              }
            }
            return 1000;
          }
        });
        this.chatListView.setLayoutManager(this.chatLayoutManager);
        this.chatListView.addItemDecoration(new RecyclerView.ItemDecoration()
        {
          public void getItemOffsets(android.graphics.Rect paramAnonymousRect, View paramAnonymousView, RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState)
          {
            paramAnonymousRect.bottom = 0;
            if ((paramAnonymousView instanceof ChatMessageCell))
            {
              paramAnonymousState = (ChatMessageCell)paramAnonymousView;
              paramAnonymousView = paramAnonymousState.getCurrentMessagesGroup();
              if (paramAnonymousView != null)
              {
                paramAnonymousRecyclerView = paramAnonymousState.getCurrentPosition();
                if ((paramAnonymousRecyclerView != null) && (paramAnonymousRecyclerView.siblingHeights != null))
                {
                  float f = Math.max(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) * 0.5F;
                  int j = paramAnonymousState.getCaptionHeight();
                  int i = 0;
                  while (i < paramAnonymousRecyclerView.siblingHeights.length)
                  {
                    j += (int)Math.ceil(paramAnonymousRecyclerView.siblingHeights[i] * f);
                    i += 1;
                  }
                  int k = j + (paramAnonymousRecyclerView.maxY - paramAnonymousRecyclerView.minY) * AndroidUtilities.dp2(11.0F);
                  int m = paramAnonymousView.posArray.size();
                  i = 0;
                  j = k;
                  if (i < m)
                  {
                    paramAnonymousState = (MessageObject.GroupedMessagePosition)paramAnonymousView.posArray.get(i);
                    if ((paramAnonymousState.minY != paramAnonymousRecyclerView.minY) || ((paramAnonymousState.minX == paramAnonymousRecyclerView.minX) && (paramAnonymousState.maxX == paramAnonymousRecyclerView.maxX) && (paramAnonymousState.minY == paramAnonymousRecyclerView.minY) && (paramAnonymousState.maxY == paramAnonymousRecyclerView.maxY))) {}
                    while (paramAnonymousState.minY != paramAnonymousRecyclerView.minY)
                    {
                      i += 1;
                      break;
                    }
                    j = k - ((int)Math.ceil(paramAnonymousState.ph * f) - AndroidUtilities.dp(4.0F));
                  }
                  paramAnonymousRect.bottom = (-j);
                }
              }
            }
          }
        });
        this.contentView.addView(this.chatListView, LayoutHelper.createFrame(-1, -1.0F));
        this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
        this.chatListView.setOnItemClickListener(this.onItemClickListener);
        this.chatListView.setOnScrollListener(new RecyclerView.OnScrollListener()
        {
          private final int scrollValue = AndroidUtilities.dp(100.0F);
          private float totalDy = 0.0F;
          
          public void onScrollStateChanged(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt)
          {
            if (paramAnonymousInt == 2) {
              ChatActivity.access$602(ChatActivity.this, true);
            }
            do
            {
              return;
              if (paramAnonymousInt == 1)
              {
                ChatActivity.access$602(ChatActivity.this, true);
                ChatActivity.access$12102(ChatActivity.this, true);
                ChatActivity.access$12202(ChatActivity.this, true);
                return;
              }
            } while (paramAnonymousInt != 0);
            ChatActivity.access$12102(ChatActivity.this, false);
            ChatActivity.access$12202(ChatActivity.this, false);
            ChatActivity.this.hideFloatingDateView(true);
          }
          
          public void onScrolled(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt1, int paramAnonymousInt2)
          {
            ChatActivity.this.chatListView.invalidate();
            if ((!ChatActivity.this.wasManualScroll) && (paramAnonymousInt2 != 0)) {
              ChatActivity.access$602(ChatActivity.this, true);
            }
            if ((paramAnonymousInt2 != 0) && (ChatActivity.this.scrollingFloatingDate) && (!ChatActivity.this.currentFloatingTopIsNotMessage))
            {
              if (ChatActivity.this.highlightMessageId != Integer.MAX_VALUE)
              {
                ChatActivity.access$5602(ChatActivity.this, Integer.MAX_VALUE);
                ChatActivity.this.updateVisibleRows();
              }
              if (ChatActivity.this.floatingDateView.getTag() == null)
              {
                if (ChatActivity.this.floatingDateAnimation != null) {
                  ChatActivity.this.floatingDateAnimation.cancel();
                }
                ChatActivity.this.floatingDateView.setTag(Integer.valueOf(1));
                ChatActivity.access$12602(ChatActivity.this, new AnimatorSet());
                ChatActivity.this.floatingDateAnimation.setDuration(150L);
                ChatActivity.this.floatingDateAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.floatingDateView, "alpha", new float[] { 1.0F }) });
                ChatActivity.this.floatingDateAnimation.addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationEnd(Animator paramAnonymous2Animator)
                  {
                    if (paramAnonymous2Animator.equals(ChatActivity.this.floatingDateAnimation)) {
                      ChatActivity.access$12602(ChatActivity.this, null);
                    }
                  }
                });
                ChatActivity.this.floatingDateAnimation.start();
              }
            }
            ChatActivity.this.checkScrollForLoad(true);
            paramAnonymousInt1 = ChatActivity.this.chatLayoutManager.findFirstVisibleItemPosition();
            if (paramAnonymousInt1 != -1)
            {
              ChatActivity.this.chatAdapter.getItemCount();
              if ((paramAnonymousInt1 != 0) || (ChatActivity.this.forwardEndReached[0] == 0)) {
                break label294;
              }
              ChatActivity.this.showPagedownButton(false, true);
            }
            for (;;)
            {
              ChatActivity.this.updateMessagesVisisblePart();
              return;
              label294:
              if (paramAnonymousInt2 > 0)
              {
                if (ChatActivity.this.pagedownButton.getTag() == null)
                {
                  this.totalDy += paramAnonymousInt2;
                  if (this.totalDy > this.scrollValue)
                  {
                    this.totalDy = 0.0F;
                    ChatActivity.this.showPagedownButton(true, true);
                    ChatActivity.access$13002(ChatActivity.this, true);
                  }
                }
              }
              else if ((ChatActivity.this.pagedownButtonShowedByScroll) && (ChatActivity.this.pagedownButton.getTag() != null))
              {
                this.totalDy += paramAnonymousInt2;
                if (this.totalDy < -this.scrollValue)
                {
                  ChatActivity.this.showPagedownButton(false, true);
                  this.totalDy = 0.0F;
                }
              }
            }
          }
        });
        this.progressView = new FrameLayout(paramContext);
        this.progressView.setVisibility(4);
        this.contentView.addView(this.progressView, LayoutHelper.createFrame(-1, -1, 51));
        this.progressView2 = new View(paramContext);
        this.progressView2.setBackgroundResource(2131165672);
        this.progressView2.getBackground().setColorFilter(Theme.colorFilter);
        this.progressView.addView(this.progressView2, LayoutHelper.createFrame(36, 36, 17));
        this.progressBar = new RadialProgressView(paramContext);
        this.progressBar.setSize(AndroidUtilities.dp(28.0F));
        this.progressBar.setProgressColor(Theme.getColor("chat_serviceText"));
        this.progressView.addView(this.progressBar, LayoutHelper.createFrame(32, 32, 17));
        this.floatingDateView = new ChatActionCell(paramContext);
        this.floatingDateView.setAlpha(0.0F);
        this.contentView.addView(this.floatingDateView, LayoutHelper.createFrame(-2, -2.0F, 49, 0.0F, 4.0F, 0.0F, 0.0F));
        this.floatingDateView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.floatingDateView.getAlpha() == 0.0F) {
              return;
            }
            paramAnonymousView = Calendar.getInstance();
            paramAnonymousView.setTimeInMillis(ChatActivity.this.floatingDateView.getCustomDate() * 1000L);
            int i = paramAnonymousView.get(1);
            int j = paramAnonymousView.get(2);
            int k = paramAnonymousView.get(5);
            paramAnonymousView.clear();
            paramAnonymousView.set(i, j, k);
            ChatActivity.this.jumpToDate((int)(paramAnonymousView.getTime().getTime() / 1000L));
          }
        });
        if (ChatObject.isChannel(this.currentChat))
        {
          this.pinnedMessageView = new FrameLayout(paramContext);
          this.pinnedMessageView.setTag(Integer.valueOf(1));
          this.pinnedMessageView.setTranslationY(-AndroidUtilities.dp(50.0F));
          this.pinnedMessageView.setVisibility(8);
          this.pinnedMessageView.setBackgroundResource(2131165232);
          this.pinnedMessageView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
          this.contentView.addView(this.pinnedMessageView, LayoutHelper.createFrame(-1, 50, 51));
          this.pinnedMessageView.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              ChatActivity.access$602(ChatActivity.this, true);
              ChatActivity.this.scrollToMessageId(ChatActivity.this.info.pinned_msg_id, 0, true, 0, false);
            }
          });
          this.pinnedLineView = new View(paramContext);
          this.pinnedLineView.setBackgroundColor(Theme.getColor("chat_topPanelLine"));
          this.pinnedMessageView.addView(this.pinnedLineView, LayoutHelper.createFrame(2, 32.0F, 51, 8.0F, 8.0F, 0.0F, 0.0F));
          this.pinnedMessageImageView = new BackupImageView(paramContext);
          this.pinnedMessageView.addView(this.pinnedMessageImageView, LayoutHelper.createFrame(32, 32.0F, 51, 17.0F, 8.0F, 0.0F, 0.0F));
          this.pinnedMessageNameTextView = new SimpleTextView(paramContext);
          this.pinnedMessageNameTextView.setTextSize(14);
          this.pinnedMessageNameTextView.setTextColor(Theme.getColor("chat_topPanelTitle"));
          this.pinnedMessageNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
          this.pinnedMessageView.addView(this.pinnedMessageNameTextView, LayoutHelper.createFrame(-1, AndroidUtilities.dp(18.0F), 51, 18.0F, 7.3F, 52.0F, 0.0F));
          this.pinnedMessageTextView = new SimpleTextView(paramContext);
          this.pinnedMessageTextView.setTextSize(14);
          this.pinnedMessageTextView.setTextColor(Theme.getColor("chat_topPanelMessage"));
          this.pinnedMessageView.addView(this.pinnedMessageTextView, LayoutHelper.createFrame(-1, AndroidUtilities.dp(18.0F), 51, 18.0F, 25.3F, 52.0F, 0.0F));
          this.closePinned = new ImageView(paramContext);
          this.closePinned.setImageResource(2131165504);
          this.closePinned.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelClose"), PorterDuff.Mode.MULTIPLY));
          this.closePinned.setScaleType(ImageView.ScaleType.CENTER);
          this.pinnedMessageView.addView(this.closePinned, LayoutHelper.createFrame(48, 48, 53));
          this.closePinned.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              if (ChatActivity.this.getParentActivity() == null) {
                return;
              }
              if ((ChatActivity.this.currentChat.creator) || ((ChatActivity.this.currentChat.admin_rights != null) && (((ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.admin_rights.pin_messages)) || ((!ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.admin_rights.edit_messages)))))
              {
                paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                paramAnonymousView.setMessage(LocaleController.getString("UnpinMessageAlert", 2131494515));
                paramAnonymousView.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
                {
                  public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                  {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).pinChannelMessage(ChatActivity.this.currentChat, 0, false);
                  }
                });
                paramAnonymousView.setTitle(LocaleController.getString("AppName", 2131492981));
                paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
                ChatActivity.this.showDialog(paramAnonymousView.create());
                return;
              }
              MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putInt("pin_" + ChatActivity.this.dialog_id, ChatActivity.this.info.pinned_msg_id).commit();
              ChatActivity.this.updatePinnedMessageView(true);
            }
          });
        }
        this.reportSpamView = new LinearLayout(paramContext);
        this.reportSpamView.setTag(Integer.valueOf(1));
        this.reportSpamView.setTranslationY(-AndroidUtilities.dp(50.0F));
        this.reportSpamView.setVisibility(8);
        this.reportSpamView.setBackgroundResource(2131165232);
        this.reportSpamView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.reportSpamView, LayoutHelper.createFrame(-1, 50, 51));
        this.addToContactsButton = new TextView(paramContext);
        this.addToContactsButton.setTextColor(Theme.getColor("chat_addContact"));
        this.addToContactsButton.setVisibility(8);
        this.addToContactsButton.setTextSize(1, 14.0F);
        this.addToContactsButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.addToContactsButton.setSingleLine(true);
        this.addToContactsButton.setMaxLines(1);
        this.addToContactsButton.setPadding(AndroidUtilities.dp(4.0F), 0, AndroidUtilities.dp(4.0F), 0);
        this.addToContactsButton.setGravity(17);
        this.addToContactsButton.setText(LocaleController.getString("AddContactChat", 2131492927));
        this.reportSpamView.addView(this.addToContactsButton, LayoutHelper.createLinear(-1, -1, 0.5F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        this.addToContactsButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            paramAnonymousView = new Bundle();
            paramAnonymousView.putInt("user_id", ChatActivity.this.currentUser.id);
            paramAnonymousView.putBoolean("addContact", true);
            ChatActivity.this.presentFragment(new ContactAddActivity(paramAnonymousView));
          }
        });
        this.reportSpamContainer = new FrameLayout(paramContext);
        this.reportSpamView.addView(this.reportSpamContainer, LayoutHelper.createLinear(-1, -1, 1.0F, 51, 0, 0, 0, AndroidUtilities.dp(1.0F)));
        this.reportSpamButton = new TextView(paramContext);
        this.reportSpamButton.setTextColor(Theme.getColor("chat_reportSpam"));
        this.reportSpamButton.setTextSize(1, 14.0F);
        this.reportSpamButton.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.reportSpamButton.setSingleLine(true);
        this.reportSpamButton.setMaxLines(1);
        if (this.currentChat == null) {
          break label7399;
        }
        this.reportSpamButton.setText(LocaleController.getString("ReportSpamAndLeave", 2131494249));
        this.reportSpamButton.setGravity(17);
        this.reportSpamButton.setPadding(AndroidUtilities.dp(50.0F), 0, AndroidUtilities.dp(50.0F), 0);
        this.reportSpamContainer.addView(this.reportSpamButton, LayoutHelper.createFrame(-1, -1, 51));
        this.reportSpamButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {
              return;
            }
            paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
            if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!ChatActivity.this.currentChat.megagroup)) {
              paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlertChannel", 2131494247));
            }
            for (;;)
            {
              paramAnonymousView.setTitle(LocaleController.getString("AppName", 2131492981));
              paramAnonymousView.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                {
                  if (ChatActivity.this.currentUser != null) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).blockUser(ChatActivity.this.currentUser.id);
                  }
                  MessagesController.getInstance(ChatActivity.this.currentAccount).reportSpam(ChatActivity.this.dialog_id, ChatActivity.this.currentUser, ChatActivity.this.currentChat, ChatActivity.this.currentEncryptedChat);
                  ChatActivity.this.updateSpamView();
                  if (ChatActivity.this.currentChat != null) {
                    if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                    }
                  }
                  for (;;)
                  {
                    ChatActivity.this.finishFragment();
                    return;
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteUserFromChat((int)-ChatActivity.this.dialog_id, MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Integer.valueOf(UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())), null);
                    continue;
                    MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                  }
                }
              });
              paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
              ChatActivity.this.showDialog(paramAnonymousView.create());
              return;
              if (ChatActivity.this.currentChat != null) {
                paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlertGroup", 2131494248));
              } else {
                paramAnonymousView.setMessage(LocaleController.getString("ReportSpamAlert", 2131494246));
              }
            }
          }
        });
        this.closeReportSpam = new ImageView(paramContext);
        this.closeReportSpam.setImageResource(2131165504);
        this.closeReportSpam.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelClose"), PorterDuff.Mode.MULTIPLY));
        this.closeReportSpam.setScaleType(ImageView.ScaleType.CENTER);
        this.reportSpamContainer.addView(this.closeReportSpam, LayoutHelper.createFrame(48, 48, 53));
        this.closeReportSpam.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            MessagesController.getInstance(ChatActivity.this.currentAccount).hideReportSpam(ChatActivity.this.dialog_id, ChatActivity.this.currentUser, ChatActivity.this.currentChat);
            ChatActivity.this.updateSpamView();
          }
        });
        this.alertView = new FrameLayout(paramContext);
        this.alertView.setTag(Integer.valueOf(1));
        this.alertView.setTranslationY(-AndroidUtilities.dp(50.0F));
        this.alertView.setVisibility(8);
        this.alertView.setBackgroundResource(2131165232);
        this.alertView.getBackground().setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_topPanelBackground"), PorterDuff.Mode.MULTIPLY));
        this.contentView.addView(this.alertView, LayoutHelper.createFrame(-1, 50, 51));
        this.alertNameTextView = new TextView(paramContext);
        this.alertNameTextView.setTextSize(1, 14.0F);
        this.alertNameTextView.setTextColor(Theme.getColor("chat_topPanelTitle"));
        this.alertNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.alertNameTextView.setSingleLine(true);
        this.alertNameTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertNameTextView.setMaxLines(1);
        this.alertView.addView(this.alertNameTextView, LayoutHelper.createFrame(-2, -2.0F, 51, 8.0F, 5.0F, 8.0F, 0.0F));
        this.alertTextView = new TextView(paramContext);
        this.alertTextView.setTextSize(1, 14.0F);
        this.alertTextView.setTextColor(Theme.getColor("chat_topPanelMessage"));
        this.alertTextView.setSingleLine(true);
        this.alertTextView.setEllipsize(TextUtils.TruncateAt.END);
        this.alertTextView.setMaxLines(1);
        this.alertView.addView(this.alertTextView, LayoutHelper.createFrame(-2, -2.0F, 51, 8.0F, 23.0F, 8.0F, 0.0F));
        this.pagedownButton = new FrameLayout(paramContext);
        this.pagedownButton.setVisibility(4);
        this.contentView.addView(this.pagedownButton, LayoutHelper.createFrame(66, 59.0F, 85, 0.0F, 0.0F, -3.0F, 5.0F));
        this.pagedownButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            ChatActivity.access$602(ChatActivity.this, true);
            ChatActivity.access$12202(ChatActivity.this, true);
            if (ChatActivity.this.createUnreadMessageAfterId != 0)
            {
              ChatActivity.this.scrollToMessageId(ChatActivity.this.createUnreadMessageAfterId, 0, false, ChatActivity.this.returnToLoadIndex, false);
              return;
            }
            if (ChatActivity.this.returnToMessageId > 0)
            {
              ChatActivity.this.scrollToMessageId(ChatActivity.this.returnToMessageId, 0, true, ChatActivity.this.returnToLoadIndex, false);
              return;
            }
            ChatActivity.this.scrollToLastMessage(true);
          }
        });
        this.mentiondownButton = new FrameLayout(paramContext);
        this.mentiondownButton.setVisibility(4);
        this.contentView.addView(this.mentiondownButton, LayoutHelper.createFrame(46, 59.0F, 85, 0.0F, 0.0F, 7.0F, 5.0F));
        this.mentiondownButton.setOnClickListener(new View.OnClickListener()
        {
          private void loadLastUnreadMention()
          {
            ChatActivity.access$602(ChatActivity.this, true);
            if (ChatActivity.this.hasAllMentionsLocal)
            {
              MessagesStorage.getInstance(ChatActivity.this.currentAccount).getUnreadMention(ChatActivity.this.dialog_id, new MessagesStorage.IntCallback()
              {
                public void run(int paramAnonymous2Int)
                {
                  if (paramAnonymous2Int == 0)
                  {
                    ChatActivity.access$14602(ChatActivity.this, false);
                    ChatActivity.28.this.loadLastUnreadMention();
                    return;
                  }
                  ChatActivity.this.scrollToMessageId(paramAnonymous2Int, 0, false, 0, false);
                }
              });
              return;
            }
            final MessagesStorage localMessagesStorage = MessagesStorage.getInstance(ChatActivity.this.currentAccount);
            TLRPC.TL_messages_getUnreadMentions localTL_messages_getUnreadMentions = new TLRPC.TL_messages_getUnreadMentions();
            localTL_messages_getUnreadMentions.peer = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputPeer((int)ChatActivity.this.dialog_id);
            localTL_messages_getUnreadMentions.limit = 1;
            localTL_messages_getUnreadMentions.add_offset = (ChatActivity.this.newMentionsCount - 1);
            ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest(localTL_messages_getUnreadMentions, new RequestDelegate()
            {
              public void run(final TLObject paramAnonymous2TLObject, final TLRPC.TL_error paramAnonymous2TL_error)
              {
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    Object localObject = (TLRPC.messages_Messages)paramAnonymous2TLObject;
                    if ((paramAnonymous2TL_error != null) || (((TLRPC.messages_Messages)localObject).messages.isEmpty()))
                    {
                      if (localObject != null) {
                        ChatActivity.access$15102(ChatActivity.this, ((TLRPC.messages_Messages)localObject).count);
                      }
                      for (;;)
                      {
                        ChatActivity.28.2.this.val$messagesStorage.resetMentionsCount(ChatActivity.this.dialog_id, ChatActivity.this.newMentionsCount);
                        if (ChatActivity.this.newMentionsCount != 0) {
                          break;
                        }
                        ChatActivity.access$14602(ChatActivity.this, true);
                        ChatActivity.this.showMentiondownButton(false, true);
                        return;
                        ChatActivity.access$15102(ChatActivity.this, 0);
                      }
                      ChatActivity.this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(ChatActivity.this.newMentionsCount) }));
                      ChatActivity.28.this.loadLastUnreadMention();
                      return;
                    }
                    int i = ((TLRPC.Message)((TLRPC.messages_Messages)localObject).messages.get(0)).id;
                    long l2 = i;
                    long l1 = l2;
                    if (ChatObject.isChannel(ChatActivity.this.currentChat)) {
                      l1 = l2 | ChatActivity.this.currentChat.id << 32;
                    }
                    localObject = (MessageObject)ChatActivity.this.messagesDict[0].get(i);
                    ChatActivity.28.2.this.val$messagesStorage.markMessageAsMention(l1);
                    if (localObject != null)
                    {
                      ((MessageObject)localObject).messageOwner.media_unread = true;
                      ((MessageObject)localObject).messageOwner.mentioned = true;
                    }
                    ChatActivity.this.scrollToMessageId(i, 0, false, 0, false);
                  }
                });
              }
            });
          }
          
          public void onClick(View paramAnonymousView)
          {
            loadLastUnreadMention();
          }
        });
        this.mentiondownButton.setOnLongClickListener(new View.OnLongClickListener()
        {
          public boolean onLongClick(View paramAnonymousView)
          {
            int i = 0;
            while (i < ChatActivity.this.messages.size())
            {
              paramAnonymousView = (MessageObject)ChatActivity.this.messages.get(i);
              if ((paramAnonymousView.messageOwner.mentioned) && (!paramAnonymousView.isContentUnread())) {
                paramAnonymousView.setContentIsRead();
              }
              i += 1;
            }
            ChatActivity.access$15102(ChatActivity.this, 0);
            MessagesStorage.getInstance(ChatActivity.this.currentAccount).resetMentionsCount(ChatActivity.this.dialog_id, ChatActivity.this.newMentionsCount);
            ChatActivity.access$14602(ChatActivity.this, true);
            ChatActivity.this.showMentiondownButton(false, true);
            paramAnonymousView = new TLRPC.TL_messages_readMentions();
            paramAnonymousView.peer = MessagesController.getInstance(ChatActivity.this.currentAccount).getInputPeer((int)ChatActivity.this.dialog_id);
            ConnectionsManager.getInstance(ChatActivity.this.currentAccount).sendRequest(paramAnonymousView, new RequestDelegate()
            {
              public void run(TLObject paramAnonymous2TLObject, TLRPC.TL_error paramAnonymous2TL_error) {}
            });
            return true;
          }
        });
        if (!this.isBroadcast)
        {
          this.mentionContainer = new FrameLayout(paramContext)
          {
            public void onDraw(Canvas paramAnonymousCanvas)
            {
              if (ChatActivity.this.mentionListView.getChildCount() <= 0) {
                return;
              }
              int j;
              if (ChatActivity.this.mentionLayoutManager.getReverseLayout())
              {
                i = ChatActivity.this.mentionListViewScrollOffsetY + AndroidUtilities.dp(2.0F);
                j = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, i + j, getMeasuredWidth(), i);
                Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
                paramAnonymousCanvas.drawRect(0.0F, 0.0F, getMeasuredWidth(), i, Theme.chat_composeBackgroundPaint);
                return;
              }
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()) && (ChatActivity.this.mentionsAdapter.getBotContextSwitch() == null)) {}
              for (int i = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(4.0F);; i = ChatActivity.this.mentionListViewScrollOffsetY - AndroidUtilities.dp(2.0F))
              {
                j = i + Theme.chat_composeShadowDrawable.getIntrinsicHeight();
                Theme.chat_composeShadowDrawable.setBounds(0, i, getMeasuredWidth(), j);
                Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
                paramAnonymousCanvas.drawRect(0.0F, j, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
                return;
              }
            }
            
            public void requestLayout()
            {
              if (ChatActivity.this.mentionListViewIgnoreLayout) {
                return;
              }
              super.requestLayout();
            }
          };
          this.mentionContainer.setVisibility(8);
          this.mentionContainer.setWillNotDraw(false);
          this.contentView.addView(this.mentionContainer, LayoutHelper.createFrame(-1, 110, 83));
          this.mentionListView = new RecyclerListView(paramContext)
          {
            private int lastHeight;
            private int lastWidth;
            
            public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
            {
              if (ChatActivity.this.mentionLayoutManager.getReverseLayout()) {
                if ((ChatActivity.this.mentionListViewIsScrolling) || (ChatActivity.this.mentionListViewScrollOffsetY == 0) || (paramAnonymousMotionEvent.getY() <= ChatActivity.this.mentionListViewScrollOffsetY)) {
                  break label87;
                }
              }
              label87:
              boolean bool;
              do
              {
                do
                {
                  return false;
                } while ((!ChatActivity.this.mentionListViewIsScrolling) && (ChatActivity.this.mentionListViewScrollOffsetY != 0) && (paramAnonymousMotionEvent.getY() < ChatActivity.this.mentionListViewScrollOffsetY));
                bool = StickerPreviewViewer.getInstance().onInterceptTouchEvent(paramAnonymousMotionEvent, ChatActivity.this.mentionListView, 0, null);
              } while ((!super.onInterceptTouchEvent(paramAnonymousMotionEvent)) && (!bool));
              return true;
            }
            
            protected void onLayout(boolean paramAnonymousBoolean, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3, int paramAnonymousInt4)
            {
              int n = paramAnonymousInt3 - paramAnonymousInt1;
              int i1 = paramAnonymousInt4 - paramAnonymousInt2;
              int k = -1;
              int m = 0;
              int j = k;
              int i = m;
              if (!ChatActivity.this.mentionLayoutManager.getReverseLayout())
              {
                j = k;
                i = m;
                if (ChatActivity.this.mentionListView != null)
                {
                  j = k;
                  i = m;
                  if (ChatActivity.this.mentionListViewLastViewPosition >= 0)
                  {
                    j = k;
                    i = m;
                    if (n == this.lastWidth)
                    {
                      j = k;
                      i = m;
                      if (i1 - this.lastHeight != 0)
                      {
                        j = ChatActivity.this.mentionListViewLastViewPosition;
                        i = ChatActivity.this.mentionListViewLastViewTop + i1 - this.lastHeight - getPaddingTop();
                      }
                    }
                  }
                }
              }
              super.onLayout(paramAnonymousBoolean, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
              if (j != -1)
              {
                ChatActivity.access$8502(ChatActivity.this, true);
                if ((!ChatActivity.this.mentionsAdapter.isBotContext()) || (!ChatActivity.this.mentionsAdapter.isMediaLayout())) {
                  break label247;
                }
                ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(j, i);
              }
              for (;;)
              {
                super.onLayout(false, paramAnonymousInt1, paramAnonymousInt2, paramAnonymousInt3, paramAnonymousInt4);
                ChatActivity.access$8502(ChatActivity.this, false);
                this.lastHeight = i1;
                this.lastWidth = n;
                ChatActivity.this.mentionListViewUpdateLayout();
                return;
                label247:
                ChatActivity.this.mentionLayoutManager.scrollToPositionWithOffset(j, i);
              }
            }
            
            public boolean onTouchEvent(MotionEvent paramAnonymousMotionEvent)
            {
              if (ChatActivity.this.mentionLayoutManager.getReverseLayout())
              {
                if ((ChatActivity.this.mentionListViewIsScrolling) || (ChatActivity.this.mentionListViewScrollOffsetY == 0) || (paramAnonymousMotionEvent.getY() <= ChatActivity.this.mentionListViewScrollOffsetY)) {}
              }
              else {
                while ((!ChatActivity.this.mentionListViewIsScrolling) && (ChatActivity.this.mentionListViewScrollOffsetY != 0) && (paramAnonymousMotionEvent.getY() < ChatActivity.this.mentionListViewScrollOffsetY)) {
                  return false;
                }
              }
              return super.onTouchEvent(paramAnonymousMotionEvent);
            }
            
            public void requestLayout()
            {
              if (ChatActivity.this.mentionListViewIgnoreLayout) {
                return;
              }
              super.requestLayout();
            }
          };
          this.mentionListView.setOnTouchListener(new View.OnTouchListener()
          {
            public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
            {
              return StickerPreviewViewer.getInstance().onTouch(paramAnonymousMotionEvent, ChatActivity.this.mentionListView, 0, ChatActivity.this.mentionsOnItemClickListener, null);
            }
          });
          this.mentionListView.setTag(Integer.valueOf(2));
          this.mentionLayoutManager = new LinearLayoutManager(paramContext)
          {
            public boolean supportsPredictiveItemAnimations()
            {
              return false;
            }
          };
          this.mentionLayoutManager.setOrientation(1);
          this.mentionGridLayoutManager = new ExtendedGridLayoutManager(paramContext, 100)
          {
            private Size size = new Size();
            
            protected int getFlowItemCount()
            {
              if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                return getItemCount() - 1;
              }
              return super.getFlowItemCount();
            }
            
            protected Size getSizeForItem(int paramAnonymousInt)
            {
              float f2 = 100.0F;
              int i = paramAnonymousInt;
              if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                i = paramAnonymousInt + 1;
              }
              Object localObject1 = ChatActivity.this.mentionsAdapter.getItem(i);
              Object localObject2;
              float f1;
              if ((localObject1 instanceof TLRPC.BotInlineResult))
              {
                localObject1 = (TLRPC.BotInlineResult)localObject1;
                if (((TLRPC.BotInlineResult)localObject1).document == null) {
                  break label229;
                }
                localObject2 = this.size;
                if (((TLRPC.BotInlineResult)localObject1).document.thumb == null) {
                  break label216;
                }
                f1 = ((TLRPC.BotInlineResult)localObject1).document.thumb.w;
                ((Size)localObject2).width = f1;
                localObject2 = this.size;
                f1 = f2;
                if (((TLRPC.BotInlineResult)localObject1).document.thumb != null) {
                  f1 = ((TLRPC.BotInlineResult)localObject1).document.thumb.h;
                }
                ((Size)localObject2).height = f1;
                paramAnonymousInt = 0;
                label137:
                if (paramAnonymousInt < ((TLRPC.BotInlineResult)localObject1).document.attributes.size())
                {
                  localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).document.attributes.get(paramAnonymousInt);
                  if ((!(localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) && (!(localObject2 instanceof TLRPC.TL_documentAttributeVideo))) {
                    break label222;
                  }
                  this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                  this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                }
              }
              label216:
              label222:
              label229:
              label321:
              label415:
              for (;;)
              {
                return this.size;
                f1 = 100.0F;
                break;
                paramAnonymousInt += 1;
                break label137;
                if (((TLRPC.BotInlineResult)localObject1).content != null)
                {
                  paramAnonymousInt = 0;
                  for (;;)
                  {
                    if (paramAnonymousInt >= ((TLRPC.BotInlineResult)localObject1).content.attributes.size()) {
                      break label321;
                    }
                    localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).content.attributes.get(paramAnonymousInt);
                    if (((localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) || ((localObject2 instanceof TLRPC.TL_documentAttributeVideo)))
                    {
                      this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                      this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                      break;
                    }
                    paramAnonymousInt += 1;
                  }
                }
                else if (((TLRPC.BotInlineResult)localObject1).thumb != null)
                {
                  paramAnonymousInt = 0;
                  for (;;)
                  {
                    if (paramAnonymousInt >= ((TLRPC.BotInlineResult)localObject1).content.attributes.size()) {
                      break label415;
                    }
                    localObject2 = (TLRPC.DocumentAttribute)((TLRPC.BotInlineResult)localObject1).content.attributes.get(paramAnonymousInt);
                    if (((localObject2 instanceof TLRPC.TL_documentAttributeImageSize)) || ((localObject2 instanceof TLRPC.TL_documentAttributeVideo)))
                    {
                      this.size.width = ((TLRPC.DocumentAttribute)localObject2).w;
                      this.size.height = ((TLRPC.DocumentAttribute)localObject2).h;
                      break;
                    }
                    paramAnonymousInt += 1;
                  }
                }
              }
            }
          };
          this.mentionGridLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup()
          {
            public int getSpanSize(int paramAnonymousInt)
            {
              if ((ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt) instanceof TLRPC.TL_inlineBotSwitchPM)) {
                return 100;
              }
              int i = paramAnonymousInt;
              if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() != null) {
                i = paramAnonymousInt - 1;
              }
              return ChatActivity.this.mentionGridLayoutManager.getSpanSizeForItem(i);
            }
          });
          this.mentionListView.addItemDecoration(new RecyclerView.ItemDecoration()
          {
            public void getItemOffsets(android.graphics.Rect paramAnonymousRect, View paramAnonymousView, RecyclerView paramAnonymousRecyclerView, RecyclerView.State paramAnonymousState)
            {
              int j = 0;
              paramAnonymousRect.left = 0;
              paramAnonymousRect.right = 0;
              paramAnonymousRect.top = 0;
              paramAnonymousRect.bottom = 0;
              if (paramAnonymousRecyclerView.getLayoutManager() == ChatActivity.this.mentionGridLayoutManager)
              {
                i = paramAnonymousRecyclerView.getChildAdapterPosition(paramAnonymousView);
                if (ChatActivity.this.mentionsAdapter.getBotContextSwitch() == null) {
                  break label126;
                }
                if (i != 0) {}
              }
              else
              {
                return;
              }
              int k = i - 1;
              int i = k;
              if (!ChatActivity.this.mentionGridLayoutManager.isFirstRow(k))
              {
                paramAnonymousRect.top = AndroidUtilities.dp(2.0F);
                i = k;
              }
              if (ChatActivity.this.mentionGridLayoutManager.isLastInRow(i)) {}
              for (i = j;; i = AndroidUtilities.dp(2.0F))
              {
                paramAnonymousRect.right = i;
                return;
                label126:
                paramAnonymousRect.top = AndroidUtilities.dp(2.0F);
                break;
              }
            }
          });
          this.mentionListView.setItemAnimator(null);
          this.mentionListView.setLayoutAnimation(null);
          this.mentionListView.setClipToPadding(false);
          this.mentionListView.setLayoutManager(this.mentionLayoutManager);
          this.mentionListView.setOverScrollMode(2);
          this.mentionContainer.addView(this.mentionListView, LayoutHelper.createFrame(-1, -1.0F));
          localObject2 = this.mentionListView;
          localObject3 = new MentionsAdapter(paramContext, false, this.dialog_id, new MentionsAdapter.MentionsAdapterDelegate()
          {
            public void needChangePanelVisibility(boolean paramAnonymousBoolean)
            {
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
              {
                ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionGridLayoutManager);
                boolean bool = paramAnonymousBoolean;
                if (paramAnonymousBoolean)
                {
                  bool = paramAnonymousBoolean;
                  if (ChatActivity.this.bottomOverlay.getVisibility() == 0) {
                    bool = false;
                  }
                }
                if (!bool) {
                  break label515;
                }
                if (ChatActivity.this.mentionListAnimation != null)
                {
                  ChatActivity.this.mentionListAnimation.cancel();
                  ChatActivity.access$16502(ChatActivity.this, null);
                }
                if (ChatActivity.this.mentionContainer.getVisibility() != 0) {
                  break label144;
                }
                ChatActivity.this.mentionContainer.setAlpha(1.0F);
              }
              label144:
              label515:
              do
              {
                return;
                ChatActivity.this.mentionListView.setLayoutManager(ChatActivity.this.mentionLayoutManager);
                break;
                if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout())) {
                  ChatActivity.this.mentionGridLayoutManager.scrollToPositionWithOffset(0, 10000);
                }
                while ((ChatActivity.this.allowStickersPanel) && ((!ChatActivity.this.mentionsAdapter.isBotContext()) || (ChatActivity.this.allowContextBotPanel) || (ChatActivity.this.allowContextBotPanelSecond)))
                {
                  if ((ChatActivity.this.currentEncryptedChat != null) && (ChatActivity.this.mentionsAdapter.isBotContext()))
                  {
                    SharedPreferences localSharedPreferences = MessagesController.getGlobalMainSettings();
                    if (!localSharedPreferences.getBoolean("secretbot", false))
                    {
                      AlertDialog.Builder localBuilder = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                      localBuilder.setTitle(LocaleController.getString("AppName", 2131492981));
                      localBuilder.setMessage(LocaleController.getString("SecretChatContextBotAlert", 2131494322));
                      localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
                      ChatActivity.this.showDialog(localBuilder.create());
                      localSharedPreferences.edit().putBoolean("secretbot", true).commit();
                    }
                  }
                  ChatActivity.this.mentionContainer.setVisibility(0);
                  ChatActivity.this.mentionContainer.setTag(null);
                  ChatActivity.access$16502(ChatActivity.this, new AnimatorSet());
                  ChatActivity.this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, "alpha", new float[] { 0.0F, 1.0F }) });
                  ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
                  {
                    public void onAnimationCancel(Animator paramAnonymous2Animator)
                    {
                      if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                        ChatActivity.access$16502(ChatActivity.this, null);
                      }
                    }
                    
                    public void onAnimationEnd(Animator paramAnonymous2Animator)
                    {
                      if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                        ChatActivity.access$16502(ChatActivity.this, null);
                      }
                    }
                  });
                  ChatActivity.this.mentionListAnimation.setDuration(200L);
                  ChatActivity.this.mentionListAnimation.start();
                  return;
                  ChatActivity.this.mentionLayoutManager.scrollToPositionWithOffset(0, 10000);
                }
                ChatActivity.this.mentionContainer.setAlpha(1.0F);
                ChatActivity.this.mentionContainer.setVisibility(4);
                return;
                if (ChatActivity.this.mentionListAnimation != null)
                {
                  ChatActivity.this.mentionListAnimation.cancel();
                  ChatActivity.access$16502(ChatActivity.this, null);
                }
              } while (ChatActivity.this.mentionContainer.getVisibility() == 8);
              if (ChatActivity.this.allowStickersPanel)
              {
                ChatActivity.access$16502(ChatActivity.this, new AnimatorSet());
                ChatActivity.this.mentionListAnimation.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.mentionContainer, "alpha", new float[] { 0.0F }) });
                ChatActivity.this.mentionListAnimation.addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationCancel(Animator paramAnonymous2Animator)
                  {
                    if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator))) {
                      ChatActivity.access$16502(ChatActivity.this, null);
                    }
                  }
                  
                  public void onAnimationEnd(Animator paramAnonymous2Animator)
                  {
                    if ((ChatActivity.this.mentionListAnimation != null) && (ChatActivity.this.mentionListAnimation.equals(paramAnonymous2Animator)))
                    {
                      ChatActivity.this.mentionContainer.setVisibility(8);
                      ChatActivity.this.mentionContainer.setTag(null);
                      ChatActivity.access$16502(ChatActivity.this, null);
                    }
                  }
                });
                ChatActivity.this.mentionListAnimation.setDuration(200L);
                ChatActivity.this.mentionListAnimation.start();
                return;
              }
              ChatActivity.this.mentionContainer.setTag(null);
              ChatActivity.this.mentionContainer.setVisibility(8);
            }
            
            public void onContextClick(TLRPC.BotInlineResult paramAnonymousBotInlineResult)
            {
              if ((ChatActivity.this.getParentActivity() == null) || (paramAnonymousBotInlineResult.content == null)) {
                return;
              }
              if ((paramAnonymousBotInlineResult.type.equals("video")) || (paramAnonymousBotInlineResult.type.equals("web_player_video")))
              {
                int[] arrayOfInt = MessageObject.getInlineResultWidthAndHeight(paramAnonymousBotInlineResult);
                Activity localActivity = ChatActivity.this.getParentActivity();
                if (paramAnonymousBotInlineResult.title != null) {}
                for (String str = paramAnonymousBotInlineResult.title;; str = "")
                {
                  EmbedBottomSheet.show(localActivity, str, paramAnonymousBotInlineResult.description, paramAnonymousBotInlineResult.content.url, paramAnonymousBotInlineResult.content.url, arrayOfInt[0], arrayOfInt[1]);
                  return;
                }
              }
              Browser.openUrl(ChatActivity.this.getParentActivity(), paramAnonymousBotInlineResult.content.url);
            }
            
            public void onContextSearch(boolean paramAnonymousBoolean)
            {
              if (ChatActivity.this.chatActivityEnterView != null)
              {
                ChatActivity.this.chatActivityEnterView.setCaption(ChatActivity.this.mentionsAdapter.getBotCaption());
                ChatActivity.this.chatActivityEnterView.showContextProgress(paramAnonymousBoolean);
              }
            }
          });
          this.mentionsAdapter = ((MentionsAdapter)localObject3);
          ((RecyclerListView)localObject2).setAdapter((RecyclerView.Adapter)localObject3);
          if ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup))) {
            this.mentionsAdapter.setBotInfo(this.botInfo);
          }
          this.mentionsAdapter.setParentFragment(this);
          this.mentionsAdapter.setChatInfo(this.info);
          localObject2 = this.mentionsAdapter;
          if (this.currentChat == null) {
            break label7418;
          }
          bool1 = true;
          ((MentionsAdapter)localObject2).setNeedUsernames(bool1);
          localObject2 = this.mentionsAdapter;
          if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
            break label7423;
          }
          bool1 = true;
          ((MentionsAdapter)localObject2).setNeedBotContext(bool1);
          localObject2 = this.mentionsAdapter;
          if (this.currentChat == null) {
            break label7428;
          }
          i = this.botsCount;
          ((MentionsAdapter)localObject2).setBotsCount(i);
          localObject2 = this.mentionListView;
          localObject3 = new RecyclerListView.OnItemClickListener()
          {
            public void onItemClick(View paramAnonymousView, int paramAnonymousInt)
            {
              if (ChatActivity.this.mentionsAdapter.isBannedInline()) {}
              int i;
              int j;
              label469:
              do
              {
                do
                {
                  do
                  {
                    do
                    {
                      return;
                      paramAnonymousView = ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt);
                      i = ChatActivity.this.mentionsAdapter.getResultStartPosition();
                      j = ChatActivity.this.mentionsAdapter.getResultLength();
                      if (!(paramAnonymousView instanceof TLRPC.User)) {
                        break label469;
                      }
                      if ((!ChatActivity.this.searchingForUser) || (ChatActivity.this.searchContainer.getVisibility() != 0)) {
                        break;
                      }
                      ChatActivity.access$5102(ChatActivity.this, (TLRPC.User)paramAnonymousView);
                    } while (ChatActivity.this.searchingUserMessages == null);
                    localObject = ChatActivity.this.searchingUserMessages.first_name;
                    paramAnonymousView = (View)localObject;
                    if (TextUtils.isEmpty((CharSequence)localObject)) {
                      paramAnonymousView = ChatActivity.this.searchingUserMessages.last_name;
                    }
                    ChatActivity.access$4802(ChatActivity.this, false);
                    localObject = LocaleController.getString("SearchFrom", 2131494300);
                    paramAnonymousView = new SpannableString((String)localObject + " " + paramAnonymousView);
                    paramAnonymousView.setSpan(new ForegroundColorSpan(Theme.getColor("actionBarDefaultSubtitle")), ((String)localObject).length() + 1, paramAnonymousView.length(), 33);
                    ChatActivity.this.searchItem.setSearchFieldCaption(paramAnonymousView);
                    ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(null, 0, null, false);
                    ChatActivity.this.searchItem.getSearchField().setHint(null);
                    ChatActivity.this.searchItem.clearSearchText();
                    DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat("", ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 0, ChatActivity.this.searchingUserMessages);
                    return;
                    paramAnonymousView = (TLRPC.User)paramAnonymousView;
                  } while (paramAnonymousView == null);
                  if (paramAnonymousView.username != null)
                  {
                    ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, "@" + paramAnonymousView.username + " ", false);
                    return;
                  }
                  Object localObject = UserObject.getFirstName(paramAnonymousView);
                  localObject = new SpannableString((String)localObject + " ");
                  ((Spannable)localObject).setSpan(new URLSpanUserMention("" + paramAnonymousView.id, 1), 0, ((Spannable)localObject).length(), 33);
                  ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, (CharSequence)localObject, false);
                  return;
                  if ((paramAnonymousView instanceof String))
                  {
                    if (ChatActivity.this.mentionsAdapter.isBotCommands())
                    {
                      SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage((String)paramAnonymousView, ChatActivity.this.dialog_id, ChatActivity.this.replyingMessageObject, null, false, null, null, null);
                      ChatActivity.this.chatActivityEnterView.setFieldText("");
                      ChatActivity.this.showReplyPanel(false, null, null, null, false);
                      return;
                    }
                    ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, paramAnonymousView + " ", false);
                    return;
                  }
                  if (!(paramAnonymousView instanceof TLRPC.BotInlineResult)) {
                    break;
                  }
                } while (ChatActivity.this.chatActivityEnterView.getFieldText() == null);
                paramAnonymousView = (TLRPC.BotInlineResult)paramAnonymousView;
                if (((paramAnonymousView.type.equals("photo")) && ((paramAnonymousView.photo != null) || (paramAnonymousView.content != null))) || ((paramAnonymousView.type.equals("gif")) && ((paramAnonymousView.document != null) || (paramAnonymousView.content != null))) || ((paramAnonymousView.type.equals("video")) && (paramAnonymousView.document != null)))
                {
                  paramAnonymousView = ChatActivity.access$302(ChatActivity.this, new ArrayList(ChatActivity.this.mentionsAdapter.getSearchResultBotContext()));
                  PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                  PhotoViewer.getInstance().openPhotoForSelect(paramAnonymousView, ChatActivity.this.mentionsAdapter.getItemPosition(paramAnonymousInt), 3, ChatActivity.this.botContextProvider, null);
                  return;
                }
                ChatActivity.this.sendBotInlineResult(paramAnonymousView);
                return;
                if ((paramAnonymousView instanceof TLRPC.TL_inlineBotSwitchPM))
                {
                  ChatActivity.this.processInlineBotContextPM((TLRPC.TL_inlineBotSwitchPM)paramAnonymousView);
                  return;
                }
              } while (!(paramAnonymousView instanceof EmojiSuggestion));
              paramAnonymousView = ((EmojiSuggestion)paramAnonymousView).emoji;
              ChatActivity.this.chatActivityEnterView.addEmojiToRecent(paramAnonymousView);
              ChatActivity.this.chatActivityEnterView.replaceWithText(i, j, paramAnonymousView, true);
            }
          };
          this.mentionsOnItemClickListener = ((RecyclerListView.OnItemClickListener)localObject3);
          ((RecyclerListView)localObject2).setOnItemClickListener((RecyclerListView.OnItemClickListener)localObject3);
          this.mentionListView.setOnItemLongClickListener(new RecyclerListView.OnItemLongClickListener()
          {
            public boolean onItemClick(View paramAnonymousView, int paramAnonymousInt)
            {
              boolean bool2 = false;
              if ((ChatActivity.this.getParentActivity() == null) || (!ChatActivity.this.mentionsAdapter.isLongClickEnabled())) {}
              do
              {
                do
                {
                  return false;
                  localObject = ChatActivity.this.mentionsAdapter.getItem(paramAnonymousInt);
                } while (!(localObject instanceof String));
                if (!ChatActivity.this.mentionsAdapter.isBotCommands()) {
                  break;
                }
              } while (!URLSpanBotCommand.enabled);
              ChatActivity.this.chatActivityEnterView.setFieldText("");
              paramAnonymousView = ChatActivity.this.chatActivityEnterView;
              Object localObject = (String)localObject;
              boolean bool1 = bool2;
              if (ChatActivity.this.currentChat != null)
              {
                bool1 = bool2;
                if (ChatActivity.this.currentChat.megagroup) {
                  bool1 = true;
                }
              }
              paramAnonymousView.setCommand(null, (String)localObject, true, bool1);
              return true;
              paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
              paramAnonymousView.setTitle(LocaleController.getString("AppName", 2131492981));
              paramAnonymousView.setMessage(LocaleController.getString("ClearSearch", 2131493264));
              paramAnonymousView.setPositiveButton(LocaleController.getString("ClearButton", 2131493257).toUpperCase(), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                {
                  ChatActivity.this.mentionsAdapter.clearRecentHashtags();
                }
              });
              paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
              ChatActivity.this.showDialog(paramAnonymousView.create());
              return true;
            }
          });
          this.mentionListView.setOnScrollListener(new RecyclerView.OnScrollListener()
          {
            public void onScrollStateChanged(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt)
            {
              boolean bool = true;
              paramAnonymousRecyclerView = ChatActivity.this;
              if (paramAnonymousInt == 1) {}
              for (;;)
              {
                ChatActivity.access$15902(paramAnonymousRecyclerView, bool);
                return;
                bool = false;
              }
            }
            
            public void onScrolled(RecyclerView paramAnonymousRecyclerView, int paramAnonymousInt1, int paramAnonymousInt2)
            {
              if ((ChatActivity.this.mentionsAdapter.isBotContext()) && (ChatActivity.this.mentionsAdapter.isMediaLayout()))
              {
                paramAnonymousInt1 = ChatActivity.this.mentionGridLayoutManager.findLastVisibleItemPosition();
                if (paramAnonymousInt1 != -1) {
                  break label96;
                }
              }
              label96:
              for (paramAnonymousInt2 = 0;; paramAnonymousInt2 = paramAnonymousInt1)
              {
                if ((paramAnonymousInt2 > 0) && (paramAnonymousInt1 > ChatActivity.this.mentionsAdapter.getItemCount() - 5)) {
                  ChatActivity.this.mentionsAdapter.searchForContextBotForNextOffset();
                }
                ChatActivity.this.mentionListViewUpdateLayout();
                return;
                paramAnonymousInt1 = ChatActivity.this.mentionLayoutManager.findLastVisibleItemPosition();
                break;
              }
            }
          });
        }
        this.pagedownButtonImage = new ImageView(paramContext);
        this.pagedownButtonImage.setImageResource(2131165563);
        this.pagedownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.pagedownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonIcon"), PorterDuff.Mode.MULTIPLY));
        this.pagedownButtonImage.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        localObject2 = Theme.createCircleDrawable(AndroidUtilities.dp(42.0F), Theme.getColor("chat_goDownButton"));
        localObject3 = paramContext.getResources().getDrawable(2131165564).mutate();
        ((Drawable)localObject3).setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonShadow"), PorterDuff.Mode.MULTIPLY));
        localObject2 = new CombinedDrawable((Drawable)localObject3, (Drawable)localObject2, 0, 0);
        ((CombinedDrawable)localObject2).setIconSize(AndroidUtilities.dp(42.0F), AndroidUtilities.dp(42.0F));
        this.pagedownButtonImage.setBackgroundDrawable((Drawable)localObject2);
        this.pagedownButton.addView(this.pagedownButtonImage, LayoutHelper.createFrame(46, 46, 81));
        this.pagedownButtonCounter = new TextView(paramContext);
        this.pagedownButtonCounter.setVisibility(4);
        this.pagedownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.pagedownButtonCounter.setTextSize(1, 13.0F);
        this.pagedownButtonCounter.setTextColor(Theme.getColor("chat_goDownButtonCounter"));
        this.pagedownButtonCounter.setGravity(17);
        this.pagedownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(11.5F), Theme.getColor("chat_goDownButtonCounterBackground")));
        this.pagedownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0F));
        this.pagedownButtonCounter.setPadding(AndroidUtilities.dp(8.0F), 0, AndroidUtilities.dp(8.0F), AndroidUtilities.dp(1.0F));
        this.pagedownButton.addView(this.pagedownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        this.mentiondownButtonImage = new ImageView(paramContext);
        this.mentiondownButtonImage.setImageResource(2131165489);
        this.mentiondownButtonImage.setScaleType(ImageView.ScaleType.CENTER);
        this.mentiondownButtonImage.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonIcon"), PorterDuff.Mode.MULTIPLY));
        this.mentiondownButtonImage.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        localObject2 = Theme.createCircleDrawable(AndroidUtilities.dp(42.0F), Theme.getColor("chat_goDownButton"));
        localObject3 = paramContext.getResources().getDrawable(2131165564).mutate();
        ((Drawable)localObject3).setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_goDownButtonShadow"), PorterDuff.Mode.MULTIPLY));
        localObject2 = new CombinedDrawable((Drawable)localObject3, (Drawable)localObject2, 0, 0);
        ((CombinedDrawable)localObject2).setIconSize(AndroidUtilities.dp(42.0F), AndroidUtilities.dp(42.0F));
        this.mentiondownButtonImage.setBackgroundDrawable((Drawable)localObject2);
        this.mentiondownButton.addView(this.mentiondownButtonImage, LayoutHelper.createFrame(46, 46, 83));
        this.mentiondownButtonCounter = new TextView(paramContext);
        this.mentiondownButtonCounter.setVisibility(4);
        this.mentiondownButtonCounter.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.mentiondownButtonCounter.setTextSize(1, 13.0F);
        this.mentiondownButtonCounter.setTextColor(Theme.getColor("chat_goDownButtonCounter"));
        this.mentiondownButtonCounter.setGravity(17);
        this.mentiondownButtonCounter.setBackgroundDrawable(Theme.createRoundRectDrawable(AndroidUtilities.dp(11.5F), Theme.getColor("chat_goDownButtonCounterBackground")));
        this.mentiondownButtonCounter.setMinWidth(AndroidUtilities.dp(23.0F));
        this.mentiondownButtonCounter.setPadding(AndroidUtilities.dp(8.0F), 0, AndroidUtilities.dp(8.0F), AndroidUtilities.dp(1.0F));
        this.mentiondownButton.addView(this.mentiondownButtonCounter, LayoutHelper.createFrame(-2, 23, 49));
        if ((!AndroidUtilities.isTablet()) || (AndroidUtilities.isSmallTablet()))
        {
          localObject2 = this.contentView;
          localObject3 = new FragmentContextView(paramContext, this, true);
          this.fragmentLocationContextView = ((FragmentContextView)localObject3);
          ((SizeNotifierFrameLayout)localObject2).addView((View)localObject3, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
          localObject2 = this.contentView;
          localObject3 = new FragmentContextView(paramContext, this, false);
          this.fragmentContextView = ((FragmentContextView)localObject3);
          ((SizeNotifierFrameLayout)localObject2).addView((View)localObject3, LayoutHelper.createFrame(-1, 39.0F, 51, 0.0F, -36.0F, 0.0F, 0.0F));
          this.fragmentContextView.setAdditionalContextView(this.fragmentLocationContextView);
          this.fragmentLocationContextView.setAdditionalContextView(this.fragmentContextView);
        }
        this.contentView.addView(this.actionBar);
        this.overlayView = new View(paramContext);
        this.overlayView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            if (paramAnonymousMotionEvent.getAction() == 0) {
              ChatActivity.this.checkRecordLocked();
            }
            ChatActivity.this.overlayView.getParent().requestDisallowInterceptTouchEvent(true);
            return true;
          }
        });
        this.contentView.addView(this.overlayView, LayoutHelper.createFrame(-1, -1, 51));
        this.overlayView.setVisibility(8);
        this.instantCameraView = new InstantCameraView(paramContext, this);
        this.contentView.addView(this.instantCameraView, LayoutHelper.createFrame(-1, -1, 51));
        this.chatActivityEnterView = new ChatActivityEnterView(getParentActivity(), this.contentView, this, true);
        this.chatActivityEnterView.setDialogId(this.dialog_id, this.currentAccount);
        this.chatActivityEnterView.setId(1000);
        this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
        localObject2 = this.chatActivityEnterView;
        if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 23)) {
          break label7433;
        }
        bool1 = true;
        if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
          break label7438;
        }
        bool2 = true;
        label5038:
        ((ChatActivityEnterView)localObject2).setAllowStickersAndGifs(bool1, bool2);
        this.contentView.addView(this.chatActivityEnterView, this.contentView.getChildCount() - 1, LayoutHelper.createFrame(-1, -2, 83));
        this.chatActivityEnterView.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate()
        {
          public void didPressedAttachButton()
          {
            ChatActivity.this.openAttachMenu();
          }
          
          public void needChangeVideoPreviewState(int paramAnonymousInt, float paramAnonymousFloat)
          {
            if (ChatActivity.this.instantCameraView != null) {
              ChatActivity.this.instantCameraView.changeVideoPreviewState(paramAnonymousInt, paramAnonymousFloat);
            }
          }
          
          public void needSendTyping()
          {
            MessagesController.getInstance(ChatActivity.this.currentAccount).sendTyping(ChatActivity.this.dialog_id, 0, ChatActivity.this.classGuid);
          }
          
          public void needShowMediaBanHint()
          {
            ChatActivity.this.showMediaBannedHint();
          }
          
          public void needStartRecordAudio(int paramAnonymousInt)
          {
            View localView = ChatActivity.this.overlayView;
            if (paramAnonymousInt == 0) {}
            for (paramAnonymousInt = 8;; paramAnonymousInt = 0)
            {
              localView.setVisibility(paramAnonymousInt);
              return;
            }
          }
          
          public void needStartRecordVideo(int paramAnonymousInt)
          {
            if (ChatActivity.this.instantCameraView != null)
            {
              if (paramAnonymousInt != 0) {
                break label25;
              }
              ChatActivity.this.instantCameraView.showCamera();
            }
            label25:
            do
            {
              return;
              if ((paramAnonymousInt == 1) || (paramAnonymousInt == 3) || (paramAnonymousInt == 4))
              {
                ChatActivity.this.instantCameraView.send(paramAnonymousInt);
                return;
              }
            } while (paramAnonymousInt != 2);
            ChatActivity.this.instantCameraView.cancel();
          }
          
          public void onAttachButtonHidden()
          {
            if (ChatActivity.this.actionBar.isSearchFieldVisible()) {}
            do
            {
              return;
              if (ChatActivity.this.attachItem != null) {
                ChatActivity.this.attachItem.setVisibility(0);
              }
            } while (ChatActivity.this.headerItem == null);
            ChatActivity.this.headerItem.setVisibility(8);
          }
          
          public void onAttachButtonShow()
          {
            if (ChatActivity.this.actionBar.isSearchFieldVisible()) {}
            do
            {
              return;
              if (ChatActivity.this.attachItem != null) {
                ChatActivity.this.attachItem.setVisibility(8);
              }
            } while (ChatActivity.this.headerItem == null);
            ChatActivity.this.headerItem.setVisibility(0);
          }
          
          public void onMessageEditEnd(boolean paramAnonymousBoolean)
          {
            Object localObject;
            if (!paramAnonymousBoolean)
            {
              localObject = ChatActivity.this.mentionsAdapter;
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 46)) {
                break label273;
              }
              paramAnonymousBoolean = true;
              ((MentionsAdapter)localObject).setNeedBotContext(paramAnonymousBoolean);
              ChatActivity.this.chatListView.setOnItemLongClickListener(ChatActivity.this.onItemLongClickListener);
              ChatActivity.this.chatListView.setOnItemClickListener(ChatActivity.this.onItemClickListener);
              ChatActivity.this.chatListView.setClickable(true);
              ChatActivity.this.chatListView.setLongClickable(true);
              ChatActivity.this.actionModeTitleContainer.setVisibility(8);
              ChatActivity.this.selectedMessagesCountTextView.setVisibility(0);
              localObject = ChatActivity.this.chatActivityEnterView;
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 23)) {
                break label278;
              }
              paramAnonymousBoolean = true;
              label164:
              if ((ChatActivity.this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(ChatActivity.this.currentEncryptedChat.layer) < 46)) {
                break label283;
              }
            }
            label273:
            label278:
            label283:
            for (boolean bool = true;; bool = false)
            {
              ((ChatActivityEnterView)localObject).setAllowStickersAndGifs(paramAnonymousBoolean, bool);
              if (ChatActivity.this.editingMessageObjectReqId != 0)
              {
                ConnectionsManager.getInstance(ChatActivity.this.currentAccount).cancelRequest(ChatActivity.this.editingMessageObjectReqId, true);
                ChatActivity.access$18602(ChatActivity.this, 0);
              }
              ChatActivity.this.actionBar.hideActionMode();
              ChatActivity.this.updatePinnedMessageView(true);
              ChatActivity.this.updateBottomOverlay();
              ChatActivity.this.updateVisibleRows();
              return;
              paramAnonymousBoolean = false;
              break;
              paramAnonymousBoolean = false;
              break label164;
            }
          }
          
          public void onMessageSend(CharSequence paramAnonymousCharSequence)
          {
            ChatActivity.this.moveScrollToLastMessage();
            ChatActivity.this.showReplyPanel(false, null, null, null, false);
            if (ChatActivity.this.mentionsAdapter != null) {
              ChatActivity.this.mentionsAdapter.addHashtagsFromMessage(paramAnonymousCharSequence);
            }
          }
          
          public void onPreAudioVideoRecord()
          {
            ChatActivity.this.showVoiceHint(true, false);
          }
          
          public void onStickersExpandedChange()
          {
            ChatActivity.this.checkRaiseSensors();
          }
          
          public void onStickersTab(boolean paramAnonymousBoolean)
          {
            if (ChatActivity.this.emojiButtonRed != null) {
              ChatActivity.this.emojiButtonRed.setVisibility(8);
            }
            ChatActivity localChatActivity = ChatActivity.this;
            if (!paramAnonymousBoolean) {}
            for (paramAnonymousBoolean = true;; paramAnonymousBoolean = false)
            {
              ChatActivity.access$16802(localChatActivity, paramAnonymousBoolean);
              ChatActivity.this.checkContextBotPanel();
              return;
            }
          }
          
          public void onSwitchRecordMode(boolean paramAnonymousBoolean)
          {
            ChatActivity.this.showVoiceHint(false, paramAnonymousBoolean);
          }
          
          public void onTextChanged(final CharSequence paramAnonymousCharSequence, boolean paramAnonymousBoolean)
          {
            if ((ChatActivity.this.startReplyOnTextChange) && (paramAnonymousCharSequence.length() > 0))
            {
              ChatActivity.this.actionBar.getActionBarMenuOnItemClick().onItemClick(19);
              ChatActivity.access$3902(ChatActivity.this, false);
            }
            MediaController localMediaController = MediaController.getInstance();
            if ((!TextUtils.isEmpty(paramAnonymousCharSequence)) || (ChatActivity.this.chatActivityEnterView.isEditingMessage())) {}
            for (boolean bool = true;; bool = false)
            {
              localMediaController.setInputFieldHasText(bool);
              if ((ChatActivity.this.stickersAdapter != null) && (!ChatActivity.this.chatActivityEnterView.isEditingMessage()) && (ChatObject.canSendStickers(ChatActivity.this.currentChat))) {
                ChatActivity.this.stickersAdapter.loadStikersForEmoji(paramAnonymousCharSequence);
              }
              if (ChatActivity.this.mentionsAdapter != null) {
                ChatActivity.this.mentionsAdapter.searchUsernameOrHashtag(paramAnonymousCharSequence.toString(), ChatActivity.this.chatActivityEnterView.getCursorPosition(), ChatActivity.this.messages, false);
              }
              if (ChatActivity.this.waitingForCharaterEnterRunnable != null)
              {
                AndroidUtilities.cancelRunOnUIThread(ChatActivity.this.waitingForCharaterEnterRunnable);
                ChatActivity.access$17802(ChatActivity.this, null);
              }
              if ((ChatObject.canSendEmbed(ChatActivity.this.currentChat)) && (ChatActivity.this.chatActivityEnterView.isMessageWebPageSearchEnabled()) && ((!ChatActivity.this.chatActivityEnterView.isEditingMessage()) || (!ChatActivity.this.chatActivityEnterView.isEditingCaption())))
              {
                if (!paramAnonymousBoolean) {
                  break;
                }
                ChatActivity.this.searchLinks(paramAnonymousCharSequence, true);
              }
              return;
            }
            ChatActivity.access$17802(ChatActivity.this, new Runnable()
            {
              public void run()
              {
                if (this == ChatActivity.this.waitingForCharaterEnterRunnable)
                {
                  ChatActivity.this.searchLinks(paramAnonymousCharSequence, false);
                  ChatActivity.access$17802(ChatActivity.this, null);
                }
              }
            });
            paramAnonymousCharSequence = ChatActivity.this.waitingForCharaterEnterRunnable;
            if (AndroidUtilities.WEB_URL == null) {}
            for (long l = 3000L;; l = 1000L)
            {
              AndroidUtilities.runOnUIThread(paramAnonymousCharSequence, l);
              return;
            }
          }
          
          public void onWindowSizeChanged(int paramAnonymousInt)
          {
            boolean bool = true;
            ChatActivity localChatActivity;
            if (paramAnonymousInt < AndroidUtilities.dp(72.0F) + ActionBar.getCurrentActionBarHeight())
            {
              ChatActivity.access$16602(ChatActivity.this, false);
              if (ChatActivity.this.stickersPanel.getVisibility() == 0) {
                ChatActivity.this.stickersPanel.setVisibility(4);
              }
              if ((ChatActivity.this.mentionContainer != null) && (ChatActivity.this.mentionContainer.getVisibility() == 0)) {
                ChatActivity.this.mentionContainer.setVisibility(4);
              }
              localChatActivity = ChatActivity.this;
              if (ChatActivity.this.chatActivityEnterView.isPopupShowing()) {
                break label231;
              }
            }
            for (;;)
            {
              ChatActivity.access$16702(localChatActivity, bool);
              ChatActivity.this.checkContextBotPanel();
              return;
              ChatActivity.access$16602(ChatActivity.this, true);
              if (ChatActivity.this.stickersPanel.getVisibility() == 4) {
                ChatActivity.this.stickersPanel.setVisibility(0);
              }
              if ((ChatActivity.this.mentionContainer == null) || (ChatActivity.this.mentionContainer.getVisibility() != 4) || ((ChatActivity.this.mentionsAdapter.isBotContext()) && (!ChatActivity.this.allowContextBotPanel) && (!ChatActivity.this.allowContextBotPanelSecond))) {
                break;
              }
              ChatActivity.this.mentionContainer.setVisibility(0);
              ChatActivity.this.mentionContainer.setTag(null);
              break;
              label231:
              bool = false;
            }
          }
        });
        localObject2 = new FrameLayout(paramContext)
        {
          public boolean hasOverlappingRendering()
          {
            return false;
          }
          
          public void setTranslationY(float paramAnonymousFloat)
          {
            super.setTranslationY(paramAnonymousFloat);
            if (ChatActivity.this.chatActivityEnterView != null) {
              ChatActivity.this.chatActivityEnterView.invalidate();
            }
            FrameLayout localFrameLayout;
            if (getVisibility() != 8)
            {
              int i = getLayoutParams().height;
              if (ChatActivity.this.chatListView != null) {
                ChatActivity.this.chatListView.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.progressView != null) {
                ChatActivity.this.progressView.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.mentionContainer != null) {
                ChatActivity.this.mentionContainer.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.pagedownButton != null) {
                ChatActivity.this.pagedownButton.setTranslationY(paramAnonymousFloat);
              }
              if (ChatActivity.this.mentiondownButton != null)
              {
                localFrameLayout = ChatActivity.this.mentiondownButton;
                if (ChatActivity.this.pagedownButton.getVisibility() == 0) {
                  break label163;
                }
              }
            }
            for (;;)
            {
              localFrameLayout.setTranslationY(paramAnonymousFloat);
              return;
              label163:
              paramAnonymousFloat -= AndroidUtilities.dp(72.0F);
            }
          }
          
          public void setVisibility(int paramAnonymousInt)
          {
            float f = 0.0F;
            super.setVisibility(paramAnonymousInt);
            if (paramAnonymousInt == 8)
            {
              if (ChatActivity.this.chatListView != null) {
                ChatActivity.this.chatListView.setTranslationY(0.0F);
              }
              if (ChatActivity.this.progressView != null) {
                ChatActivity.this.progressView.setTranslationY(0.0F);
              }
              if (ChatActivity.this.mentionContainer != null) {
                ChatActivity.this.mentionContainer.setTranslationY(0.0F);
              }
              FrameLayout localFrameLayout;
              if (ChatActivity.this.pagedownButton != null)
              {
                localFrameLayout = ChatActivity.this.pagedownButton;
                if (ChatActivity.this.pagedownButton.getTag() == null) {
                  f = AndroidUtilities.dp(100.0F);
                }
                localFrameLayout.setTranslationY(f);
              }
              if (ChatActivity.this.mentiondownButton != null)
              {
                localFrameLayout = ChatActivity.this.mentiondownButton;
                if (ChatActivity.this.mentiondownButton.getTag() != null) {
                  break label163;
                }
                f = AndroidUtilities.dp(100.0F);
                localFrameLayout.setTranslationY(f);
              }
            }
            return;
            label163:
            if (ChatActivity.this.pagedownButton.getVisibility() == 0) {}
            for (paramAnonymousInt = -AndroidUtilities.dp(72.0F);; paramAnonymousInt = 0)
            {
              f = paramAnonymousInt;
              break;
            }
          }
        };
        this.chatActivityEnterView.addTopView((View)localObject2, 48);
        ((FrameLayout)localObject2).setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.replyingMessageObject != null) {
              ChatActivity.this.scrollToMessageId(ChatActivity.this.replyingMessageObject.getId(), 0, true, 0, false);
            }
          }
        });
        this.replyLineView = new View(paramContext);
        this.replyLineView.setBackgroundColor(Theme.getColor("chat_replyPanelLine"));
        ((FrameLayout)localObject2).addView(this.replyLineView, LayoutHelper.createFrame(-1, 1, 83));
        this.replyIconImageView = new ImageView(paramContext);
        this.replyIconImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_replyPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.replyIconImageView.setScaleType(ImageView.ScaleType.CENTER);
        ((FrameLayout)localObject2).addView(this.replyIconImageView, LayoutHelper.createFrame(52, 46, 51));
        this.replyCloseImageView = new ImageView(paramContext);
        this.replyCloseImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_replyPanelClose"), PorterDuff.Mode.MULTIPLY));
        this.replyCloseImageView.setImageResource(2131165519);
        this.replyCloseImageView.setScaleType(ImageView.ScaleType.CENTER);
        ((FrameLayout)localObject2).addView(this.replyCloseImageView, LayoutHelper.createFrame(52, 46.0F, 53, 0.0F, 0.5F, 0.0F, 0.0F));
        this.replyCloseImageView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.forwardingMessages != null) {
              ChatActivity.this.forwardingMessages.clear();
            }
            ChatActivity.this.showReplyPanel(false, null, null, ChatActivity.this.foundWebPage, true);
          }
        });
        this.replyNameTextView = new SimpleTextView(paramContext);
        this.replyNameTextView.setTextSize(14);
        this.replyNameTextView.setTextColor(Theme.getColor("chat_replyPanelName"));
        this.replyNameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        ((FrameLayout)localObject2).addView(this.replyNameTextView, LayoutHelper.createFrame(-1, 18.0F, 51, 52.0F, 6.0F, 52.0F, 0.0F));
        this.replyObjectTextView = new SimpleTextView(paramContext);
        this.replyObjectTextView.setTextSize(14);
        this.replyObjectTextView.setTextColor(Theme.getColor("chat_replyPanelMessage"));
        ((FrameLayout)localObject2).addView(this.replyObjectTextView, LayoutHelper.createFrame(-1, 18.0F, 51, 52.0F, 24.0F, 52.0F, 0.0F));
        this.replyImageView = new BackupImageView(paramContext);
        ((FrameLayout)localObject2).addView(this.replyImageView, LayoutHelper.createFrame(34, 34.0F, 51, 52.0F, 6.0F, 0.0F, 0.0F));
        this.stickersPanel = new FrameLayout(paramContext);
        this.stickersPanel.setVisibility(8);
        this.contentView.addView(this.stickersPanel, LayoutHelper.createFrame(-2, 81.5F, 83, 0.0F, 0.0F, 0.0F, 38.0F));
        localObject2 = new StickerPreviewViewer.StickerPreviewViewerDelegate()
        {
          public boolean needSend()
          {
            return false;
          }
          
          public void openSet(TLRPC.InputStickerSet paramAnonymousInputStickerSet)
          {
            if (paramAnonymousInputStickerSet == null) {}
            while (ChatActivity.this.getParentActivity() == null) {
              return;
            }
            TLRPC.TL_inputStickerSetID localTL_inputStickerSetID = new TLRPC.TL_inputStickerSetID();
            localTL_inputStickerSetID.access_hash = paramAnonymousInputStickerSet.access_hash;
            localTL_inputStickerSetID.id = paramAnonymousInputStickerSet.id;
            ChatActivity.this.showDialog(new StickersAlert(ChatActivity.this.getParentActivity(), ChatActivity.this, localTL_inputStickerSetID, null, ChatActivity.this.chatActivityEnterView));
          }
          
          public void sendSticker(TLRPC.Document paramAnonymousDocument) {}
        };
        this.stickersListView = new RecyclerListView(paramContext)
        {
          public boolean onInterceptTouchEvent(MotionEvent paramAnonymousMotionEvent)
          {
            boolean bool1 = false;
            boolean bool2 = StickerPreviewViewer.getInstance().onInterceptTouchEvent(paramAnonymousMotionEvent, ChatActivity.this.stickersListView, 0, localObject2);
            if ((super.onInterceptTouchEvent(paramAnonymousMotionEvent)) || (bool2)) {
              bool1 = true;
            }
            return bool1;
          }
        };
        this.stickersListView.setTag(Integer.valueOf(3));
        this.stickersListView.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return StickerPreviewViewer.getInstance().onTouch(paramAnonymousMotionEvent, ChatActivity.this.stickersListView, 0, ChatActivity.this.stickersOnItemClickListener, localObject2);
          }
        });
        this.stickersListView.setDisallowInterceptTouchEvents(true);
        localObject2 = new LinearLayoutManager(paramContext);
        ((LinearLayoutManager)localObject2).setOrientation(0);
        this.stickersListView.setLayoutManager((RecyclerView.LayoutManager)localObject2);
        this.stickersListView.setClipToPadding(false);
        this.stickersListView.setOverScrollMode(2);
        this.stickersPanel.addView(this.stickersListView, LayoutHelper.createFrame(-1, 78.0F));
        initStickers();
        this.stickersPanelArrow = new ImageView(paramContext);
        this.stickersPanelArrow.setImageResource(2131165656);
        this.stickersPanelArrow.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_stickersHintPanel"), PorterDuff.Mode.MULTIPLY));
        this.stickersPanel.addView(this.stickersPanelArrow, LayoutHelper.createFrame(-2, -2.0F, 83, 53.0F, 0.0F, 0.0F, 0.0F));
        this.searchContainer = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.searchContainer.setOnTouchListener(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return true;
          }
        });
        this.searchContainer.setWillNotDraw(false);
        this.searchContainer.setVisibility(4);
        this.searchContainer.setFocusable(true);
        this.searchContainer.setFocusableInTouchMode(true);
        this.searchContainer.setClickable(true);
        this.searchContainer.setPadding(0, AndroidUtilities.dp(3.0F), 0, 0);
        this.searchUpButton = new ImageView(paramContext);
        this.searchUpButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchUpButton.setImageResource(2131165633);
        this.searchUpButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchUpButton, LayoutHelper.createFrame(48, 48.0F, 53, 0.0F, 0.0F, 48.0F, 0.0F));
        this.searchUpButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(null, ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 1, ChatActivity.this.searchingUserMessages);
          }
        });
        this.searchDownButton = new ImageView(paramContext);
        this.searchDownButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchDownButton.setImageResource(2131165631);
        this.searchDownButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchDownButton, LayoutHelper.createFrame(48, 48.0F, 53, 0.0F, 0.0F, 0.0F, 0.0F));
        this.searchDownButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            DataQuery.getInstance(ChatActivity.this.currentAccount).searchMessagesInChat(null, ChatActivity.this.dialog_id, ChatActivity.this.mergeDialogId, ChatActivity.this.classGuid, 2, ChatActivity.this.searchingUserMessages);
          }
        });
        if ((this.currentChat != null) && ((!ChatObject.isChannel(this.currentChat)) || (this.currentChat.megagroup)))
        {
          this.searchUserButton = new ImageView(paramContext);
          this.searchUserButton.setScaleType(ImageView.ScaleType.CENTER);
          this.searchUserButton.setImageResource(2131165684);
          this.searchUserButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
          this.searchContainer.addView(this.searchUserButton, LayoutHelper.createFrame(48, 48.0F, 51, 48.0F, 0.0F, 0.0F, 0.0F));
          this.searchUserButton.setOnClickListener(new View.OnClickListener()
          {
            public void onClick(View paramAnonymousView)
            {
              ChatActivity.this.mentionLayoutManager.setReverseLayout(true);
              ChatActivity.this.mentionsAdapter.setSearchingMentions(true);
              ChatActivity.this.searchCalendarButton.setVisibility(8);
              ChatActivity.this.searchUserButton.setVisibility(8);
              ChatActivity.access$4802(ChatActivity.this, true);
              ChatActivity.access$5102(ChatActivity.this, null);
              ChatActivity.this.searchItem.getSearchField().setHint(LocaleController.getString("SearchMembers", 2131494306));
              ChatActivity.this.searchItem.setSearchFieldCaption(LocaleController.getString("SearchFrom", 2131494300));
              AndroidUtilities.showKeyboard(ChatActivity.this.searchItem.getSearchField());
              ChatActivity.this.searchItem.clearSearchText();
            }
          });
        }
        this.searchCalendarButton = new ImageView(paramContext);
        this.searchCalendarButton.setScaleType(ImageView.ScaleType.CENTER);
        this.searchCalendarButton.setImageResource(2131165628);
        this.searchCalendarButton.setColorFilter(new PorterDuffColorFilter(Theme.getColor("chat_searchPanelIcons"), PorterDuff.Mode.MULTIPLY));
        this.searchContainer.addView(this.searchCalendarButton, LayoutHelper.createFrame(48, 48, 51));
        this.searchCalendarButton.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {
              return;
            }
            AndroidUtilities.hideKeyboard(ChatActivity.this.searchItem.getSearchField());
            paramAnonymousView = Calendar.getInstance();
            int i = paramAnonymousView.get(1);
            int j = paramAnonymousView.get(2);
            int k = paramAnonymousView.get(5);
            try
            {
              paramAnonymousView = new DatePickerDialog(ChatActivity.this.getParentActivity(), new DatePickerDialog.OnDateSetListener()
              {
                public void onDateSet(DatePicker paramAnonymous2DatePicker, int paramAnonymous2Int1, int paramAnonymous2Int2, int paramAnonymous2Int3)
                {
                  paramAnonymous2DatePicker = Calendar.getInstance();
                  paramAnonymous2DatePicker.clear();
                  paramAnonymous2DatePicker.set(paramAnonymous2Int1, paramAnonymous2Int2, paramAnonymous2Int3);
                  paramAnonymous2Int1 = (int)(paramAnonymous2DatePicker.getTime().getTime() / 1000L);
                  ChatActivity.this.clearChatData();
                  ChatActivity.this.waitingForLoad.add(Integer.valueOf(ChatActivity.this.lastLoadIndex));
                  MessagesController.getInstance(ChatActivity.this.currentAccount).loadMessages(ChatActivity.this.dialog_id, 30, 0, paramAnonymous2Int1, true, 0, ChatActivity.this.classGuid, 4, 0, ChatObject.isChannel(ChatActivity.this.currentChat), ChatActivity.access$20308(ChatActivity.this));
                }
              }, i, j, k);
              final DatePicker localDatePicker = paramAnonymousView.getDatePicker();
              localDatePicker.setMinDate(1375315200000L);
              localDatePicker.setMaxDate(System.currentTimeMillis());
              paramAnonymousView.setButton(-1, LocaleController.getString("JumpToDate", 2131493713), paramAnonymousView);
              paramAnonymousView.setButton(-2, LocaleController.getString("Cancel", 2131493127), new DialogInterface.OnClickListener()
              {
                public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int) {}
              });
              if (Build.VERSION.SDK_INT >= 21) {
                paramAnonymousView.setOnShowListener(new DialogInterface.OnShowListener()
                {
                  public void onShow(DialogInterface paramAnonymous2DialogInterface)
                  {
                    int j = localDatePicker.getChildCount();
                    int i = 0;
                    while (i < j)
                    {
                      paramAnonymous2DialogInterface = localDatePicker.getChildAt(i);
                      ViewGroup.LayoutParams localLayoutParams = paramAnonymous2DialogInterface.getLayoutParams();
                      localLayoutParams.width = -1;
                      paramAnonymous2DialogInterface.setLayoutParams(localLayoutParams);
                      i += 1;
                    }
                  }
                });
              }
              ChatActivity.this.showDialog(paramAnonymousView);
              return;
            }
            catch (Exception paramAnonymousView)
            {
              FileLog.e(paramAnonymousView);
            }
          }
        });
        this.searchCountText = new SimpleTextView(paramContext);
        this.searchCountText.setTextColor(Theme.getColor("chat_searchPanelText"));
        this.searchCountText.setTextSize(15);
        this.searchCountText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.searchCountText.setGravity(5);
        this.searchContainer.addView(this.searchCountText, LayoutHelper.createFrame(-2, -2.0F, 21, 0.0F, 0.0F, 108.0F, 0.0F));
        this.bottomOverlay = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.bottomOverlay.setWillNotDraw(false);
        this.bottomOverlay.setVisibility(4);
        this.bottomOverlay.setFocusable(true);
        this.bottomOverlay.setFocusableInTouchMode(true);
        this.bottomOverlay.setClickable(true);
        this.bottomOverlay.setPadding(0, AndroidUtilities.dp(2.0F), 0, 0);
        this.contentView.addView(this.bottomOverlay, LayoutHelper.createFrame(-1, 51, 80));
        this.bottomOverlayText = new TextView(paramContext);
        this.bottomOverlayText.setTextSize(1, 14.0F);
        this.bottomOverlayText.setGravity(17);
        this.bottomOverlayText.setMaxLines(2);
        this.bottomOverlayText.setEllipsize(TextUtils.TruncateAt.END);
        this.bottomOverlayText.setLineSpacing(AndroidUtilities.dp(2.0F), 1.0F);
        this.bottomOverlayText.setTextColor(Theme.getColor("chat_secretChatStatusText"));
        this.bottomOverlay.addView(this.bottomOverlayText, LayoutHelper.createFrame(-2, -2.0F, 17, 14.0F, 0.0F, 14.0F, 0.0F));
        this.bottomOverlayChat = new FrameLayout(paramContext)
        {
          public void onDraw(Canvas paramAnonymousCanvas)
          {
            int i = Theme.chat_composeShadowDrawable.getIntrinsicHeight();
            Theme.chat_composeShadowDrawable.setBounds(0, 0, getMeasuredWidth(), i);
            Theme.chat_composeShadowDrawable.draw(paramAnonymousCanvas);
            paramAnonymousCanvas.drawRect(0.0F, i, getMeasuredWidth(), getMeasuredHeight(), Theme.chat_composeBackgroundPaint);
          }
        };
        this.bottomOverlayChat.setWillNotDraw(false);
        this.bottomOverlayChat.setPadding(0, AndroidUtilities.dp(3.0F), 0, 0);
        this.bottomOverlayChat.setVisibility(4);
        this.contentView.addView(this.bottomOverlayChat, LayoutHelper.createFrame(-1, 51, 80));
        this.bottomOverlayChat.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            if (ChatActivity.this.getParentActivity() == null) {}
            for (;;)
            {
              return;
              paramAnonymousView = null;
              if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.userBlocked)) {
                if (ChatActivity.this.currentUser.bot)
                {
                  String str = ChatActivity.this.botUser;
                  ChatActivity.access$20802(ChatActivity.this, null);
                  MessagesController.getInstance(ChatActivity.this.currentAccount).unblockUser(ChatActivity.this.currentUser.id);
                  if ((str != null) && (str.length() != 0)) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).sendBotStart(ChatActivity.this.currentUser, str);
                  }
                }
              }
              while (paramAnonymousView != null)
              {
                paramAnonymousView.setTitle(LocaleController.getString("AppName", 2131492981));
                paramAnonymousView.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
                ChatActivity.this.showDialog(paramAnonymousView.create());
                return;
                SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/start", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                continue;
                paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                paramAnonymousView.setMessage(LocaleController.getString("AreYouSureUnblockContact", 2131493016));
                paramAnonymousView.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
                {
                  public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                  {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).unblockUser(ChatActivity.this.currentUser.id);
                  }
                });
                continue;
                if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.bot) && (ChatActivity.this.botUser != null))
                {
                  if (ChatActivity.this.botUser.length() != 0) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).sendBotStart(ChatActivity.this.currentUser, ChatActivity.this.botUser);
                  }
                  for (;;)
                  {
                    ChatActivity.access$20802(ChatActivity.this, null);
                    ChatActivity.this.updateBottomOverlay();
                    break;
                    SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage("/start", ChatActivity.this.dialog_id, null, null, false, null, null, null);
                  }
                }
                if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!(ChatActivity.this.currentChat instanceof TLRPC.TL_channelForbidden)))
                {
                  if (ChatObject.isNotInChat(ChatActivity.this.currentChat)) {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).addUserToChat(ChatActivity.this.currentChat.id, UserConfig.getInstance(ChatActivity.this.currentAccount).getCurrentUser(), null, 0, null, ChatActivity.this);
                  } else {
                    ChatActivity.this.toggleMute(true);
                  }
                }
                else
                {
                  paramAnonymousView = new AlertDialog.Builder(ChatActivity.this.getParentActivity());
                  paramAnonymousView.setMessage(LocaleController.getString("AreYouSureDeleteThisChat", 2131493007));
                  paramAnonymousView.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                    {
                      MessagesController.getInstance(ChatActivity.this.currentAccount).deleteDialog(ChatActivity.this.dialog_id, 0);
                      ChatActivity.this.finishFragment();
                    }
                  });
                }
              }
            }
          }
        });
        this.bottomOverlayChatText = new TextView(paramContext);
        this.bottomOverlayChatText.setTextSize(1, 15.0F);
        this.bottomOverlayChatText.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
        this.bottomOverlayChatText.setTextColor(Theme.getColor("chat_fieldOverlayText"));
        this.bottomOverlayChat.addView(this.bottomOverlayChatText, LayoutHelper.createFrame(-2, -2, 17));
        this.contentView.addView(this.searchContainer, LayoutHelper.createFrame(-1, 51, 80));
        this.chatAdapter.updateRows();
        if ((!this.loading) || (!this.messages.isEmpty())) {
          break label7449;
        }
        paramContext = this.progressView;
        if (this.chatAdapter.botInfoRow != -1) {
          break label7444;
        }
        i = 0;
        label6715:
        paramContext.setVisibility(i);
        this.chatListView.setEmptyView(null);
      }
      for (;;)
      {
        checkBotKeyboard();
        updateContactStatus();
        updateBottomOverlay();
        updateSecretStatus();
        updateSpamView();
        updatePinnedMessageView(true);
        try
        {
          if ((this.currentEncryptedChat != null) && (Build.VERSION.SDK_INT >= 23) && ((SharedConfig.passcodeHash.length() == 0) || (SharedConfig.allowScreenCapture))) {
            MediaController.getInstance().setFlagSecure(this, true);
          }
        }
        catch (Throwable paramContext)
        {
          for (;;)
          {
            label6820:
            FileLog.e(paramContext);
          }
        }
        if (localObject1 != null) {
          this.chatActivityEnterView.setFieldText((CharSequence)localObject1);
        }
        fixLayoutInternal();
        return this.fragmentView;
        bool1 = false;
        break;
        this.headerItem.hideSubItem(32);
        break label500;
        label6832:
        this.headerItem.addSubItem(16, LocaleController.getString("DeleteChatUser", 2131493365));
        break label752;
        label6854:
        if (!this.currentUser.self) {
          break label783;
        }
        this.headerItem.addSubItem(24, LocaleController.getString("AddShortcut", 2131492935));
        break label783;
        label6886:
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(23, 2131165339, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(19, 2131165354, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(22, 2131165350, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(10, 2131165347, AndroidUtilities.dp(54.0F)));
        this.actionModeViews.add(((ActionBarMenu)localObject1).addItemWithWidth(12, 2131165348, AndroidUtilities.dp(54.0F)));
        break label1351;
        label7009:
        i = 8;
        break label1393;
        label7015:
        i = 8;
        break label1432;
        label7021:
        i = 8;
        break label1471;
        label7027:
        i = 8;
        break label1495;
        label7033:
        this.emptyView = new TextView(paramContext);
        if ((this.currentUser != null) && (this.currentUser.id != 777000) && (this.currentUser.id != 429000) && (this.currentUser.id != 4244000) && (MessagesController.isSupportId(this.currentUser.id))) {
          this.emptyView.setText(LocaleController.getString("GotAQuestion", 2131493629));
        }
        for (;;)
        {
          this.emptyView.setTextSize(1, 14.0F);
          this.emptyView.setGravity(17);
          this.emptyView.setTextColor(Theme.getColor("chat_serviceText"));
          this.emptyView.setBackgroundResource(2131165671);
          this.emptyView.getBackground().setColorFilter(Theme.colorFilter);
          this.emptyView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
          this.emptyView.setPadding(AndroidUtilities.dp(10.0F), AndroidUtilities.dp(2.0F), AndroidUtilities.dp(10.0F), AndroidUtilities.dp(3.0F));
          this.emptyViewContainer.addView(this.emptyView, new FrameLayout.LayoutParams(-2, -2, 17));
          break;
          this.emptyView.setText(LocaleController.getString("NoMessages", 2131493895));
        }
        label7264:
        this.bigEmptyView = new ChatBigEmptyView(paramContext, true);
        if (this.currentEncryptedChat.admin_id == UserConfig.getInstance(this.currentAccount).getClientUserId()) {
          this.bigEmptyView.setSecretText(LocaleController.formatString("EncryptedPlaceholderTitleOutgoing", 2131493437, new Object[] { UserObject.getFirstName(this.currentUser) }));
        }
        for (;;)
        {
          this.emptyViewContainer.addView(this.bigEmptyView, new FrameLayout.LayoutParams(-2, -2, 17));
          break;
          this.bigEmptyView.setSecretText(LocaleController.formatString("EncryptedPlaceholderTitleIncoming", 2131493436, new Object[] { UserObject.getFirstName(this.currentUser) }));
        }
        label7387:
        localObject1 = null;
        break label1687;
        label7393:
        localObject1 = null;
        break label1687;
        label7399:
        this.reportSpamButton.setText(LocaleController.getString("ReportSpam", 2131494245));
        break label2986;
        label7418:
        bool1 = false;
        break label3919;
        label7423:
        bool1 = false;
        break label3955;
        label7428:
        i = 1;
        break label3979;
        label7433:
        bool1 = false;
        break label5013;
        label7438:
        bool2 = false;
        break label5038;
        label7444:
        i = 4;
        break label6715;
        label7449:
        this.progressView.setVisibility(4);
        this.chatListView.setEmptyView(this.emptyViewContainer);
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
  }
  
  public void didReceivedNotification(int paramInt1, int paramInt2, final Object... paramVarArgs)
  {
    int i1;
    if (paramInt1 == NotificationCenter.messagesDidLoaded) {
      if (((Integer)paramVarArgs[10]).intValue() == this.classGuid)
      {
        if (!this.openAnimationEnded) {
          NotificationCenter.getInstance(this.currentAccount).setAllowedNotificationsDutingAnimation(new int[] { NotificationCenter.chatInfoDidLoaded, NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.botKeyboardDidLoaded });
        }
        paramInt1 = ((Integer)paramVarArgs[11]).intValue();
        paramInt1 = this.waitingForLoad.indexOf(Integer.valueOf(paramInt1));
        i1 = UserConfig.getInstance(this.currentAccount).getClientUserId();
        if (paramInt1 != -1) {
          break label109;
        }
      }
    }
    label109:
    int i;
    Object localObject1;
    label195:
    final Object localObject2;
    label264:
    int j;
    int k;
    label428:
    label448:
    label568:
    label713:
    label781:
    label802:
    label809:
    label829:
    label873:
    label894:
    label910:
    int n;
    int m;
    Object localObject7;
    Object localObject4;
    Object localObject3;
    label1263:
    label1408:
    Object localObject6;
    label1665:
    label1740:
    label1801:
    label1842:
    label1893:
    label1921:
    label1992:
    label2129:
    label2263:
    label2324:
    label2430:
    label2484:
    label2497:
    label2521:
    label2562:
    label2622:
    label2640:
    label2679:
    label2700:
    label2705:
    label2772:
    label3253:
    label3388:
    label3476:
    label3562:
    label3635:
    label3726:
    label3830:
    label3922:
    label4056:
    label4063:
    label4158:
    label4164:
    label4236:
    label4603:
    label5218:
    label5241:
    label6637:
    label6680:
    label7015:
    label7021:
    label7188:
    label7228:
    label7234:
    label7264:
    label7271:
    label7276:
    label8246:
    label8397:
    label8409:
    label8467:
    long l;
    label8692:
    label8844:
    label8854:
    label8947:
    label8962:
    label9076:
    label9428:
    label9514:
    label9557:
    label9563:
    label9634:
    label9690:
    label9710:
    label10130:
    label10136:
    label10385:
    label10462:
    label10522:
    label10556:
    label10665:
    label10671:
    label10742:
    label10744:
    label10764:
    label10781:
    label10864:
    do
    {
      do
      {
        do
        {
          do
          {
            do
            {
              int i2;
              for (;;)
              {
                return;
                this.waitingForLoad.remove(paramInt1);
                ArrayList localArrayList = (ArrayList)paramVarArgs[2];
                bool1 = false;
                if (this.waitingForReplyMessageLoad)
                {
                  if (!this.createUnreadMessageAfterIdLoading)
                  {
                    i = 0;
                    paramInt2 = 0;
                    for (;;)
                    {
                      paramInt1 = i;
                      if (paramInt2 < localArrayList.size())
                      {
                        localObject1 = (MessageObject)localArrayList.get(paramInt2);
                        if (((MessageObject)localObject1).getId() != this.startLoadFromMessageId) {
                          break label195;
                        }
                      }
                      for (paramInt1 = 1;; paramInt1 = 1)
                      {
                        if (paramInt1 != 0) {
                          break label264;
                        }
                        this.startLoadFromMessageId = 0;
                        return;
                        if (paramInt2 + 1 >= localArrayList.size()) {
                          break;
                        }
                        localObject2 = (MessageObject)localArrayList.get(paramInt2 + 1);
                        if ((((MessageObject)localObject1).getId() < this.startLoadFromMessageId) || (((MessageObject)localObject2).getId() >= this.startLoadFromMessageId)) {
                          break;
                        }
                        this.startLoadFromMessageId = ((MessageObject)localObject1).getId();
                      }
                      paramInt2 += 1;
                    }
                  }
                  paramInt1 = this.startLoadFromMessageId;
                  bool2 = this.needSelectFromMessageId;
                  paramInt2 = this.createUnreadMessageAfterId;
                  bool1 = this.createUnreadMessageAfterIdLoading;
                  clearChatData();
                  this.createUnreadMessageAfterId = paramInt2;
                  this.startLoadFromMessageId = paramInt1;
                  this.needSelectFromMessageId = bool2;
                }
                this.loadsCount += 1;
                int i3;
                if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
                {
                  j = 0;
                  i2 = ((Integer)paramVarArgs[1]).intValue();
                  bool2 = ((Boolean)paramVarArgs[3]).booleanValue();
                  paramInt2 = ((Integer)paramVarArgs[4]).intValue();
                  ((Integer)paramVarArgs[7]).intValue();
                  i3 = ((Integer)paramVarArgs[8]).intValue();
                  i = ((Integer)paramVarArgs[12]).intValue();
                  paramInt1 = ((Integer)paramVarArgs[13]).intValue();
                  if (paramInt1 >= 0) {
                    break label781;
                  }
                  k = paramInt1 * -1;
                  this.hasAllMentionsLocal = false;
                  if (i3 == 4)
                  {
                    this.startLoadFromMessageId = i;
                    paramInt1 = localArrayList.size() - 1;
                    if (paramInt1 > 0)
                    {
                      localObject1 = (MessageObject)localArrayList.get(paramInt1);
                      if ((((MessageObject)localObject1).type >= 0) || (((MessageObject)localObject1).getId() != this.startLoadFromMessageId)) {
                        break label802;
                      }
                      this.startLoadFromMessageId = ((MessageObject)localArrayList.get(paramInt1 - 1)).getId();
                    }
                  }
                  paramInt1 = 0;
                  i = 0;
                  if (paramInt2 == 0) {
                    break label829;
                  }
                  this.last_message_id = ((Integer)paramVarArgs[5]).intValue();
                  if (i3 != 3) {
                    break label809;
                  }
                  if (this.loadingFromOldPosition)
                  {
                    i = ((Integer)paramVarArgs[6]).intValue();
                    if (i != 0) {
                      this.createUnreadMessageAfterId = paramInt2;
                    }
                    this.loadingFromOldPosition = false;
                  }
                  this.first_unread_id = 0;
                  paramInt2 = 0;
                  if ((i3 != 0) && ((this.startLoadFromMessageId != 0) || (this.last_message_id != 0))) {
                    this.forwardEndReached[j] = false;
                  }
                  if (((i3 == 1) || (i3 == 3)) && (j == 1))
                  {
                    paramVarArgs = this.endReached;
                    this.cacheEndReached[0] = true;
                    paramVarArgs[0] = 1;
                    this.forwardEndReached[0] = false;
                    this.minMessageId[0] = 0;
                  }
                  if ((this.loadsCount == 1) && (localArrayList.size() > 20)) {
                    this.loadsCount += 1;
                  }
                  if (!this.firstLoading) {
                    break label910;
                  }
                  if (this.forwardEndReached[j] != 0) {
                    break label894;
                  }
                  this.messages.clear();
                  this.messagesByDays.clear();
                  this.groupedMessagesMap.clear();
                  paramInt1 = 0;
                  if (paramInt1 >= 2) {
                    break label894;
                  }
                  this.messagesDict[paramInt1].clear();
                  if (this.currentEncryptedChat != null) {
                    break label873;
                  }
                  this.maxMessageId[paramInt1] = Integer.MAX_VALUE;
                  this.minMessageId[paramInt1] = Integer.MIN_VALUE;
                }
                for (;;)
                {
                  this.maxDate[paramInt1] = Integer.MIN_VALUE;
                  this.minDate[paramInt1] = 0;
                  paramInt1 += 1;
                  break label713;
                  j = 1;
                  break;
                  k = paramInt1;
                  if (!this.first) {
                    break label428;
                  }
                  this.hasAllMentionsLocal = true;
                  k = paramInt1;
                  break label428;
                  paramInt1 -= 1;
                  break label448;
                  this.first_unread_id = paramInt2;
                  i = ((Integer)paramVarArgs[6]).intValue();
                  break label568;
                  i = paramInt1;
                  if (this.startLoadFromMessageId == 0) {
                    break label568;
                  }
                  if (i3 != 3)
                  {
                    i = paramInt1;
                    if (i3 != 4) {
                      break label568;
                    }
                  }
                  this.last_message_id = ((Integer)paramVarArgs[5]).intValue();
                  i = paramInt1;
                  break label568;
                  this.maxMessageId[paramInt1] = Integer.MIN_VALUE;
                  this.minMessageId[paramInt1] = Integer.MAX_VALUE;
                }
                this.firstLoading = false;
                AndroidUtilities.runOnUIThread(new Runnable()
                {
                  public void run()
                  {
                    if (ChatActivity.this.parentLayout != null) {
                      ChatActivity.this.parentLayout.resumeDelayedFragmentAnimation();
                    }
                  }
                });
                if (i3 == 1) {
                  Collections.reverse(localArrayList);
                }
                if (this.currentEncryptedChat == null) {
                  DataQuery.getInstance(this.currentAccount).loadReplyMessagesForMessages(localArrayList, this.dialog_id);
                }
                n = 0;
                if ((i3 == 2) && (localArrayList.isEmpty()) && (!bool2)) {
                  this.forwardEndReached[0] = true;
                }
                localObject1 = null;
                paramVarArgs = null;
                MediaController localMediaController = MediaController.getInstance();
                m = 0;
                if (m < localArrayList.size())
                {
                  localObject2 = (MessageObject)localArrayList.get(m);
                  n += ((MessageObject)localObject2).getApproximateHeight();
                  if (this.currentUser != null)
                  {
                    if (this.currentUser.self) {
                      ((MessageObject)localObject2).messageOwner.out = true;
                    }
                    if (((this.currentUser.bot) && (((MessageObject)localObject2).isOut())) || (this.currentUser.id == i1)) {
                      ((MessageObject)localObject2).setIsRead();
                    }
                  }
                  if (this.messagesDict[j].indexOfKey(((MessageObject)localObject2).getId()) >= 0)
                  {
                    paramInt1 = paramInt2;
                    localObject7 = localObject1;
                    localObject4 = paramVarArgs;
                  }
                  Object localObject8;
                  do
                  {
                    do
                    {
                      do
                      {
                        do
                        {
                          do
                          {
                            do
                            {
                              do
                              {
                                do
                                {
                                  do
                                  {
                                    do
                                    {
                                      do
                                      {
                                        m += 1;
                                        paramVarArgs = (Object[])localObject4;
                                        localObject1 = localObject7;
                                        paramInt2 = paramInt1;
                                        break;
                                        if (localMediaController.isPlayingMessage((MessageObject)localObject2))
                                        {
                                          localObject3 = localMediaController.getPlayingMessageObject();
                                          ((MessageObject)localObject2).audioProgress = ((MessageObject)localObject3).audioProgress;
                                          ((MessageObject)localObject2).audioProgressSec = ((MessageObject)localObject3).audioProgressSec;
                                          ((MessageObject)localObject2).audioPlayerDuration = ((MessageObject)localObject3).audioPlayerDuration;
                                        }
                                        if ((j == 0) && (ChatObject.isChannel(this.currentChat)) && (((MessageObject)localObject2).getId() == 1))
                                        {
                                          this.endReached[j] = true;
                                          this.cacheEndReached[j] = true;
                                        }
                                        if (((MessageObject)localObject2).getId() <= 0) {
                                          break label2430;
                                        }
                                        this.maxMessageId[j] = Math.min(((MessageObject)localObject2).getId(), this.maxMessageId[j]);
                                        this.minMessageId[j] = Math.max(((MessageObject)localObject2).getId(), this.minMessageId[j]);
                                        if (((MessageObject)localObject2).messageOwner.date != 0)
                                        {
                                          this.maxDate[j] = Math.max(this.maxDate[j], ((MessageObject)localObject2).messageOwner.date);
                                          if ((this.minDate[j] == 0) || (((MessageObject)localObject2).messageOwner.date < this.minDate[j])) {
                                            this.minDate[j] = ((MessageObject)localObject2).messageOwner.date;
                                          }
                                        }
                                        if (((MessageObject)localObject2).getId() == this.last_message_id) {
                                          this.forwardEndReached[j] = true;
                                        }
                                        localObject4 = paramVarArgs;
                                        localObject7 = localObject1;
                                        paramInt1 = paramInt2;
                                      } while (((MessageObject)localObject2).type < 0);
                                      if (j != 1) {
                                        break label1408;
                                      }
                                      localObject4 = paramVarArgs;
                                      localObject7 = localObject1;
                                      paramInt1 = paramInt2;
                                    } while ((((MessageObject)localObject2).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo));
                                    localObject6 = localObject2;
                                    if (this.needAnimateToMessage != null)
                                    {
                                      localObject6 = localObject2;
                                      if (this.needAnimateToMessage.getId() == ((MessageObject)localObject2).getId())
                                      {
                                        localObject6 = localObject2;
                                        if (((MessageObject)localObject2).getId() < 0)
                                        {
                                          localObject6 = localObject2;
                                          if (((MessageObject)localObject2).type == 5)
                                          {
                                            localObject6 = this.needAnimateToMessage;
                                            this.animatingMessageObjects.add(localObject6);
                                            this.needAnimateToMessage = null;
                                          }
                                        }
                                      }
                                    }
                                    if ((!((MessageObject)localObject6).isOut()) && (((MessageObject)localObject6).isUnread())) {}
                                    this.messagesDict[j].put(((MessageObject)localObject6).getId(), localObject6);
                                    localObject2 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject6).dateKey);
                                    localObject7 = localObject2;
                                    paramInt1 = paramInt2;
                                    if (localObject2 == null)
                                    {
                                      localObject7 = new ArrayList();
                                      this.messagesByDays.put(((MessageObject)localObject6).dateKey, localObject7);
                                      localObject2 = new TLRPC.TL_message();
                                      ((TLRPC.Message)localObject2).message = LocaleController.formatDateChat(((MessageObject)localObject6).messageOwner.date);
                                      ((TLRPC.Message)localObject2).id = 0;
                                      ((TLRPC.Message)localObject2).date = ((MessageObject)localObject6).messageOwner.date;
                                      localObject2 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject2, false);
                                      ((MessageObject)localObject2).type = 10;
                                      ((MessageObject)localObject2).contentType = 1;
                                      ((MessageObject)localObject2).isDateObject = true;
                                      if (i3 != 1) {
                                        break label2484;
                                      }
                                      this.messages.add(0, localObject2);
                                      paramInt1 = paramInt2 + 1;
                                    }
                                    if (!((MessageObject)localObject6).hasValidGroupId()) {
                                      break label2640;
                                    }
                                    localObject4 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject6).messageOwner.grouped_id);
                                    localObject2 = localObject4;
                                    if (localObject4 != null)
                                    {
                                      localObject2 = localObject4;
                                      if (this.messages.size() > 1)
                                      {
                                        if (i3 != 1) {
                                          break label2497;
                                        }
                                        localObject3 = (MessageObject)this.messages.get(0);
                                        if (((MessageObject)localObject3).messageOwner.grouped_id != ((MessageObject)localObject6).messageOwner.grouped_id) {
                                          break label2521;
                                        }
                                        localObject2 = localObject4;
                                        if (((MessageObject)localObject3).localGroupId != 0L)
                                        {
                                          ((MessageObject)localObject6).localGroupId = ((MessageObject)localObject3).localGroupId;
                                          localObject2 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject3).localGroupId);
                                        }
                                      }
                                    }
                                    if (localObject2 != null) {
                                      break label2562;
                                    }
                                    localObject8 = new MessageObject.GroupedMessages();
                                    ((MessageObject.GroupedMessages)localObject8).groupId = ((MessageObject)localObject6).getGroupId();
                                    this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject8).groupId, localObject8);
                                    localObject4 = paramVarArgs;
                                    localObject3 = localObject1;
                                    if (localObject1 == null) {
                                      localObject3 = new LongSparseArray();
                                    }
                                    ((LongSparseArray)localObject3).put(((MessageObject.GroupedMessages)localObject8).groupId, localObject8);
                                    if (i3 != 1) {
                                      break label2622;
                                    }
                                    ((MessageObject.GroupedMessages)localObject8).messages.add(localObject6);
                                    localObject2 = localObject4;
                                    paramInt1 += 1;
                                    ((ArrayList)localObject7).add(localObject6);
                                    if (i3 != 1) {
                                      break label2679;
                                    }
                                    this.messages.add(0, localObject6);
                                    if (this.currentEncryptedChat != null) {
                                      break label2705;
                                    }
                                    if ((this.createUnreadMessageAfterId == 0) || (i3 == 1) || (m + 1 >= localArrayList.size())) {
                                      break label2700;
                                    }
                                    localObject1 = (MessageObject)localArrayList.get(m + 1);
                                    if (!((MessageObject)localObject6).isOut())
                                    {
                                      paramVarArgs = (Object[])localObject1;
                                      if (((MessageObject)localObject1).getId() < this.createUnreadMessageAfterId) {}
                                    }
                                    else
                                    {
                                      paramVarArgs = null;
                                    }
                                    if ((i3 != 2) || (((MessageObject)localObject6).getId() != this.first_unread_id)) {
                                      break label2772;
                                    }
                                    if (n <= AndroidUtilities.displaySize.y / 2)
                                    {
                                      paramInt2 = paramInt1;
                                      if (this.forwardEndReached[0] != 0) {}
                                    }
                                    else
                                    {
                                      localObject1 = new TLRPC.TL_message();
                                      ((TLRPC.Message)localObject1).message = "";
                                      ((TLRPC.Message)localObject1).id = 0;
                                      localObject1 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject1, false);
                                      ((MessageObject)localObject1).type = 6;
                                      ((MessageObject)localObject1).contentType = 2;
                                      this.messages.add(this.messages.size() - 1, localObject1);
                                      this.unreadMessageObject = ((MessageObject)localObject1);
                                      this.scrollToMessage = this.unreadMessageObject;
                                      this.scrollToMessagePosition = 55536;
                                      paramInt2 = paramInt1 + 1;
                                    }
                                    localObject4 = localObject2;
                                    localObject7 = localObject3;
                                    paramInt1 = paramInt2;
                                  } while (i3 == 2);
                                  localObject4 = localObject2;
                                  localObject7 = localObject3;
                                  paramInt1 = paramInt2;
                                } while (this.unreadMessageObject != null);
                                localObject4 = localObject2;
                                localObject7 = localObject3;
                                paramInt1 = paramInt2;
                              } while (this.createUnreadMessageAfterId == 0);
                              if ((this.currentEncryptedChat == null) && (!((MessageObject)localObject6).isOut()) && (((MessageObject)localObject6).getId() >= this.createUnreadMessageAfterId)) {
                                break label2263;
                              }
                              localObject4 = localObject2;
                              localObject7 = localObject3;
                              paramInt1 = paramInt2;
                            } while (this.currentEncryptedChat == null);
                            localObject4 = localObject2;
                            localObject7 = localObject3;
                            paramInt1 = paramInt2;
                          } while (((MessageObject)localObject6).isOut());
                          localObject4 = localObject2;
                          localObject7 = localObject3;
                          paramInt1 = paramInt2;
                        } while (((MessageObject)localObject6).getId() > this.createUnreadMessageAfterId);
                        if ((i3 == 1) || (paramVarArgs != null)) {
                          break label2324;
                        }
                        localObject4 = localObject2;
                        localObject7 = localObject3;
                        paramInt1 = paramInt2;
                      } while (paramVarArgs != null);
                      localObject4 = localObject2;
                      localObject7 = localObject3;
                      paramInt1 = paramInt2;
                    } while (!bool1);
                    localObject4 = localObject2;
                    localObject7 = localObject3;
                    paramInt1 = paramInt2;
                  } while (m != localArrayList.size() - 1);
                  paramVarArgs = new TLRPC.TL_message();
                  paramVarArgs.message = "";
                  paramVarArgs.id = 0;
                  paramVarArgs = new MessageObject(this.currentAccount, paramVarArgs, false);
                  paramVarArgs.type = 6;
                  paramVarArgs.contentType = 2;
                  if (i3 == 1) {
                    this.messages.add(1, paramVarArgs);
                  }
                  for (;;)
                  {
                    this.unreadMessageObject = paramVarArgs;
                    if (i3 == 3)
                    {
                      this.scrollToMessage = this.unreadMessageObject;
                      this.startLoadFromMessageId = 0;
                      this.scrollToMessagePosition = 56536;
                    }
                    paramInt1 = paramInt2 + 1;
                    localObject4 = localObject2;
                    localObject7 = localObject3;
                    break;
                    if (this.currentEncryptedChat == null) {
                      break label1263;
                    }
                    this.maxMessageId[j] = Math.max(((MessageObject)localObject2).getId(), this.maxMessageId[j]);
                    this.minMessageId[j] = Math.min(((MessageObject)localObject2).getId(), this.minMessageId[j]);
                    break label1263;
                    this.messages.add(localObject2);
                    break label1665;
                    localObject3 = (MessageObject)this.messages.get(this.messages.size() - 2);
                    break label1740;
                    localObject2 = localObject4;
                    if (((MessageObject)localObject3).messageOwner.grouped_id == ((MessageObject)localObject6).messageOwner.grouped_id) {
                      break label1801;
                    }
                    ((MessageObject)localObject6).localGroupId = Utilities.random.nextLong();
                    localObject2 = null;
                    break label1801;
                    if (localObject1 != null)
                    {
                      localObject4 = paramVarArgs;
                      localObject8 = localObject2;
                      if (((LongSparseArray)localObject1).indexOfKey(((MessageObject)localObject6).getGroupId()) >= 0) {
                        break label1842;
                      }
                    }
                    localObject4 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject4 = new LongSparseArray();
                    }
                    ((LongSparseArray)localObject4).put(((MessageObject)localObject6).getGroupId(), localObject2);
                    localObject8 = localObject2;
                    break label1842;
                    ((MessageObject.GroupedMessages)localObject8).messages.add(0, localObject6);
                    localObject2 = localObject4;
                    break label1893;
                    localObject2 = paramVarArgs;
                    localObject3 = localObject1;
                    if (((MessageObject)localObject6).messageOwner.grouped_id == 0L) {
                      break label1893;
                    }
                    ((MessageObject)localObject6).messageOwner.grouped_id = 0L;
                    localObject2 = paramVarArgs;
                    localObject3 = localObject1;
                    break label1893;
                    this.messages.add(this.messages.size() - 1, localObject6);
                    break label1921;
                    paramVarArgs = null;
                    break label1992;
                    if ((this.createUnreadMessageAfterId != 0) && (i3 != 1) && (m - 1 >= 0))
                    {
                      localObject1 = (MessageObject)localArrayList.get(m - 1);
                      if (!((MessageObject)localObject6).isOut())
                      {
                        paramVarArgs = (Object[])localObject1;
                        if (((MessageObject)localObject1).getId() < this.createUnreadMessageAfterId) {
                          break label1992;
                        }
                      }
                      paramVarArgs = null;
                      break label1992;
                    }
                    paramVarArgs = null;
                    break label1992;
                    if (i3 != 3)
                    {
                      paramInt2 = paramInt1;
                      if (i3 != 4) {
                        break label2129;
                      }
                    }
                    paramInt2 = paramInt1;
                    if (((MessageObject)localObject6).getId() != this.startLoadFromMessageId) {
                      break label2129;
                    }
                    if (this.needSelectFromMessageId) {}
                    for (this.highlightMessageId = ((MessageObject)localObject6).getId();; this.highlightMessageId = Integer.MAX_VALUE)
                    {
                      this.scrollToMessage = ((MessageObject)localObject6);
                      this.startLoadFromMessageId = 0;
                      paramInt2 = paramInt1;
                      if (this.scrollToMessagePosition != 55536) {
                        break;
                      }
                      this.scrollToMessagePosition = 56536;
                      paramInt2 = paramInt1;
                      break;
                    }
                    this.messages.add(this.messages.size() - 1, paramVarArgs);
                  }
                }
                if (bool1) {
                  this.createUnreadMessageAfterId = 0;
                }
                if ((i3 == 0) && (paramInt2 == 0)) {
                  this.loadsCount -= 1;
                }
                if (localObject1 != null)
                {
                  paramInt1 = 0;
                  while (paramInt1 < ((LongSparseArray)localObject1).size())
                  {
                    localObject2 = (MessageObject.GroupedMessages)((LongSparseArray)localObject1).valueAt(paramInt1);
                    ((MessageObject.GroupedMessages)localObject2).calculate();
                    if ((this.chatAdapter != null) && (paramVarArgs != null) && (paramVarArgs.indexOfKey(((LongSparseArray)localObject1).keyAt(paramInt1)) >= 0))
                    {
                      localObject3 = (MessageObject)((MessageObject.GroupedMessages)localObject2).messages.get(((MessageObject.GroupedMessages)localObject2).messages.size() - 1);
                      m = this.messages.indexOf(localObject3);
                      if (m >= 0) {
                        this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + m, ((MessageObject.GroupedMessages)localObject2).messages.size());
                      }
                    }
                    paramInt1 += 1;
                  }
                }
                if ((this.forwardEndReached[j] != 0) && (j != 1))
                {
                  this.first_unread_id = 0;
                  this.last_message_id = 0;
                  this.createUnreadMessageAfterId = 0;
                }
                if (i3 == 1)
                {
                  k = 0;
                  i = 0;
                  paramInt1 = k;
                  if (localArrayList.size() != i2) {
                    if ((bool2) && (this.currentEncryptedChat == null))
                    {
                      paramInt1 = k;
                      if (this.forwardEndReached[j] == 0) {}
                    }
                    else
                    {
                      this.forwardEndReached[j] = true;
                      paramInt1 = i;
                      if (j != 1)
                      {
                        this.first_unread_id = 0;
                        this.last_message_id = 0;
                        this.createUnreadMessageAfterId = 0;
                        this.chatAdapter.notifyItemRemoved(this.chatAdapter.loadingDownRow);
                        paramInt1 = 0 + 1;
                      }
                      this.startLoadFromMessageId = 0;
                    }
                  }
                  if (paramInt2 > 0)
                  {
                    j = this.chatLayoutManager.findFirstVisibleItemPosition();
                    i = j;
                    if (j == 0) {
                      i = j + 1;
                    }
                    paramVarArgs = this.chatLayoutManager.findViewByPosition(i);
                    if (paramVarArgs != null) {
                      break label3388;
                    }
                    j = 0;
                    this.chatAdapter.notifyItemRangeInserted(1, paramInt2);
                    if (i != -1) {
                      this.chatLayoutManager.scrollToPositionWithOffset(i + paramInt2 - paramInt1, j);
                    }
                  }
                  this.loadingForward = false;
                  if ((this.first) && (this.messages.size() > 0)) {
                    this.first = false;
                  }
                  if ((this.messages.isEmpty()) && (this.currentEncryptedChat == null) && (this.currentUser != null) && (this.currentUser.bot) && (this.botUser == null))
                  {
                    this.botUser = "";
                    updateBottomOverlay();
                  }
                  if ((paramInt2 != 0) || (this.currentEncryptedChat == null) || (this.endReached[0] != 0)) {
                    break label4236;
                  }
                  this.first = true;
                  if (this.chatListView != null) {
                    this.chatListView.setEmptyView(null);
                  }
                  if (this.emptyViewContainer != null) {
                    this.emptyViewContainer.setVisibility(4);
                  }
                }
                for (;;)
                {
                  checkScrollForLoad(false);
                  return;
                  j = this.chatListView.getMeasuredHeight() - paramVarArgs.getBottom() - this.chatListView.getPaddingBottom();
                  break;
                  if ((localArrayList.size() < i2) && (i3 != 3) && (i3 != 4))
                  {
                    if (!bool2) {
                      break label3830;
                    }
                    if ((this.currentEncryptedChat != null) || (this.isBroadcast)) {
                      this.endReached[j] = true;
                    }
                    if (i3 != 2) {
                      this.cacheEndReached[j] = true;
                    }
                  }
                  this.loading = false;
                  if (this.chatListView != null)
                  {
                    if ((this.first) || (this.scrollToTopOnResume) || (this.forceScrollToTop))
                    {
                      this.forceScrollToTop = false;
                      this.chatAdapter.notifyDataSetChanged();
                      if (this.scrollToMessage != null)
                      {
                        bool1 = true;
                        if (this.startLoadFromMessageOffset != Integer.MAX_VALUE)
                        {
                          paramInt1 = -this.startLoadFromMessageOffset - this.chatListView.getPaddingBottom();
                          this.startLoadFromMessageOffset = Integer.MAX_VALUE;
                          if (!this.messages.isEmpty())
                          {
                            if ((this.messages.get(this.messages.size() - 1) != this.scrollToMessage) && (this.messages.get(this.messages.size() - 2) != this.scrollToMessage)) {
                              break label3922;
                            }
                            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.loadingUpRow, paramInt1, bool1);
                          }
                          this.chatListView.invalidate();
                          if ((this.scrollToMessagePosition == 55536) || (this.scrollToMessagePosition == 56536))
                          {
                            showPagedownButton(true, true);
                            if (i != 0)
                            {
                              this.pagedownButtonCounter.setVisibility(0);
                              paramVarArgs = this.pagedownButtonCounter;
                              this.newUnreadMessageCount = i;
                              paramVarArgs.setText(String.format("%d", new Object[] { Integer.valueOf(i) }));
                            }
                          }
                          this.scrollToMessagePosition = 55536;
                          this.scrollToMessage = null;
                          if (k != 0)
                          {
                            showMentiondownButton(true, true);
                            this.mentiondownButtonCounter.setVisibility(0);
                            paramVarArgs = this.mentiondownButtonCounter;
                            this.newMentionsCount = k;
                            paramVarArgs.setText(String.format("%d", new Object[] { Integer.valueOf(k) }));
                          }
                        }
                      }
                    }
                    for (;;)
                    {
                      if (this.paused)
                      {
                        this.scrollToTopOnResume = true;
                        if (this.scrollToMessage != null) {
                          this.scrollToTopUnReadOnResume = true;
                        }
                      }
                      if ((!this.first) || (this.chatListView == null)) {
                        break;
                      }
                      this.chatListView.setEmptyView(this.emptyViewContainer);
                      break;
                      if ((i3 == 2) && ((localArrayList.size() != 0) || (!this.messages.isEmpty()))) {
                        break label3476;
                      }
                      this.endReached[j] = true;
                      break label3476;
                      if (this.scrollToMessagePosition == 56536)
                      {
                        paramInt1 = getScrollOffsetForMessage(this.scrollToMessage);
                        bool1 = false;
                        break label3562;
                      }
                      if (this.scrollToMessagePosition == 55536)
                      {
                        paramInt1 = -AndroidUtilities.dp(11.0F);
                        bool1 = false;
                        break label3562;
                      }
                      paramInt1 = this.scrollToMessagePosition;
                      break label3562;
                      this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), paramInt1, bool1);
                      break label3635;
                      moveScrollToLastMessage();
                      break label3726;
                      if (paramInt2 != 0)
                      {
                        i = 0;
                        paramInt1 = i;
                        if (this.endReached[j] != 0) {
                          if ((j != 0) || (this.mergeDialogId != 0L))
                          {
                            paramInt1 = i;
                            if (j != 1) {}
                          }
                          else
                          {
                            paramInt1 = 1;
                            this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.loadingUpRow - 1, 2);
                            this.chatAdapter.updateRows();
                          }
                        }
                        k = this.chatLayoutManager.findFirstVisibleItemPosition();
                        paramVarArgs = this.chatLayoutManager.findViewByPosition(k);
                        if (paramVarArgs == null)
                        {
                          i = 0;
                          if (paramInt1 == 0) {
                            break label4158;
                          }
                          j = 1;
                          if (paramInt2 - j > 0)
                          {
                            j = this.chatAdapter.messagesEndRow;
                            this.chatAdapter.notifyItemChanged(this.chatAdapter.loadingUpRow);
                            paramVarArgs = this.chatAdapter;
                            if (paramInt1 == 0) {
                              break label4164;
                            }
                          }
                        }
                        for (paramInt1 = 1;; paramInt1 = 0)
                        {
                          paramVarArgs.notifyItemRangeInserted(j, paramInt2 - paramInt1);
                          if (k == -1) {
                            break;
                          }
                          this.chatLayoutManager.scrollToPositionWithOffset(k, i);
                          break;
                          i = this.chatListView.getMeasuredHeight() - paramVarArgs.getBottom() - this.chatListView.getPaddingBottom();
                          break label4056;
                          j = 0;
                          break label4063;
                        }
                      }
                      if ((this.endReached[j] != 0) && (((j == 0) && (this.mergeDialogId == 0L)) || (j == 1))) {
                        this.chatAdapter.notifyItemRemoved(this.chatAdapter.loadingUpRow);
                      }
                    }
                  }
                  this.scrollToTopOnResume = true;
                  if (this.scrollToMessage == null) {
                    break label3253;
                  }
                  this.scrollToTopUnReadOnResume = true;
                  break label3253;
                  if (this.progressView != null) {
                    this.progressView.setVisibility(4);
                  }
                }
                if (paramInt1 == NotificationCenter.emojiDidLoaded)
                {
                  if (this.chatListView != null) {
                    this.chatListView.invalidateViews();
                  }
                  if (this.replyObjectTextView != null) {
                    this.replyObjectTextView.invalidate();
                  }
                  if (this.alertTextView != null) {
                    this.alertTextView.invalidate();
                  }
                  if (this.pinnedMessageTextView != null) {
                    this.pinnedMessageTextView.invalidate();
                  }
                  if (this.mentionListView != null) {
                    this.mentionListView.invalidateViews();
                  }
                }
                else
                {
                  if (paramInt1 == NotificationCenter.updateInterfaces)
                  {
                    i = ((Integer)paramVarArgs[0]).intValue();
                    if (((i & 0x1) != 0) || ((i & 0x10) != 0))
                    {
                      if (this.currentChat == null) {
                        break label4603;
                      }
                      paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
                      if (paramVarArgs != null) {
                        this.currentChat = paramVarArgs;
                      }
                    }
                    for (;;)
                    {
                      updateTitle();
                      paramInt1 = 0;
                      if (((i & 0x20) != 0) || ((i & 0x4) != 0))
                      {
                        if ((this.currentChat != null) && (this.avatarContainer != null)) {
                          this.avatarContainer.updateOnlineCount();
                        }
                        paramInt1 = 1;
                      }
                      if (((i & 0x2) != 0) || ((i & 0x8) != 0) || ((i & 0x1) != 0))
                      {
                        checkAndUpdateAvatar();
                        updateVisibleRows();
                      }
                      if ((i & 0x40) != 0) {
                        paramInt1 = 1;
                      }
                      paramInt2 = paramInt1;
                      if ((i & 0x2000) != 0)
                      {
                        paramInt2 = paramInt1;
                        if (ChatObject.isChannel(this.currentChat))
                        {
                          paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
                          if (paramVarArgs == null) {
                            break;
                          }
                          this.currentChat = paramVarArgs;
                          paramInt1 = 1;
                          updateBottomOverlay();
                          paramInt2 = paramInt1;
                          if (this.chatActivityEnterView != null)
                          {
                            this.chatActivityEnterView.setDialogId(this.dialog_id, this.currentAccount);
                            paramInt2 = paramInt1;
                          }
                        }
                      }
                      if ((this.avatarContainer != null) && (paramInt2 != 0)) {
                        this.avatarContainer.updateSubtitle();
                      }
                      if ((i & 0x80) == 0) {
                        break;
                      }
                      updateContactStatus();
                      return;
                      if (this.currentUser != null)
                      {
                        paramVarArgs = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(this.currentUser.id));
                        if (paramVarArgs != null) {
                          this.currentUser = paramVarArgs;
                        }
                      }
                    }
                  }
                  if (paramInt1 == NotificationCenter.didReceivedNewMessages)
                  {
                    if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
                    {
                      int i5 = UserConfig.getInstance(this.currentAccount).getClientUserId();
                      m = 0;
                      j = 0;
                      n = 0;
                      localObject6 = (ArrayList)paramVarArgs[1];
                      if ((this.currentEncryptedChat != null) && (((ArrayList)localObject6).size() == 1))
                      {
                        paramVarArgs = (MessageObject)((ArrayList)localObject6).get(0);
                        if ((this.currentEncryptedChat != null) && (paramVarArgs.isOut()) && (paramVarArgs.messageOwner.action != null) && ((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((paramVarArgs.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL)) && (getParentActivity() != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 17) && (this.currentEncryptedChat.ttl > 0) && (this.currentEncryptedChat.ttl <= 60))
                        {
                          paramVarArgs = new AlertDialog.Builder(getParentActivity());
                          paramVarArgs.setTitle(LocaleController.getString("AppName", 2131492981));
                          paramVarArgs.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
                          paramVarArgs.setMessage(LocaleController.formatString("CompatibilityChat", 2131493280, new Object[] { this.currentUser.first_name, this.currentUser.first_name }));
                          showDialog(paramVarArgs.create());
                        }
                      }
                      if ((this.currentChat != null) || (this.inlineReturn != 0L))
                      {
                        paramInt1 = 0;
                        if (paramInt1 < ((ArrayList)localObject6).size())
                        {
                          paramVarArgs = (MessageObject)((ArrayList)localObject6).get(paramInt1);
                          if (this.currentChat != null) {
                            if ((((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) && (paramVarArgs.messageOwner.action.user_id == i5)) || (((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser)) && (paramVarArgs.messageOwner.action.users.contains(Integer.valueOf(i5)))))
                            {
                              paramVarArgs = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(this.currentChat.id));
                              if (paramVarArgs != null)
                              {
                                this.currentChat = paramVarArgs;
                                checkActionBarMenu();
                                updateBottomOverlay();
                                if (this.avatarContainer != null) {
                                  this.avatarContainer.updateSubtitle();
                                }
                              }
                            }
                          }
                          while ((this.inlineReturn == 0L) || (paramVarArgs.messageOwner.reply_markup == null)) {
                            for (;;)
                            {
                              paramInt1 += 1;
                              break;
                              if ((paramVarArgs.messageOwner.reply_to_msg_id != 0) && (paramVarArgs.replyMessageObject == null))
                              {
                                paramVarArgs.replyMessageObject = ((MessageObject)this.messagesDict[0].get(paramVarArgs.messageOwner.reply_to_msg_id));
                                if ((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageActionPinMessage)) {
                                  paramVarArgs.generatePinMessageText(null, null);
                                }
                                for (;;)
                                {
                                  if ((!paramVarArgs.isMegagroup()) || (paramVarArgs.replyMessageObject == null) || (paramVarArgs.replyMessageObject.messageOwner == null)) {
                                    break label5218;
                                  }
                                  paramVarArgs = paramVarArgs.replyMessageObject.messageOwner;
                                  paramVarArgs.flags |= 0x80000000;
                                  break;
                                  if ((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageActionGameScore)) {
                                    paramVarArgs.generateGameMessageText(null);
                                  } else if ((paramVarArgs.messageOwner.action instanceof TLRPC.TL_messageActionPaymentSent)) {
                                    paramVarArgs.generatePaymentSentMessageText(null);
                                  }
                                }
                              }
                            }
                          }
                          paramInt2 = 0;
                          if (paramInt2 < paramVarArgs.messageOwner.reply_markup.rows.size())
                          {
                            localObject1 = (TLRPC.TL_keyboardButtonRow)paramVarArgs.messageOwner.reply_markup.rows.get(paramInt2);
                            i = 0;
                          }
                          for (;;)
                          {
                            if (i < ((TLRPC.TL_keyboardButtonRow)localObject1).buttons.size())
                            {
                              localObject2 = (TLRPC.KeyboardButton)((TLRPC.TL_keyboardButtonRow)localObject1).buttons.get(i);
                              if ((localObject2 instanceof TLRPC.TL_keyboardButtonSwitchInline)) {
                                processSwitchButton((TLRPC.TL_keyboardButtonSwitchInline)localObject2);
                              }
                            }
                            else
                            {
                              paramInt2 += 1;
                              break label5241;
                              break;
                            }
                            i += 1;
                          }
                        }
                      }
                      paramInt2 = 0;
                      paramInt1 = 0;
                      if (this.forwardEndReached[0] == 0)
                      {
                        i2 = Integer.MIN_VALUE;
                        i = Integer.MIN_VALUE;
                        if (this.currentEncryptedChat != null) {
                          i = Integer.MAX_VALUE;
                        }
                        k = 0;
                        paramInt2 = j;
                        j = k;
                        while (j < ((ArrayList)localObject6).size())
                        {
                          localObject1 = (MessageObject)((ArrayList)localObject6).get(j);
                          if ((this.currentUser != null) && (((this.currentUser.bot) && (((MessageObject)localObject1).isOut())) || (this.currentUser.id == i5))) {
                            ((MessageObject)localObject1).setIsRead();
                          }
                          if ((this.avatarContainer != null) && (this.currentEncryptedChat != null) && (((MessageObject)localObject1).messageOwner.action != null) && ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((((MessageObject)localObject1).messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL))) {
                            this.avatarContainer.setTime(((TLRPC.TL_decryptedMessageActionSetMessageTTL)((MessageObject)localObject1).messageOwner.action.encryptedAction).ttl_seconds);
                          }
                          if ((((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo))
                          {
                            localObject2 = new Bundle();
                            ((Bundle)localObject2).putInt("chat_id", ((MessageObject)localObject1).messageOwner.action.channel_id);
                            if (this.parentLayout.fragmentsStack.size() > 0) {}
                            for (paramVarArgs = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);; paramVarArgs = null)
                            {
                              AndroidUtilities.runOnUIThread(new Runnable()
                              {
                                public void run()
                                {
                                  ActionBarLayout localActionBarLayout = ChatActivity.this.parentLayout;
                                  if (paramVarArgs != null) {
                                    NotificationCenter.getInstance(ChatActivity.this.currentAccount).removeObserver(paramVarArgs, NotificationCenter.closeChats);
                                  }
                                  NotificationCenter.getInstance(ChatActivity.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                                  localActionBarLayout.presentFragment(new ChatActivity(localObject2), true);
                                  AndroidUtilities.runOnUIThread(new Runnable()
                                  {
                                    public void run()
                                    {
                                      MessagesController.getInstance(ChatActivity.this.currentAccount).loadFullChat(ChatActivity.84.this.val$channel_id, 0, true);
                                    }
                                  }, 1000L);
                                }
                              });
                              return;
                            }
                          }
                          k = paramInt1;
                          if (this.currentChat != null)
                          {
                            k = paramInt1;
                            if (this.currentChat.megagroup) {
                              if (!(((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser))
                              {
                                k = paramInt1;
                                if (!(((MessageObject)localObject1).messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
                              }
                              else
                              {
                                k = 1;
                              }
                            }
                          }
                          if ((j == 0) && (((MessageObject)localObject1).messageOwner.id < 0) && (((MessageObject)localObject1).type == 5)) {
                            this.needAnimateToMessage = ((MessageObject)localObject1);
                          }
                          if ((((MessageObject)localObject1).isOut()) && (((MessageObject)localObject1).isSending()))
                          {
                            scrollToLastMessage(false);
                            return;
                          }
                          m = i2;
                          n = i;
                          i1 = paramInt2;
                          if (((MessageObject)localObject1).type >= 0)
                          {
                            if (this.messagesDict[0].indexOfKey(((MessageObject)localObject1).getId()) >= 0)
                            {
                              i1 = paramInt2;
                              n = i;
                              m = i2;
                            }
                          }
                          else
                          {
                            j += 1;
                            i2 = m;
                            i = n;
                            paramInt1 = k;
                            paramInt2 = i1;
                            continue;
                          }
                          ((MessageObject)localObject1).checkLayout();
                          i2 = Math.max(i2, ((MessageObject)localObject1).messageOwner.date);
                          if (((MessageObject)localObject1).getId() > 0)
                          {
                            paramInt1 = Math.max(((MessageObject)localObject1).getId(), i);
                            this.last_message_id = Math.max(this.last_message_id, ((MessageObject)localObject1).getId());
                          }
                          for (;;)
                          {
                            if ((((MessageObject)localObject1).messageOwner.mentioned) && (((MessageObject)localObject1).isContentUnread())) {
                              this.newMentionsCount += 1;
                            }
                            this.newUnreadMessageCount += 1;
                            if (((MessageObject)localObject1).type != 10)
                            {
                              m = i2;
                              n = paramInt1;
                              i1 = paramInt2;
                              if (((MessageObject)localObject1).type != 11) {
                                break;
                              }
                            }
                            i1 = 1;
                            m = i2;
                            n = paramInt1;
                            break;
                            paramInt1 = i;
                            if (this.currentEncryptedChat != null)
                            {
                              paramInt1 = Math.min(((MessageObject)localObject1).getId(), i);
                              this.last_message_id = Math.min(this.last_message_id, ((MessageObject)localObject1).getId());
                            }
                          }
                        }
                        if ((this.newUnreadMessageCount != 0) && (this.pagedownButtonCounter != null))
                        {
                          this.pagedownButtonCounter.setVisibility(0);
                          this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
                        }
                        if ((this.newMentionsCount != 0) && (this.mentiondownButtonCounter != null))
                        {
                          this.mentiondownButtonCounter.setVisibility(0);
                          this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                          showMentiondownButton(true, true);
                        }
                        updateVisibleRows();
                        i = paramInt1;
                      }
                      for (;;)
                      {
                        if ((!this.messages.isEmpty()) && (this.botUser != null) && (this.botUser.length() == 0))
                        {
                          this.botUser = null;
                          updateBottomOverlay();
                        }
                        if (paramInt2 != 0)
                        {
                          updateTitle();
                          checkAndUpdateAvatar();
                        }
                        if (i == 0) {
                          break;
                        }
                        MessagesController.getInstance(this.currentAccount).loadFullChat(this.currentChat.id, 0, true);
                        return;
                        localObject1 = null;
                        i = 1;
                        paramVarArgs = null;
                        if (BuildVars.LOGS_ENABLED) {
                          FileLog.d("received new messages " + ((ArrayList)localObject6).size() + " in dialog " + this.dialog_id);
                        }
                        i2 = 0;
                        paramInt1 = paramInt2;
                        while (i2 < ((ArrayList)localObject6).size())
                        {
                          paramInt2 = -1;
                          localObject7 = (MessageObject)((ArrayList)localObject6).get(i2);
                          if ((this.currentUser != null) && (((this.currentUser.bot) && (((MessageObject)localObject7).isOut())) || (this.currentUser.id == i5))) {
                            ((MessageObject)localObject7).setIsRead();
                          }
                          if ((this.avatarContainer != null) && (this.currentEncryptedChat != null) && (((MessageObject)localObject7).messageOwner.action != null) && ((((MessageObject)localObject7).messageOwner.action instanceof TLRPC.TL_messageEncryptedAction)) && ((((MessageObject)localObject7).messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL))) {
                            this.avatarContainer.setTime(((TLRPC.TL_decryptedMessageActionSetMessageTTL)((MessageObject)localObject7).messageOwner.action.encryptedAction).ttl_seconds);
                          }
                          k = n;
                          localObject3 = localObject1;
                          i1 = paramInt1;
                          i3 = i;
                          int i4 = m;
                          localObject4 = paramVarArgs;
                          if (((MessageObject)localObject7).type >= 0)
                          {
                            if (this.messagesDict[0].indexOfKey(((MessageObject)localObject7).getId()) >= 0)
                            {
                              localObject4 = paramVarArgs;
                              i4 = m;
                              i3 = i;
                              i1 = paramInt1;
                              localObject3 = localObject1;
                              k = n;
                            }
                          }
                          else
                          {
                            i2 += 1;
                            n = k;
                            localObject1 = localObject3;
                            paramInt1 = i1;
                            i = i3;
                            m = i4;
                            paramVarArgs = (Object[])localObject4;
                            continue;
                          }
                          if ((i2 == 0) && (((MessageObject)localObject7).messageOwner.id < 0) && (((MessageObject)localObject7).type == 5)) {
                            this.animatingMessageObjects.add(localObject7);
                          }
                          if (((MessageObject)localObject7).hasValidGroupId())
                          {
                            localObject3 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject7).getGroupId());
                            localObject2 = localObject3;
                            if (localObject3 == null)
                            {
                              localObject2 = new MessageObject.GroupedMessages();
                              ((MessageObject.GroupedMessages)localObject2).groupId = ((MessageObject)localObject7).getGroupId();
                              this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject2).groupId, localObject2);
                            }
                            localObject3 = localObject1;
                            if (localObject1 == null) {
                              localObject3 = new LongSparseArray();
                            }
                            ((LongSparseArray)localObject3).put(((MessageObject.GroupedMessages)localObject2).groupId, localObject2);
                            ((MessageObject.GroupedMessages)localObject2).messages.add(localObject7);
                            localObject1 = localObject3;
                            j = paramInt2;
                            if (localObject2 != null)
                            {
                              if (((MessageObject.GroupedMessages)localObject2).messages.size() <= 1) {
                                break label7015;
                              }
                              localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject2).messages.get(((MessageObject.GroupedMessages)localObject2).messages.size() - 2);
                              j = paramInt2;
                              if (localObject2 != null) {
                                j = this.messages.indexOf(localObject2);
                              }
                            }
                            paramInt2 = j;
                            if (j == -1)
                            {
                              if ((((MessageObject)localObject7).messageOwner.id >= 0) && (!this.messages.isEmpty())) {
                                break label7021;
                              }
                              paramInt2 = 0;
                            }
                            localObject2 = paramVarArgs;
                            if (this.currentEncryptedChat != null)
                            {
                              localObject2 = paramVarArgs;
                              if ((((MessageObject)localObject7).messageOwner.media instanceof TLRPC.TL_messageMediaWebPage))
                              {
                                localObject2 = paramVarArgs;
                                if ((((MessageObject)localObject7).messageOwner.media.webpage instanceof TLRPC.TL_webPageUrlPending))
                                {
                                  localObject2 = paramVarArgs;
                                  if (paramVarArgs == null) {
                                    localObject2 = new HashMap();
                                  }
                                  localObject3 = (ArrayList)((HashMap)localObject2).get(((MessageObject)localObject7).messageOwner.media.webpage.url);
                                  paramVarArgs = (Object[])localObject3;
                                  if (localObject3 == null)
                                  {
                                    paramVarArgs = new ArrayList();
                                    ((HashMap)localObject2).put(((MessageObject)localObject7).messageOwner.media.webpage.url, paramVarArgs);
                                  }
                                  paramVarArgs.add(localObject7);
                                }
                              }
                            }
                            ((MessageObject)localObject7).checkLayout();
                            if (!(((MessageObject)localObject7).messageOwner.action instanceof TLRPC.TL_messageActionChatMigrateTo)) {
                              break label7276;
                            }
                            localObject2 = new Bundle();
                            ((Bundle)localObject2).putInt("chat_id", ((MessageObject)localObject7).messageOwner.action.channel_id);
                            if (this.parentLayout.fragmentsStack.size() <= 0) {
                              break label7271;
                            }
                          }
                          for (paramVarArgs = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);; paramVarArgs = null)
                          {
                            AndroidUtilities.runOnUIThread(new Runnable()
                            {
                              public void run()
                              {
                                ActionBarLayout localActionBarLayout = ChatActivity.this.parentLayout;
                                if (paramVarArgs != null) {
                                  NotificationCenter.getInstance(ChatActivity.this.currentAccount).removeObserver(paramVarArgs, NotificationCenter.closeChats);
                                }
                                NotificationCenter.getInstance(ChatActivity.this.currentAccount).postNotificationName(NotificationCenter.closeChats, new Object[0]);
                                localActionBarLayout.presentFragment(new ChatActivity(localObject2), true);
                                AndroidUtilities.runOnUIThread(new Runnable()
                                {
                                  public void run()
                                  {
                                    MessagesController.getInstance(ChatActivity.this.currentAccount).loadFullChat(ChatActivity.85.this.val$channel_id, 0, true);
                                  }
                                }, 1000L);
                              }
                            });
                            if (localObject1 == null) {
                              break;
                            }
                            paramInt1 = 0;
                            while (paramInt1 < ((LongSparseArray)localObject1).size())
                            {
                              ((MessageObject.GroupedMessages)((LongSparseArray)localObject1).valueAt(paramInt1)).calculate();
                              paramInt1 += 1;
                            }
                            break;
                            localObject2 = null;
                            break label6637;
                            localObject2 = null;
                            break label6680;
                            i1 = this.messages.size();
                            paramInt2 = 0;
                            for (;;)
                            {
                              k = j;
                              if (paramInt2 < i1)
                              {
                                localObject2 = (MessageObject)this.messages.get(paramInt2);
                                if ((((MessageObject)localObject2).type < 0) || (((MessageObject)localObject2).messageOwner.date <= 0) || (((((MessageObject)localObject2).messageOwner.id <= 0) || (((MessageObject)localObject7).messageOwner.id <= 0) || (((MessageObject)localObject2).messageOwner.id >= ((MessageObject)localObject7).messageOwner.id)) && (((MessageObject)localObject2).messageOwner.date >= ((MessageObject)localObject7).messageOwner.date))) {
                                  break label7264;
                                }
                                if (((MessageObject)localObject2).getGroupId() == 0L) {
                                  break label7228;
                                }
                                localObject3 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject2).getGroupId());
                                localObject2 = localObject3;
                                if (localObject3 != null)
                                {
                                  localObject2 = localObject3;
                                  if (((MessageObject.GroupedMessages)localObject3).messages.size() == 0) {
                                    localObject2 = null;
                                  }
                                }
                                if (localObject2 != null) {
                                  break label7234;
                                }
                              }
                              for (k = paramInt2;; k = this.messages.indexOf(((MessageObject.GroupedMessages)localObject2).messages.get(((MessageObject.GroupedMessages)localObject2).messages.size() - 1)))
                              {
                                if (k != -1)
                                {
                                  paramInt2 = k;
                                  if (k <= this.messages.size()) {
                                    break;
                                  }
                                }
                                paramInt2 = this.messages.size();
                                break;
                                localObject2 = null;
                                break label7188;
                              }
                              paramInt2 += 1;
                            }
                          }
                          j = paramInt1;
                          if (this.currentChat != null)
                          {
                            j = paramInt1;
                            if (this.currentChat.megagroup) {
                              if (!(((MessageObject)localObject7).messageOwner.action instanceof TLRPC.TL_messageActionChatAddUser))
                              {
                                j = paramInt1;
                                if (!(((MessageObject)localObject7).messageOwner.action instanceof TLRPC.TL_messageActionChatDeleteUser)) {}
                              }
                              else
                              {
                                j = 1;
                              }
                            }
                          }
                          if ((this.minDate[0] == 0) || (((MessageObject)localObject7).messageOwner.date < this.minDate[0])) {
                            this.minDate[0] = ((MessageObject)localObject7).messageOwner.date;
                          }
                          if (((MessageObject)localObject7).isOut())
                          {
                            removeUnreadPlane(true);
                            n = 1;
                          }
                          if (((MessageObject)localObject7).getId() > 0)
                          {
                            this.maxMessageId[0] = Math.min(((MessageObject)localObject7).getId(), this.maxMessageId[0]);
                            this.minMessageId[0] = Math.max(((MessageObject)localObject7).getId(), this.minMessageId[0]);
                          }
                          for (;;)
                          {
                            this.maxDate[0] = Math.max(this.maxDate[0], ((MessageObject)localObject7).messageOwner.date);
                            this.messagesDict[0].put(((MessageObject)localObject7).getId(), localObject7);
                            localObject3 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject7).dateKey);
                            paramInt1 = paramInt2;
                            if (paramInt2 > this.messages.size()) {
                              paramInt1 = this.messages.size();
                            }
                            paramVarArgs = (Object[])localObject3;
                            if (localObject3 == null)
                            {
                              localObject3 = new ArrayList();
                              this.messagesByDays.put(((MessageObject)localObject7).dateKey, localObject3);
                              paramVarArgs = new TLRPC.TL_message();
                              paramVarArgs.message = LocaleController.formatDateChat(((MessageObject)localObject7).messageOwner.date);
                              paramVarArgs.id = 0;
                              paramVarArgs.date = ((MessageObject)localObject7).messageOwner.date;
                              paramVarArgs = new MessageObject(this.currentAccount, paramVarArgs, false);
                              paramVarArgs.type = 10;
                              paramVarArgs.contentType = 1;
                              paramVarArgs.isDateObject = true;
                              this.messages.add(paramInt1, paramVarArgs);
                              paramVarArgs = (Object[])localObject3;
                              if (this.chatAdapter != null)
                              {
                                this.chatAdapter.notifyItemInserted(paramInt1);
                                paramVarArgs = (Object[])localObject3;
                              }
                            }
                            i3 = paramInt1;
                            paramInt2 = i;
                            if (!((MessageObject)localObject7).isOut())
                            {
                              k = paramInt1;
                              i1 = i;
                              if (this.paused)
                              {
                                k = paramInt1;
                                i1 = i;
                                if (paramInt1 == 0)
                                {
                                  paramInt2 = paramInt1;
                                  if (!this.scrollToTopUnReadOnResume)
                                  {
                                    paramInt2 = paramInt1;
                                    if (this.unreadMessageObject != null)
                                    {
                                      removeMessageObject(this.unreadMessageObject);
                                      paramInt2 = paramInt1;
                                      if (paramInt1 > 0) {
                                        paramInt2 = paramInt1 - 1;
                                      }
                                      this.unreadMessageObject = null;
                                    }
                                  }
                                  k = paramInt2;
                                  i1 = i;
                                  if (this.unreadMessageObject == null)
                                  {
                                    localObject3 = new TLRPC.TL_message();
                                    ((TLRPC.Message)localObject3).message = "";
                                    ((TLRPC.Message)localObject3).id = 0;
                                    localObject3 = new MessageObject(this.currentAccount, (TLRPC.Message)localObject3, false);
                                    ((MessageObject)localObject3).type = 6;
                                    ((MessageObject)localObject3).contentType = 2;
                                    this.messages.add(0, localObject3);
                                    if (this.chatAdapter != null) {
                                      this.chatAdapter.notifyItemInserted(0);
                                    }
                                    this.unreadMessageObject = ((MessageObject)localObject3);
                                    this.scrollToMessage = this.unreadMessageObject;
                                    this.scrollToMessagePosition = 55536;
                                    i1 = 0;
                                    this.scrollToTopUnReadOnResume = true;
                                    k = paramInt2;
                                  }
                                }
                              }
                              i3 = k;
                              paramInt2 = i1;
                              if (this.unreadMessageObject != null)
                              {
                                paramInt2 = 1;
                                i3 = k;
                              }
                            }
                            paramVarArgs.add(0, localObject7);
                            this.messages.add(i3, localObject7);
                            if (this.chatAdapter != null)
                            {
                              this.chatAdapter.notifyItemChanged(i3);
                              this.chatAdapter.notifyItemInserted(i3);
                            }
                            if ((!((MessageObject)localObject7).isOut()) && (((MessageObject)localObject7).messageOwner.mentioned) && (((MessageObject)localObject7).isContentUnread())) {
                              this.newMentionsCount += 1;
                            }
                            this.newUnreadMessageCount += 1;
                            if (((MessageObject)localObject7).type != 10)
                            {
                              k = n;
                              localObject3 = localObject1;
                              i1 = j;
                              i3 = paramInt2;
                              i4 = m;
                              localObject4 = localObject2;
                              if (((MessageObject)localObject7).type != 11) {
                                break;
                              }
                            }
                            i4 = 1;
                            k = n;
                            localObject3 = localObject1;
                            i1 = j;
                            i3 = paramInt2;
                            localObject4 = localObject2;
                            break;
                            if (this.currentEncryptedChat != null)
                            {
                              this.maxMessageId[0] = Math.max(((MessageObject)localObject7).getId(), this.maxMessageId[0]);
                              this.minMessageId[0] = Math.min(((MessageObject)localObject7).getId(), this.minMessageId[0]);
                            }
                          }
                        }
                        if (paramVarArgs != null) {
                          MessagesController.getInstance(this.currentAccount).reloadWebPages(this.dialog_id, paramVarArgs);
                        }
                        if (localObject1 != null)
                        {
                          paramInt2 = 0;
                          while (paramInt2 < ((LongSparseArray)localObject1).size())
                          {
                            paramVarArgs = (MessageObject.GroupedMessages)((LongSparseArray)localObject1).valueAt(paramInt2);
                            k = paramVarArgs.posArray.size();
                            paramVarArgs.calculate();
                            j = paramVarArgs.posArray.size();
                            if ((j - k > 0) && (this.chatAdapter != null))
                            {
                              k = this.messages.indexOf(paramVarArgs.messages.get(paramVarArgs.messages.size() - 1));
                              if (k >= 0) {
                                this.chatAdapter.notifyItemRangeChanged(k, j);
                              }
                            }
                            paramInt2 += 1;
                          }
                        }
                        if (this.progressView != null) {
                          this.progressView.setVisibility(4);
                        }
                        if (this.chatAdapter != null)
                        {
                          if (i != 0) {
                            this.chatAdapter.updateRowWithMessageObject(this.unreadMessageObject);
                          }
                          if ((this.chatListView == null) || (this.chatAdapter == null)) {
                            break label8467;
                          }
                          i = this.chatLayoutManager.findFirstVisibleItemPosition();
                          paramInt2 = i;
                          if (i == -1) {
                            paramInt2 = 0;
                          }
                          if ((paramInt2 != 0) && (n == 0)) {
                            break label8409;
                          }
                          this.newUnreadMessageCount = 0;
                          if (!this.firstLoading)
                          {
                            if (!this.paused) {
                              break label8397;
                            }
                            this.scrollToTopOnResume = true;
                          }
                        }
                        for (;;)
                        {
                          i = paramInt1;
                          paramInt2 = m;
                          if (this.newMentionsCount == 0) {
                            break;
                          }
                          i = paramInt1;
                          paramInt2 = m;
                          if (this.mentiondownButtonCounter == null) {
                            break;
                          }
                          this.mentiondownButtonCounter.setVisibility(0);
                          this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                          showMentiondownButton(true, true);
                          i = paramInt1;
                          paramInt2 = m;
                          break;
                          this.scrollToTopOnResume = true;
                          break label8246;
                          this.forceScrollToTop = true;
                          moveScrollToLastMessage();
                          continue;
                          if ((this.newUnreadMessageCount != 0) && (this.pagedownButtonCounter != null))
                          {
                            this.pagedownButtonCounter.setVisibility(0);
                            this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
                          }
                          showPagedownButton(true, true);
                        }
                        this.scrollToTopOnResume = true;
                        i = paramInt1;
                        paramInt2 = m;
                      }
                    }
                  }
                  else if (paramInt1 == NotificationCenter.closeChats)
                  {
                    if ((paramVarArgs != null) && (paramVarArgs.length > 0))
                    {
                      if (((Long)paramVarArgs[0]).longValue() == this.dialog_id) {
                        finishFragment();
                      }
                    }
                    else {
                      removeSelfFromStack();
                    }
                  }
                  else
                  {
                    if (paramInt1 == NotificationCenter.messagesRead)
                    {
                      localObject1 = (SparseLongArray)paramVarArgs[0];
                      paramVarArgs = (SparseLongArray)paramVarArgs[1];
                      j = 0;
                      i = 0;
                      paramInt1 = j;
                      if (localObject1 != null)
                      {
                        paramInt2 = 0;
                        k = ((SparseLongArray)localObject1).size();
                        for (;;)
                        {
                          paramInt1 = j;
                          if (paramInt2 >= k) {
                            break label8692;
                          }
                          paramInt1 = ((SparseLongArray)localObject1).keyAt(paramInt2);
                          l = ((SparseLongArray)localObject1).get(paramInt1);
                          if (paramInt1 == this.dialog_id) {
                            break;
                          }
                          paramInt2 += 1;
                        }
                        paramInt2 = 0;
                        j = this.messages.size();
                        paramInt1 = i;
                        if (paramInt2 < j)
                        {
                          localObject1 = (MessageObject)this.messages.get(paramInt2);
                          i = paramInt1;
                          if (((MessageObject)localObject1).isOut()) {
                            break label8844;
                          }
                          i = paramInt1;
                          if (((MessageObject)localObject1).getId() <= 0) {
                            break label8844;
                          }
                          i = paramInt1;
                          if (((MessageObject)localObject1).getId() > (int)l) {
                            break label8844;
                          }
                          if (((MessageObject)localObject1).isUnread()) {}
                        }
                        else
                        {
                          removeUnreadPlane(false);
                        }
                      }
                      else if (paramInt1 != 0)
                      {
                        if (this.newUnreadMessageCount < 0) {
                          this.newUnreadMessageCount = 0;
                        }
                        if (this.pagedownButtonCounter != null)
                        {
                          this.pagedownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newUnreadMessageCount) }));
                          if (this.newUnreadMessageCount > 0) {
                            break label8854;
                          }
                          if (this.pagedownButtonCounter.getVisibility() != 4) {
                            this.pagedownButtonCounter.setVisibility(4);
                          }
                        }
                      }
                      for (;;)
                      {
                        paramInt2 = paramInt1;
                        if (paramVarArgs == null) {
                          break label8947;
                        }
                        i = 0;
                        k = paramVarArgs.size();
                        for (;;)
                        {
                          paramInt2 = paramInt1;
                          if (i >= k) {
                            break label8947;
                          }
                          paramInt2 = paramVarArgs.keyAt(i);
                          j = (int)paramVarArgs.get(paramInt2);
                          if (paramInt2 == this.dialog_id) {
                            break;
                          }
                          i += 1;
                        }
                        ((MessageObject)localObject1).setIsRead();
                        i = 1;
                        this.newUnreadMessageCount -= 1;
                        paramInt2 += 1;
                        paramInt1 = i;
                        break;
                        if (this.pagedownButtonCounter.getVisibility() != 0) {
                          this.pagedownButtonCounter.setVisibility(0);
                        }
                      }
                      i = 0;
                      k = this.messages.size();
                      for (;;)
                      {
                        paramInt2 = paramInt1;
                        if (i < k)
                        {
                          paramVarArgs = (MessageObject)this.messages.get(i);
                          paramInt2 = paramInt1;
                          if (!paramVarArgs.isOut()) {
                            break label8962;
                          }
                          paramInt2 = paramInt1;
                          if (paramVarArgs.getId() <= 0) {
                            break label8962;
                          }
                          paramInt2 = paramInt1;
                          if (paramVarArgs.getId() > j) {
                            break label8962;
                          }
                          if (!paramVarArgs.isUnread()) {
                            paramInt2 = paramInt1;
                          }
                        }
                        else
                        {
                          if (paramInt2 == 0) {
                            break;
                          }
                          updateVisibleRows();
                          return;
                        }
                        paramVarArgs.setIsRead();
                        paramInt2 = 1;
                        i += 1;
                        paramInt1 = paramInt2;
                      }
                    }
                    if (paramInt1 != NotificationCenter.historyCleared) {
                      break;
                    }
                    if (((Long)paramVarArgs[0]).longValue() == this.dialog_id)
                    {
                      k = ((Integer)paramVarArgs[1]).intValue();
                      paramInt2 = 0;
                      paramInt1 = 0;
                      if (paramInt1 < this.messages.size())
                      {
                        paramVarArgs = (MessageObject)this.messages.get(paramInt1);
                        m = paramVarArgs.getId();
                        i = paramInt1;
                        j = paramInt2;
                        if (m > 0)
                        {
                          if (m <= k) {
                            break label9076;
                          }
                          j = paramInt2;
                        }
                        for (i = paramInt1;; i = paramInt1)
                        {
                          paramInt1 = i + 1;
                          paramInt2 = j;
                          break;
                          if ((this.info != null) && (this.info.pinned_msg_id == m))
                          {
                            this.pinnedMessageObject = null;
                            this.info.pinned_msg_id = 0;
                            MessagesStorage.getInstance(this.currentAccount).updateChannelPinnedMessage(this.info.id, 0);
                            updatePinnedMessageView(true);
                          }
                          this.messages.remove(paramInt1);
                          paramInt2 = paramInt1 - 1;
                          this.messagesDict[0].remove(m);
                          localObject1 = (ArrayList)this.messagesByDays.get(paramVarArgs.dateKey);
                          paramInt1 = paramInt2;
                          if (localObject1 != null)
                          {
                            ((ArrayList)localObject1).remove(paramVarArgs);
                            paramInt1 = paramInt2;
                            if (((ArrayList)localObject1).isEmpty())
                            {
                              this.messagesByDays.remove(paramVarArgs.dateKey);
                              paramInt1 = paramInt2;
                              if (paramInt2 >= 0)
                              {
                                paramInt1 = paramInt2;
                                if (paramInt2 < this.messages.size())
                                {
                                  this.messages.remove(paramInt2);
                                  paramInt1 = paramInt2 - 1;
                                }
                              }
                            }
                          }
                          j = 1;
                        }
                      }
                      if (this.messages.isEmpty())
                      {
                        if ((this.endReached[0] != 0) || (this.loading)) {
                          break label9563;
                        }
                        if (this.progressView != null) {
                          this.progressView.setVisibility(4);
                        }
                        if (this.chatListView != null) {
                          this.chatListView.setEmptyView(null);
                        }
                        if (this.currentEncryptedChat != null) {
                          break label9514;
                        }
                        paramVarArgs = this.maxMessageId;
                        this.maxMessageId[1] = Integer.MAX_VALUE;
                        paramVarArgs[0] = Integer.MAX_VALUE;
                        paramVarArgs = this.minMessageId;
                        this.minMessageId[1] = Integer.MIN_VALUE;
                        paramVarArgs[0] = Integer.MIN_VALUE;
                        paramVarArgs = this.maxDate;
                        this.maxDate[1] = Integer.MIN_VALUE;
                        paramVarArgs[0] = Integer.MIN_VALUE;
                        paramVarArgs = this.minDate;
                        this.minDate[1] = 0;
                        paramVarArgs[0] = 0;
                        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                        paramVarArgs = MessagesController.getInstance(this.currentAccount);
                        l = this.dialog_id;
                        if (this.cacheEndReached[0] != 0) {
                          break label9557;
                        }
                        bool1 = true;
                        paramInt1 = this.minDate[0];
                        i = this.classGuid;
                        bool2 = ChatObject.isChannel(this.currentChat);
                        j = this.lastLoadIndex;
                        this.lastLoadIndex = (j + 1);
                        paramVarArgs.loadMessages(l, 30, 0, 0, bool1, paramInt1, i, 0, 0, bool2, j);
                        this.loading = true;
                      }
                      for (;;)
                      {
                        if ((paramInt2 == 0) || (this.chatAdapter == null)) {
                          break label9634;
                        }
                        removeUnreadPlane(true);
                        this.chatAdapter.notifyDataSetChanged();
                        return;
                        paramVarArgs = this.maxMessageId;
                        this.maxMessageId[1] = Integer.MIN_VALUE;
                        paramVarArgs[0] = Integer.MIN_VALUE;
                        paramVarArgs = this.minMessageId;
                        this.minMessageId[1] = Integer.MAX_VALUE;
                        paramVarArgs[0] = Integer.MAX_VALUE;
                        break;
                        bool1 = false;
                        break label9428;
                        if (this.botButtons != null)
                        {
                          this.botButtons = null;
                          if (this.chatActivityEnterView != null) {
                            this.chatActivityEnterView.setButtons(null, false);
                          }
                        }
                        if ((this.currentEncryptedChat == null) && (this.currentUser != null) && (this.currentUser.bot) && (this.botUser == null))
                        {
                          this.botUser = "";
                          updateBottomOverlay();
                        }
                      }
                    }
                  }
                }
              }
              if (paramInt1 != NotificationCenter.messagesDeleted) {
                break label10864;
              }
              localObject2 = (ArrayList)paramVarArgs[0];
              n = ((Integer)paramVarArgs[1]).intValue();
              paramInt1 = 0;
              if (ChatObject.isChannel(this.currentChat)) {
                if ((n == 0) && (this.mergeDialogId != 0L))
                {
                  paramInt1 = 1;
                  i = 0;
                  paramVarArgs = null;
                  i1 = ((ArrayList)localObject2).size();
                  paramInt2 = 0;
                  bool1 = false;
                  j = 0;
                  if (j >= i1) {
                    break label10136;
                  }
                  localObject4 = (Integer)((ArrayList)localObject2).get(j);
                  localObject3 = (MessageObject)this.messagesDict[paramInt1].get(((Integer)localObject4).intValue());
                  if ((paramInt1 == 0) && (this.info != null) && (this.info.pinned_msg_id == ((Integer)localObject4).intValue()))
                  {
                    this.pinnedMessageObject = null;
                    this.info.pinned_msg_id = 0;
                    MessagesStorage.getInstance(this.currentAccount).updateChannelPinnedMessage(n, 0);
                    updatePinnedMessageView(true);
                  }
                  localObject1 = paramVarArgs;
                  m = i;
                  k = paramInt2;
                  bool2 = bool1;
                  if (localObject3 != null)
                  {
                    i2 = this.messages.indexOf(localObject3);
                    localObject1 = paramVarArgs;
                    m = i;
                    k = paramInt2;
                    bool2 = bool1;
                    if (i2 != -1) {
                      if (this.selectedMessagesIds[paramInt1].indexOfKey(((Integer)localObject4).intValue()) >= 0)
                      {
                        paramInt2 = 1;
                        if (j != i1 - 1) {
                          break label10130;
                        }
                      }
                    }
                  }
                }
              }
              for (bool1 = true;; bool1 = false)
              {
                addToSelectedMessages((MessageObject)localObject3, false, bool1);
                localObject6 = (MessageObject)this.messages.remove(i2);
                localObject1 = paramVarArgs;
                if (((MessageObject)localObject6).getGroupId() != 0L)
                {
                  localObject6 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject6).getGroupId());
                  localObject1 = paramVarArgs;
                  if (localObject6 != null)
                  {
                    localObject1 = paramVarArgs;
                    if (paramVarArgs == null) {
                      localObject1 = new LongSparseArray();
                    }
                    ((LongSparseArray)localObject1).put(((MessageObject.GroupedMessages)localObject6).groupId, localObject6);
                    ((MessageObject.GroupedMessages)localObject6).messages.remove(localObject3);
                  }
                }
                this.messagesDict[paramInt1].remove(((Integer)localObject4).intValue());
                paramVarArgs = (ArrayList)this.messagesByDays.get(((MessageObject)localObject3).dateKey);
                if (paramVarArgs != null)
                {
                  paramVarArgs.remove(localObject3);
                  if (paramVarArgs.isEmpty())
                  {
                    this.messagesByDays.remove(((MessageObject)localObject3).dateKey);
                    if ((i2 >= 0) && (i2 < this.messages.size())) {
                      this.messages.remove(i2);
                    }
                  }
                }
                m = 1;
                bool2 = bool1;
                k = paramInt2;
                j += 1;
                paramVarArgs = (Object[])localObject1;
                i = m;
                paramInt2 = k;
                bool1 = bool2;
                break label9710;
                if (n != this.currentChat.id) {
                  break;
                }
                paramInt1 = 0;
                break label9690;
                if (n == 0) {
                  break label9690;
                }
                return;
              }
              if ((paramInt2 != 0) && (!bool1)) {
                addToSelectedMessages(null, false, true);
              }
              if (paramVarArgs != null)
              {
                paramInt1 = 0;
                if (paramInt1 < paramVarArgs.size())
                {
                  localObject1 = (MessageObject.GroupedMessages)paramVarArgs.valueAt(paramInt1);
                  if (((MessageObject.GroupedMessages)localObject1).messages.isEmpty()) {
                    this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject1).groupId);
                  }
                  for (;;)
                  {
                    paramInt1 += 1;
                    break;
                    ((MessageObject.GroupedMessages)localObject1).calculate();
                    localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
                    paramInt2 = this.messages.indexOf(localObject2);
                    if ((paramInt2 >= 0) && (this.chatAdapter != null)) {
                      this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt2, ((MessageObject.GroupedMessages)localObject1).messages.size());
                    }
                  }
                }
              }
              if (this.messages.isEmpty())
              {
                if ((this.endReached[0] != 0) || (this.loading)) {
                  break label10671;
                }
                if (this.progressView != null) {
                  this.progressView.setVisibility(4);
                }
                if (this.chatListView != null) {
                  this.chatListView.setEmptyView(null);
                }
                if (this.currentEncryptedChat == null)
                {
                  paramVarArgs = this.maxMessageId;
                  this.maxMessageId[1] = Integer.MAX_VALUE;
                  paramVarArgs[0] = Integer.MAX_VALUE;
                  paramVarArgs = this.minMessageId;
                  this.minMessageId[1] = Integer.MIN_VALUE;
                  paramVarArgs[0] = Integer.MIN_VALUE;
                  paramVarArgs = this.maxDate;
                  this.maxDate[1] = Integer.MIN_VALUE;
                  paramVarArgs[0] = Integer.MIN_VALUE;
                  paramVarArgs = this.minDate;
                  this.minDate[1] = 0;
                  paramVarArgs[0] = 0;
                  this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
                  paramVarArgs = MessagesController.getInstance(this.currentAccount);
                  l = this.dialog_id;
                  if (this.cacheEndReached[0] != 0) {
                    break label10665;
                  }
                  bool1 = true;
                  paramInt1 = this.minDate[0];
                  paramInt2 = this.classGuid;
                  bool2 = ChatObject.isChannel(this.currentChat);
                  j = this.lastLoadIndex;
                  this.lastLoadIndex = (j + 1);
                  paramVarArgs.loadMessages(l, 30, 0, 0, bool1, paramInt1, paramInt2, 0, 0, bool2, j);
                  this.loading = true;
                }
              }
              else
              {
                if (this.chatAdapter == null) {
                  break label10742;
                }
                if (i == 0) {
                  break;
                }
                removeUnreadPlane(false);
                m = this.chatListView.getChildCount();
                j = -1;
                k = 0;
                paramInt1 = 0;
                i = k;
                paramInt2 = j;
                if (paramInt1 >= m) {
                  break label10781;
                }
                localObject1 = this.chatListView.getChildAt(paramInt1);
                paramVarArgs = null;
                if (!(localObject1 instanceof ChatMessageCell)) {
                  break label10744;
                }
                paramVarArgs = ((ChatMessageCell)localObject1).getMessageObject();
              }
              for (;;)
              {
                if (paramVarArgs != null)
                {
                  paramInt2 = this.messages.indexOf(paramVarArgs);
                  if (paramInt2 >= 0) {
                    break label10764;
                  }
                }
                paramInt1 += 1;
                break label10556;
                paramVarArgs = this.maxMessageId;
                this.maxMessageId[1] = Integer.MIN_VALUE;
                paramVarArgs[0] = Integer.MIN_VALUE;
                paramVarArgs = this.minMessageId;
                this.minMessageId[1] = Integer.MAX_VALUE;
                paramVarArgs[0] = Integer.MAX_VALUE;
                break label10385;
                bool1 = false;
                break label10462;
                if (this.botButtons != null)
                {
                  this.botButtons = null;
                  if (this.chatActivityEnterView != null) {
                    this.chatActivityEnterView.setButtons(null, false);
                  }
                }
                if ((this.currentEncryptedChat != null) || (this.currentUser == null) || (!this.currentUser.bot) || (this.botUser != null)) {
                  break label10522;
                }
                this.botUser = "";
                updateBottomOverlay();
                break label10522;
                break;
                if ((localObject1 instanceof ChatActionCell)) {
                  paramVarArgs = ((ChatActionCell)localObject1).getMessageObject();
                }
              }
              paramInt2 = this.chatAdapter.messagesStartRow + paramInt2;
              i = ((View)localObject1).getBottom();
              this.chatAdapter.notifyDataSetChanged();
            } while (paramInt2 == -1);
            this.chatLayoutManager.scrollToPositionWithOffset(paramInt2, this.chatListView.getMeasuredHeight() - i - this.chatListView.getPaddingBottom());
            return;
            this.first_unread_id = 0;
            this.last_message_id = 0;
            this.createUnreadMessageAfterId = 0;
            removeMessageObject(this.unreadMessageObject);
            this.unreadMessageObject = null;
          } while (this.pagedownButtonCounter == null);
          this.pagedownButtonCounter.setVisibility(4);
          return;
          if (paramInt1 != NotificationCenter.messageReceivedByServer) {
            break;
          }
          localObject2 = (Integer)paramVarArgs[0];
          localObject1 = (MessageObject)this.messagesDict[0].get(((Integer)localObject2).intValue());
        } while (localObject1 == null);
        localObject3 = (Integer)paramVarArgs[1];
        if ((((Integer)localObject3).equals(localObject2)) || (this.messagesDict[0].indexOfKey(((Integer)localObject3).intValue()) < 0)) {
          break;
        }
        paramVarArgs = (MessageObject)this.messagesDict[0].get(((Integer)localObject2).intValue());
        this.messagesDict[0].remove(((Integer)localObject2).intValue());
      } while (paramVarArgs == null);
      paramInt1 = this.messages.indexOf(paramVarArgs);
      this.messages.remove(paramInt1);
      paramVarArgs = (ArrayList)this.messagesByDays.get(paramVarArgs.dateKey);
      paramVarArgs.remove(localObject1);
      if (paramVarArgs.isEmpty())
      {
        this.messagesByDays.remove(((MessageObject)localObject1).dateKey);
        if ((paramInt1 >= 0) && (paramInt1 < this.messages.size())) {
          this.messages.remove(paramInt1);
        }
      }
    } while (this.chatAdapter == null);
    this.chatAdapter.notifyDataSetChanged();
    return;
    paramVarArgs = (TLRPC.Message)paramVarArgs[2];
    boolean bool2 = false;
    boolean bool1 = false;
    paramInt1 = 0;
    paramInt2 = 0;
    if (paramVarArgs != null) {
      paramInt2 = paramInt1;
    }
    for (;;)
    {
      try
      {
        if (!((MessageObject)localObject1).isForwarded()) {
          continue;
        }
        paramInt2 = paramInt1;
        if (((MessageObject)localObject1).messageOwner.reply_markup == null)
        {
          paramInt2 = paramInt1;
          if (paramVarArgs.reply_markup != null) {}
        }
        else
        {
          paramInt2 = paramInt1;
          if (((MessageObject)localObject1).messageOwner.message.equals(paramVarArgs.message)) {}
        }
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
        paramInt1 = paramInt2;
        continue;
      }
      if (paramInt1 == 0)
      {
        paramInt2 = paramInt1;
        if (((MessageObject)localObject1).messageOwner.params != null)
        {
          paramInt2 = paramInt1;
          if (((MessageObject)localObject1).messageOwner.params.containsKey("query_id")) {}
        }
        else
        {
          paramInt2 = paramInt1;
          if (paramVarArgs.media == null) {
            continue;
          }
          paramInt2 = paramInt1;
          if (((MessageObject)localObject1).messageOwner.media == null) {
            continue;
          }
          paramInt2 = paramInt1;
          bool2 = paramVarArgs.media.getClass().equals(((MessageObject)localObject1).messageOwner.media.getClass());
          if (bool2) {
            continue;
          }
        }
      }
      bool1 = true;
      if ((((MessageObject)localObject1).getGroupId() != 0L) && (paramVarArgs.grouped_id != 0L))
      {
        localObject4 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject1).getGroupId());
        if (localObject4 != null) {
          this.groupedMessagesMap.put(paramVarArgs.grouped_id, localObject4);
        }
      }
      ((MessageObject)localObject1).messageOwner = paramVarArgs;
      ((MessageObject)localObject1).generateThumbs(true);
      ((MessageObject)localObject1).setType();
      bool2 = bool1;
      paramInt2 = paramInt1;
      if ((paramVarArgs.media instanceof TLRPC.TL_messageMediaGame))
      {
        ((MessageObject)localObject1).applyNewText();
        paramInt2 = paramInt1;
        bool2 = bool1;
      }
      if (paramInt2 != 0) {
        ((MessageObject)localObject1).measureInlineBotButtons();
      }
      this.messagesDict[0].remove(((Integer)localObject2).intValue());
      this.messagesDict[0].put(((Integer)localObject3).intValue(), localObject1);
      ((MessageObject)localObject1).messageOwner.id = ((Integer)localObject3).intValue();
      ((MessageObject)localObject1).messageOwner.send_state = 0;
      ((MessageObject)localObject1).forceUpdate = bool2;
      paramVarArgs = new ArrayList();
      paramVarArgs.add(localObject1);
      if (this.currentEncryptedChat == null) {
        DataQuery.getInstance(this.currentAccount).loadReplyMessagesForMessages(paramVarArgs, this.dialog_id);
      }
      if (this.chatAdapter != null) {
        this.chatAdapter.updateRowWithMessageObject((MessageObject)localObject1);
      }
      if ((this.chatLayoutManager != null) && (bool2) && (this.chatLayoutManager.findFirstVisibleItemPosition() == 0)) {
        moveScrollToLastMessage();
      }
      NotificationsController.getInstance(this.currentAccount).playOutChatSound();
      return;
      paramInt1 = 0;
      continue;
      bool1 = false;
      continue;
      if (paramInt1 == NotificationCenter.messageReceivedByAck)
      {
        paramVarArgs = (Integer)paramVarArgs[0];
        paramVarArgs = (MessageObject)this.messagesDict[0].get(paramVarArgs.intValue());
        if (paramVarArgs == null) {
          break;
        }
        paramVarArgs.messageOwner.send_state = 0;
        if (this.chatAdapter == null) {
          break;
        }
        this.chatAdapter.updateRowWithMessageObject(paramVarArgs);
        return;
      }
      if (paramInt1 == NotificationCenter.messageSendError)
      {
        paramVarArgs = (Integer)paramVarArgs[0];
        paramVarArgs = (MessageObject)this.messagesDict[0].get(paramVarArgs.intValue());
        if (paramVarArgs == null) {
          break;
        }
        paramVarArgs.messageOwner.send_state = 2;
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.chatInfoDidLoaded)
      {
        localObject1 = (TLRPC.ChatFull)paramVarArgs[0];
        if ((this.currentChat == null) || (((TLRPC.ChatFull)localObject1).id != this.currentChat.id)) {
          break;
        }
        if ((localObject1 instanceof TLRPC.TL_channelFull))
        {
          if (this.currentChat.megagroup)
          {
            i = 0;
            paramInt1 = 0;
            if (((TLRPC.ChatFull)localObject1).participants != null)
            {
              paramInt2 = 0;
              for (;;)
              {
                i = paramInt1;
                if (paramInt2 >= ((TLRPC.ChatFull)localObject1).participants.participants.size()) {
                  break;
                }
                paramInt1 = Math.max(((TLRPC.ChatParticipant)((TLRPC.ChatFull)localObject1).participants.participants.get(paramInt2)).date, paramInt1);
                paramInt2 += 1;
              }
            }
            if ((i == 0) || (Math.abs(System.currentTimeMillis() / 1000L - i) > 3600L)) {
              MessagesController.getInstance(this.currentAccount).loadChannelParticipants(Integer.valueOf(this.currentChat.id));
            }
          }
          if ((((TLRPC.ChatFull)localObject1).participants == null) && (this.info != null)) {
            ((TLRPC.ChatFull)localObject1).participants = this.info.participants;
          }
        }
        this.info = ((TLRPC.ChatFull)localObject1);
        if (this.chatActivityEnterView != null) {
          this.chatActivityEnterView.setChatInfo(this.info);
        }
        if (this.mentionsAdapter != null) {
          this.mentionsAdapter.setChatInfo(this.info);
        }
        if ((paramVarArgs[3] instanceof MessageObject))
        {
          this.pinnedMessageObject = ((MessageObject)paramVarArgs[3]);
          updatePinnedMessageView(false);
        }
        for (;;)
        {
          if (this.avatarContainer != null)
          {
            this.avatarContainer.updateOnlineCount();
            this.avatarContainer.updateSubtitle();
          }
          if (this.isBroadcast) {
            SendMessagesHelper.getInstance(this.currentAccount).setCurrentChatInfo(this.info);
          }
          if (!(this.info instanceof TLRPC.TL_chatFull)) {
            break label12194;
          }
          this.hasBotsCommands = false;
          this.botInfo.clear();
          this.botsCount = 0;
          URLSpanBotCommand.enabled = false;
          paramInt1 = 0;
          while (paramInt1 < this.info.participants.participants.size())
          {
            paramVarArgs = (TLRPC.ChatParticipant)this.info.participants.participants.get(paramInt1);
            paramVarArgs = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramVarArgs.user_id));
            if ((paramVarArgs != null) && (paramVarArgs.bot))
            {
              URLSpanBotCommand.enabled = true;
              this.botsCount += 1;
              DataQuery.getInstance(this.currentAccount).loadBotInfo(paramVarArgs.id, true, this.classGuid);
            }
            paramInt1 += 1;
          }
          updatePinnedMessageView(true);
        }
        if (this.chatListView != null) {
          this.chatListView.invalidateViews();
        }
        for (;;)
        {
          if (this.chatActivityEnterView != null) {
            this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
          }
          if (this.mentionsAdapter != null) {
            this.mentionsAdapter.setBotsCount(this.botsCount);
          }
          if ((!ChatObject.isChannel(this.currentChat)) || (this.mergeDialogId != 0L) || (this.info.migrated_from_chat_id == 0)) {
            break;
          }
          this.mergeDialogId = (-this.info.migrated_from_chat_id);
          this.maxMessageId[1] = this.info.migrated_from_max_id;
          if (this.chatAdapter == null) {
            break;
          }
          this.chatAdapter.notifyDataSetChanged();
          return;
          label12194:
          if ((this.info instanceof TLRPC.TL_channelFull))
          {
            this.hasBotsCommands = false;
            this.botInfo.clear();
            this.botsCount = 0;
            if ((!this.info.bot_info.isEmpty()) && (this.currentChat != null) && (this.currentChat.megagroup)) {}
            for (bool1 = true;; bool1 = false)
            {
              URLSpanBotCommand.enabled = bool1;
              this.botsCount = this.info.bot_info.size();
              paramInt1 = 0;
              while (paramInt1 < this.info.bot_info.size())
              {
                paramVarArgs = (TLRPC.BotInfo)this.info.bot_info.get(paramInt1);
                if ((!paramVarArgs.commands.isEmpty()) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
                  this.hasBotsCommands = true;
                }
                this.botInfo.put(paramVarArgs.user_id, paramVarArgs);
                paramInt1 += 1;
              }
            }
            if (this.chatListView != null) {
              this.chatListView.invalidateViews();
            }
            if ((this.mentionsAdapter != null) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
              this.mentionsAdapter.setBotInfo(this.botInfo);
            }
          }
        }
      }
      if (paramInt1 == NotificationCenter.chatInfoCantLoad)
      {
        paramInt1 = ((Integer)paramVarArgs[0]).intValue();
        if ((this.currentChat == null) || (this.currentChat.id != paramInt1)) {
          break;
        }
        paramInt1 = ((Integer)paramVarArgs[1]).intValue();
        if ((getParentActivity() == null) || (this.closeChatDialog != null)) {
          break;
        }
        paramVarArgs = new AlertDialog.Builder(getParentActivity());
        paramVarArgs.setTitle(LocaleController.getString("AppName", 2131492981));
        if (paramInt1 == 0) {
          paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenPrivate", 2131493160));
        }
        for (;;)
        {
          paramVarArgs.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
          paramVarArgs = paramVarArgs.create();
          this.closeChatDialog = paramVarArgs;
          showDialog(paramVarArgs);
          this.loading = false;
          if (this.progressView != null) {
            this.progressView.setVisibility(4);
          }
          if (this.chatAdapter == null) {
            break;
          }
          this.chatAdapter.notifyDataSetChanged();
          return;
          if (paramInt1 == 1) {
            paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenNa", 2131493159));
          } else if (paramInt1 == 2) {
            paramVarArgs.setMessage(LocaleController.getString("ChannelCantOpenBanned", 2131493158));
          }
        }
      }
      if (paramInt1 == NotificationCenter.contactsDidLoaded)
      {
        updateContactStatus();
        if (this.currentEncryptedChat != null) {
          updateSpamView();
        }
        if (this.avatarContainer == null) {
          break;
        }
        this.avatarContainer.updateSubtitle();
        return;
      }
      if (paramInt1 == NotificationCenter.encryptedChatUpdated)
      {
        paramVarArgs = (TLRPC.EncryptedChat)paramVarArgs[0];
        if ((this.currentEncryptedChat == null) || (paramVarArgs.id != this.currentEncryptedChat.id)) {
          break;
        }
        this.currentEncryptedChat = paramVarArgs;
        updateContactStatus();
        updateSecretStatus();
        initStickers();
        if (this.chatActivityEnterView != null)
        {
          paramVarArgs = this.chatActivityEnterView;
          if ((this.currentEncryptedChat == null) || (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) >= 23))
          {
            bool1 = true;
            if ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46)) {
              break label12872;
            }
            bool2 = true;
            label12797:
            paramVarArgs.setAllowStickersAndGifs(bool1, bool2);
            this.chatActivityEnterView.checkRoundVideo();
          }
        }
        else
        {
          if (this.mentionsAdapter == null) {
            break;
          }
          paramVarArgs = this.mentionsAdapter;
          if ((this.chatActivityEnterView.isEditingMessage()) || ((this.currentEncryptedChat != null) && (AndroidUtilities.getPeerLayerVersion(this.currentEncryptedChat.layer) < 46))) {
            break label12878;
          }
        }
        label12872:
        label12878:
        for (bool1 = true;; bool1 = false)
        {
          paramVarArgs.setNeedBotContext(bool1);
          return;
          bool1 = false;
          break;
          bool2 = false;
          break label12797;
        }
      }
      if (paramInt1 == NotificationCenter.messagesReadEncrypted)
      {
        paramInt1 = ((Integer)paramVarArgs[0]).intValue();
        if ((this.currentEncryptedChat == null) || (this.currentEncryptedChat.id != paramInt1)) {
          break;
        }
        paramInt1 = ((Integer)paramVarArgs[1]).intValue();
        paramVarArgs = this.messages.iterator();
        for (;;)
        {
          if (paramVarArgs.hasNext())
          {
            localObject1 = (MessageObject)paramVarArgs.next();
            if (!((MessageObject)localObject1).isOut()) {
              continue;
            }
            if ((!((MessageObject)localObject1).isOut()) || (((MessageObject)localObject1).isUnread())) {}
          }
          else
          {
            updateVisibleRows();
            return;
          }
          if (((MessageObject)localObject1).messageOwner.date - 1 <= paramInt1) {
            ((MessageObject)localObject1).setIsRead();
          }
        }
      }
      if (paramInt1 == NotificationCenter.removeAllMessagesFromDialog)
      {
        l = ((Long)paramVarArgs[0]).longValue();
        if (this.dialog_id != l) {
          break;
        }
        this.messages.clear();
        this.waitingForLoad.clear();
        this.messagesByDays.clear();
        this.groupedMessagesMap.clear();
        paramInt1 = 1;
        if (paramInt1 >= 0)
        {
          this.messagesDict[paramInt1].clear();
          if (this.currentEncryptedChat == null)
          {
            this.maxMessageId[paramInt1] = Integer.MAX_VALUE;
            this.minMessageId[paramInt1] = Integer.MIN_VALUE;
          }
          for (;;)
          {
            this.maxDate[paramInt1] = Integer.MIN_VALUE;
            this.minDate[paramInt1] = 0;
            this.selectedMessagesIds[paramInt1].clear();
            this.selectedMessagesCanCopyIds[paramInt1].clear();
            this.selectedMessagesCanStarIds[paramInt1].clear();
            paramInt1 -= 1;
            break;
            this.maxMessageId[paramInt1] = Integer.MIN_VALUE;
            this.minMessageId[paramInt1] = Integer.MAX_VALUE;
          }
        }
        this.cantDeleteMessagesCount = 0;
        this.canEditMessagesCount = 0;
        this.actionBar.hideActionMode();
        updatePinnedMessageView(true);
        if (this.botButtons != null)
        {
          this.botButtons = null;
          if (this.chatActivityEnterView != null) {
            this.chatActivityEnterView.setButtons(null, false);
          }
        }
        if (((Boolean)paramVarArgs[1]).booleanValue())
        {
          if (this.chatAdapter != null)
          {
            paramVarArgs = this.progressView;
            if (this.chatAdapter.botInfoRow != -1) {
              break label13310;
            }
          }
          label13310:
          for (paramInt1 = 0;; paramInt1 = 4)
          {
            paramVarArgs.setVisibility(paramInt1);
            this.chatListView.setEmptyView(null);
            paramInt1 = 0;
            while (paramInt1 < 2)
            {
              this.endReached[paramInt1] = false;
              this.cacheEndReached[paramInt1] = false;
              this.forwardEndReached[paramInt1] = true;
              paramInt1 += 1;
            }
          }
          this.first = true;
          this.firstLoading = true;
          this.loading = true;
          this.startLoadFromMessageId = 0;
          this.needSelectFromMessageId = false;
          this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
          paramVarArgs = MessagesController.getInstance(this.currentAccount);
          l = this.dialog_id;
          if (AndroidUtilities.isTablet())
          {
            paramInt1 = 30;
            label13378:
            paramInt2 = this.classGuid;
            bool1 = ChatObject.isChannel(this.currentChat);
            i = this.lastLoadIndex;
            this.lastLoadIndex = (i + 1);
            paramVarArgs.loadMessages(l, paramInt1, 0, 0, true, 0, paramInt2, 2, 0, bool1, i);
          }
        }
        for (;;)
        {
          if (this.chatAdapter != null) {
            this.chatAdapter.notifyDataSetChanged();
          }
          if ((this.currentEncryptedChat != null) || (this.currentUser == null) || (!this.currentUser.bot) || (this.botUser != null)) {
            break;
          }
          this.botUser = "";
          updateBottomOverlay();
          return;
          paramInt1 = 20;
          break label13378;
          if (this.progressView != null)
          {
            this.progressView.setVisibility(4);
            this.chatListView.setEmptyView(this.emptyViewContainer);
          }
        }
      }
      if (paramInt1 == NotificationCenter.screenshotTook)
      {
        updateInformationForScreenshotDetector();
        return;
      }
      if (paramInt1 == NotificationCenter.blockedUsersDidLoaded)
      {
        if (this.currentUser == null) {
          break;
        }
        bool1 = this.userBlocked;
        this.userBlocked = MessagesController.getInstance(this.currentAccount).blockedUsers.contains(Integer.valueOf(this.currentUser.id));
        if (bool1 == this.userBlocked) {
          break;
        }
        updateBottomOverlay();
        return;
      }
      if (paramInt1 == NotificationCenter.FileNewChunkAvailable)
      {
        localObject1 = (MessageObject)paramVarArgs[0];
        l = ((Long)paramVarArgs[3]).longValue();
        if ((l == 0L) || (this.dialog_id != ((MessageObject)localObject1).getDialogId())) {
          break;
        }
        paramVarArgs = (MessageObject)this.messagesDict[0].get(((MessageObject)localObject1).getId());
        if (paramVarArgs == null) {
          break;
        }
        paramVarArgs.messageOwner.media.document.size = ((int)l);
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.didCreatedNewDeleteTask)
      {
        paramVarArgs = (SparseArray)paramVarArgs[0];
        i = 0;
        paramInt1 = 0;
        for (;;)
        {
          if (paramInt1 >= paramVarArgs.size()) {
            break label13853;
          }
          m = paramVarArgs.keyAt(paramInt1);
          localObject1 = (ArrayList)paramVarArgs.get(m);
          paramInt2 = 0;
          if (paramInt2 < ((ArrayList)localObject1).size())
          {
            l = ((Long)((ArrayList)localObject1).get(paramInt2)).longValue();
            if (paramInt2 == 0)
            {
              k = (int)(l >> 32);
              j = k;
              if (k < 0) {
                j = 0;
              }
              if (!ChatObject.isChannel(this.currentChat)) {
                break label13840;
              }
            }
            label13840:
            for (k = this.currentChat.id;; k = 0)
            {
              if (j != k) {
                break label13844;
              }
              localObject2 = (MessageObject)this.messagesDict[0].get((int)l);
              if (localObject2 != null)
              {
                ((MessageObject)localObject2).messageOwner.destroyTime = m;
                i = 1;
              }
              paramInt2 += 1;
              break;
            }
            label13844:
            break;
          }
          paramInt1 += 1;
        }
        label13853:
        if (i == 0) {
          break;
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.messagePlayingDidStarted)
      {
        paramVarArgs = (MessageObject)paramVarArgs[0];
        if (paramVarArgs.eventId != 0L) {
          break;
        }
        sendSecretMessageRead(paramVarArgs);
        if (paramVarArgs.isRoundVideo())
        {
          MediaController.getInstance().setTextureView(createTextureView(true), this.aspectRatioFrameLayout, this.roundVideoContainer, true);
          updateTextureViewPosition();
        }
        if (this.chatListView == null) {
          break;
        }
        paramInt2 = this.chatListView.getChildCount();
        paramInt1 = 0;
        if (paramInt1 < paramInt2)
        {
          paramVarArgs = this.chatListView.getChildAt(paramInt1);
          if ((paramVarArgs instanceof ChatMessageCell))
          {
            paramVarArgs = (ChatMessageCell)paramVarArgs;
            localObject1 = paramVarArgs.getMessageObject();
            if (localObject1 != null)
            {
              if ((!((MessageObject)localObject1).isVoice()) && (!((MessageObject)localObject1).isMusic())) {
                break label14005;
              }
              paramVarArgs.updateButtonState(false);
            }
          }
          for (;;)
          {
            paramInt1 += 1;
            break;
            label14005:
            if (((MessageObject)localObject1).isRoundVideo())
            {
              paramVarArgs.checkRoundVideoPlayback(false);
              if ((!MediaController.getInstance().isPlayingMessage((MessageObject)localObject1)) && (((MessageObject)localObject1).audioProgress != 0.0F))
              {
                ((MessageObject)localObject1).resetPlayingProgress();
                paramVarArgs.invalidate();
              }
            }
          }
        }
        paramInt2 = this.mentionListView.getChildCount();
        paramInt1 = 0;
        while (paramInt1 < paramInt2)
        {
          paramVarArgs = this.mentionListView.getChildAt(paramInt1);
          if ((paramVarArgs instanceof ContextLinkCell))
          {
            paramVarArgs = (ContextLinkCell)paramVarArgs;
            localObject1 = paramVarArgs.getMessageObject();
            if ((localObject1 != null) && ((((MessageObject)localObject1).isVoice()) || (((MessageObject)localObject1).isMusic()))) {
              paramVarArgs.updateButtonState(false);
            }
          }
          paramInt1 += 1;
        }
        break;
      }
      if ((paramInt1 == NotificationCenter.messagePlayingDidReset) || (paramInt1 == NotificationCenter.messagePlayingPlayStateChanged))
      {
        if (paramInt1 == NotificationCenter.messagePlayingDidReset) {
          destroyTextureView();
        }
        if (this.chatListView == null) {
          break;
        }
        paramInt2 = this.chatListView.getChildCount();
        paramInt1 = 0;
        if (paramInt1 < paramInt2)
        {
          paramVarArgs = this.chatListView.getChildAt(paramInt1);
          if ((paramVarArgs instanceof ChatMessageCell))
          {
            paramVarArgs = (ChatMessageCell)paramVarArgs;
            localObject1 = paramVarArgs.getMessageObject();
            if (localObject1 != null)
            {
              if ((!((MessageObject)localObject1).isVoice()) && (!((MessageObject)localObject1).isMusic())) {
                break label14233;
              }
              paramVarArgs.updateButtonState(false);
            }
          }
          for (;;)
          {
            paramInt1 += 1;
            break;
            label14233:
            if ((((MessageObject)localObject1).isRoundVideo()) && (!MediaController.getInstance().isPlayingMessage((MessageObject)localObject1))) {
              paramVarArgs.checkRoundVideoPlayback(true);
            }
          }
        }
        paramInt2 = this.mentionListView.getChildCount();
        paramInt1 = 0;
        while (paramInt1 < paramInt2)
        {
          paramVarArgs = this.mentionListView.getChildAt(paramInt1);
          if ((paramVarArgs instanceof ContextLinkCell))
          {
            paramVarArgs = (ContextLinkCell)paramVarArgs;
            localObject1 = paramVarArgs.getMessageObject();
            if ((localObject1 != null) && ((((MessageObject)localObject1).isVoice()) || (((MessageObject)localObject1).isMusic()))) {
              paramVarArgs.updateButtonState(false);
            }
          }
          paramInt1 += 1;
        }
        break;
      }
      if (paramInt1 == NotificationCenter.messagePlayingProgressDidChanged)
      {
        paramVarArgs = (Integer)paramVarArgs[0];
        if (this.chatListView == null) {
          break;
        }
        paramInt2 = this.chatListView.getChildCount();
        paramInt1 = 0;
        for (;;)
        {
          if (paramInt1 >= paramInt2) {
            break label14485;
          }
          localObject1 = this.chatListView.getChildAt(paramInt1);
          if ((localObject1 instanceof ChatMessageCell))
          {
            localObject1 = (ChatMessageCell)localObject1;
            localObject2 = ((ChatMessageCell)localObject1).getMessageObject();
            if ((localObject2 != null) && (((MessageObject)localObject2).getId() == paramVarArgs.intValue()))
            {
              paramVarArgs = MediaController.getInstance().getPlayingMessageObject();
              if (paramVarArgs == null) {
                break;
              }
              ((MessageObject)localObject2).audioProgress = paramVarArgs.audioProgress;
              ((MessageObject)localObject2).audioProgressSec = paramVarArgs.audioProgressSec;
              ((MessageObject)localObject2).audioPlayerDuration = paramVarArgs.audioPlayerDuration;
              ((ChatMessageCell)localObject1).updatePlayingMessageProgress();
              if (this.drawLaterRoundProgressCell != localObject1) {
                break;
              }
              this.fragmentView.invalidate();
              return;
            }
          }
          paramInt1 += 1;
        }
        label14485:
        break;
      }
      Object localObject5;
      if (paramInt1 == NotificationCenter.updateMessageMedia)
      {
        localObject2 = (TLRPC.Message)paramVarArgs[0];
        localObject3 = (MessageObject)this.messagesDict[0].get(((TLRPC.Message)localObject2).id);
        if (localObject3 == null) {
          break;
        }
        ((MessageObject)localObject3).messageOwner.media = ((TLRPC.Message)localObject2).media;
        ((MessageObject)localObject3).messageOwner.attachPath = ((TLRPC.Message)localObject2).attachPath;
        ((MessageObject)localObject3).generateThumbs(false);
        if ((((MessageObject)localObject3).getGroupId() != 0L) && ((((MessageObject)localObject3).photoThumbs == null) || (((MessageObject)localObject3).photoThumbs.isEmpty())))
        {
          localObject5 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject3).getGroupId());
          if (localObject5 != null)
          {
            i = ((MessageObject.GroupedMessages)localObject5).messages.indexOf(localObject3);
            if (i >= 0)
            {
              paramInt2 = ((MessageObject.GroupedMessages)localObject5).messages.size();
              localObject1 = null;
              paramVarArgs = (Object[])localObject1;
              if (i > 0)
              {
                paramVarArgs = (Object[])localObject1;
                if (i < ((MessageObject.GroupedMessages)localObject5).messages.size() - 1)
                {
                  localObject1 = new MessageObject.GroupedMessages();
                  ((MessageObject.GroupedMessages)localObject1).groupId = Utilities.random.nextLong();
                  ((MessageObject.GroupedMessages)localObject1).messages.addAll(((MessageObject.GroupedMessages)localObject5).messages.subList(i + 1, ((MessageObject.GroupedMessages)localObject5).messages.size()));
                  paramInt1 = 0;
                  while (paramInt1 < ((MessageObject.GroupedMessages)localObject1).messages.size())
                  {
                    ((MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(paramInt1)).localGroupId = ((MessageObject.GroupedMessages)localObject1).groupId;
                    ((MessageObject.GroupedMessages)localObject5).messages.remove(i + 1);
                    paramInt1 += 1;
                  }
                  this.groupedMessagesMap.put(((MessageObject.GroupedMessages)localObject1).groupId, localObject1);
                  paramVarArgs = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
                  ((MessageObject.GroupedMessages)localObject1).calculate();
                }
              }
              ((MessageObject.GroupedMessages)localObject5).messages.remove(i);
              if (!((MessageObject.GroupedMessages)localObject5).messages.isEmpty()) {
                break label14896;
              }
              this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject5).groupId);
            }
          }
        }
        while ((((TLRPC.Message)localObject2).media.ttl_seconds != 0) && (((((TLRPC.Message)localObject2).media.photo instanceof TLRPC.TL_photoEmpty)) || ((((TLRPC.Message)localObject2).media.document instanceof TLRPC.TL_documentEmpty))))
        {
          ((MessageObject)localObject3).setType();
          this.chatAdapter.updateRowWithMessageObject((MessageObject)localObject3);
          return;
          label14896:
          localObject1 = paramVarArgs;
          if (paramVarArgs == null) {
            localObject1 = (MessageObject)((MessageObject.GroupedMessages)localObject5).messages.get(((MessageObject.GroupedMessages)localObject5).messages.size() - 1);
          }
          ((MessageObject.GroupedMessages)localObject5).calculate();
          paramInt1 = this.messages.indexOf(localObject1);
          if ((paramInt1 >= 0) && (this.chatAdapter != null)) {
            this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt1, paramInt2);
          }
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.replaceMessagesObjects)
      {
        l = ((Long)paramVarArgs[0]).longValue();
        if ((l != this.dialog_id) && (l != this.mergeDialogId)) {
          break;
        }
        if (l == this.dialog_id)
        {
          i = 0;
          paramInt1 = 0;
          localObject2 = (ArrayList)paramVarArgs[1];
          paramVarArgs = null;
          j = 0;
          if (j >= ((ArrayList)localObject2).size()) {
            break label15884;
          }
          localObject3 = (MessageObject)((ArrayList)localObject2).get(j);
          localObject5 = (MessageObject)this.messagesDict[i].get(((MessageObject)localObject3).getId());
          if ((this.pinnedMessageObject != null) && (this.pinnedMessageObject.getId() == ((MessageObject)localObject3).getId()))
          {
            this.pinnedMessageObject = ((MessageObject)localObject3);
            updatePinnedMessageView(true);
          }
          paramInt2 = paramInt1;
          localObject1 = paramVarArgs;
          if (localObject5 == null) {
            break label15700;
          }
          if (((MessageObject)localObject3).type < 0) {
            break label15590;
          }
          paramInt2 = paramInt1;
          if (paramInt1 == 0)
          {
            paramInt2 = paramInt1;
            if ((((MessageObject)localObject3).messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) {
              paramInt2 = 1;
            }
          }
          if (((MessageObject)localObject5).replyMessageObject != null)
          {
            ((MessageObject)localObject3).replyMessageObject = ((MessageObject)localObject5).replyMessageObject;
            if (!(((MessageObject)localObject3).messageOwner.action instanceof TLRPC.TL_messageActionGameScore)) {
              break label15567;
            }
            ((MessageObject)localObject3).generateGameMessageText(null);
          }
          label15198:
          ((MessageObject)localObject3).messageOwner.attachPath = ((MessageObject)localObject5).messageOwner.attachPath;
          ((MessageObject)localObject3).attachPathExists = ((MessageObject)localObject5).attachPathExists;
          ((MessageObject)localObject3).mediaExists = ((MessageObject)localObject5).mediaExists;
          this.messagesDict[i].put(((MessageObject)localObject5).getId(), localObject3);
          paramInt1 = paramInt2;
        }
        for (;;)
        {
          m = this.messages.indexOf(localObject5);
          paramInt2 = paramInt1;
          localObject1 = paramVarArgs;
          if (m < 0) {
            break label15700;
          }
          localObject6 = (ArrayList)this.messagesByDays.get(((MessageObject)localObject5).dateKey);
          paramInt2 = -1;
          if (localObject6 != null) {
            paramInt2 = ((ArrayList)localObject6).indexOf(localObject5);
          }
          localObject1 = paramVarArgs;
          if (((MessageObject)localObject5).getGroupId() == 0L) {
            break label15641;
          }
          localObject7 = (MessageObject.GroupedMessages)this.groupedMessagesMap.get(((MessageObject)localObject5).getGroupId());
          localObject1 = paramVarArgs;
          if (localObject7 == null) {
            break label15641;
          }
          n = ((MessageObject.GroupedMessages)localObject7).messages.indexOf(localObject5);
          localObject1 = paramVarArgs;
          if (n < 0) {
            break label15641;
          }
          if (((MessageObject)localObject5).getGroupId() != ((MessageObject)localObject3).getGroupId()) {
            this.groupedMessagesMap.put(((MessageObject)localObject3).getGroupId(), localObject7);
          }
          if ((((MessageObject)localObject3).photoThumbs != null) && (!((MessageObject)localObject3).photoThumbs.isEmpty())) {
            break label15714;
          }
          localObject1 = paramVarArgs;
          if (paramVarArgs == null) {
            localObject1 = new LongSparseArray();
          }
          ((LongSparseArray)localObject1).put(((MessageObject.GroupedMessages)localObject7).groupId, localObject7);
          if ((n <= 0) || (n >= ((MessageObject.GroupedMessages)localObject7).messages.size() - 1)) {
            break label15630;
          }
          paramVarArgs = new MessageObject.GroupedMessages();
          paramVarArgs.groupId = Utilities.random.nextLong();
          paramVarArgs.messages.addAll(((MessageObject.GroupedMessages)localObject7).messages.subList(n + 1, ((MessageObject.GroupedMessages)localObject7).messages.size()));
          k = 0;
          while (k < paramVarArgs.messages.size())
          {
            ((MessageObject)paramVarArgs.messages.get(k)).localGroupId = paramVarArgs.groupId;
            ((MessageObject.GroupedMessages)localObject7).messages.remove(n + 1);
            k += 1;
          }
          i = 1;
          break;
          label15567:
          if (!(((MessageObject)localObject3).messageOwner.action instanceof TLRPC.TL_messageActionPaymentSent)) {
            break label15198;
          }
          ((MessageObject)localObject3).generatePaymentSentMessageText(null);
          break label15198;
          label15590:
          this.messagesDict[i].remove(((MessageObject)localObject5).getId());
        }
        ((LongSparseArray)localObject1).put(paramVarArgs.groupId, paramVarArgs);
        this.groupedMessagesMap.put(paramVarArgs.groupId, paramVarArgs);
        label15630:
        ((MessageObject.GroupedMessages)localObject7).messages.remove(n);
        label15641:
        if (((MessageObject)localObject3).type >= 0)
        {
          this.messages.set(m, localObject3);
          if (this.chatAdapter != null) {
            this.chatAdapter.updateRowAtPosition(this.chatAdapter.messagesStartRow + m);
          }
          if (paramInt2 >= 0) {
            ((ArrayList)localObject6).set(paramInt2, localObject3);
          }
        }
        for (;;)
        {
          paramInt2 = paramInt1;
          label15700:
          j += 1;
          paramInt1 = paramInt2;
          paramVarArgs = (Object[])localObject1;
          break;
          label15714:
          ((MessageObject.GroupedMessages)localObject7).messages.set(n, localObject3);
          localObject1 = (MessageObject.GroupedMessagePosition)((MessageObject.GroupedMessages)localObject7).positions.remove(localObject5);
          if (localObject1 != null) {
            ((MessageObject.GroupedMessages)localObject7).positions.put(localObject3, localObject1);
          }
          localObject1 = paramVarArgs;
          if (paramVarArgs == null) {
            localObject1 = new LongSparseArray();
          }
          ((LongSparseArray)localObject1).put(((MessageObject.GroupedMessages)localObject7).groupId, localObject7);
          break label15641;
          this.messages.remove(m);
          if (this.chatAdapter != null) {
            this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow + m);
          }
          if (paramInt2 >= 0)
          {
            ((ArrayList)localObject6).remove(paramInt2);
            if (((ArrayList)localObject6).isEmpty())
            {
              this.messagesByDays.remove(((MessageObject)localObject5).dateKey);
              this.messages.remove(m);
              this.chatAdapter.notifyItemRemoved(this.chatAdapter.messagesStartRow);
            }
          }
        }
        label15884:
        if (paramVarArgs == null) {
          break;
        }
        paramInt1 = 0;
        label15890:
        if (paramInt1 < paramVarArgs.size())
        {
          localObject1 = (MessageObject.GroupedMessages)paramVarArgs.valueAt(paramInt1);
          if (!((MessageObject.GroupedMessages)localObject1).messages.isEmpty()) {
            break label15938;
          }
          this.groupedMessagesMap.remove(((MessageObject.GroupedMessages)localObject1).groupId);
        }
        for (;;)
        {
          paramInt1 += 1;
          break label15890;
          break;
          label15938:
          ((MessageObject.GroupedMessages)localObject1).calculate();
          localObject2 = (MessageObject)((MessageObject.GroupedMessages)localObject1).messages.get(((MessageObject.GroupedMessages)localObject1).messages.size() - 1);
          paramInt2 = this.messages.indexOf(localObject2);
          if ((paramInt2 >= 0) && (this.chatAdapter != null)) {
            this.chatAdapter.notifyItemRangeChanged(this.chatAdapter.messagesStartRow + paramInt2, ((MessageObject.GroupedMessages)localObject1).messages.size());
          }
        }
      }
      if (paramInt1 == NotificationCenter.notificationsSettingsUpdated)
      {
        updateTitleIcons();
        if (!ChatObject.isChannel(this.currentChat)) {
          break;
        }
        updateBottomOverlay();
        return;
      }
      if (paramInt1 == NotificationCenter.didLoadedReplyMessages)
      {
        if (((Long)paramVarArgs[0]).longValue() != this.dialog_id) {
          break;
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.didLoadedPinnedMessage)
      {
        paramVarArgs = (MessageObject)paramVarArgs[0];
        if ((paramVarArgs.getDialogId() != this.dialog_id) || (this.info == null) || (this.info.pinned_msg_id != paramVarArgs.getId())) {
          break;
        }
        this.pinnedMessageObject = paramVarArgs;
        this.loadingPinnedMessage = 0;
        updatePinnedMessageView(true);
        return;
      }
      if (paramInt1 == NotificationCenter.didReceivedWebpages)
      {
        paramVarArgs = (ArrayList)paramVarArgs[0];
        paramInt2 = 0;
        paramInt1 = 0;
        while (paramInt1 < paramVarArgs.size())
        {
          localObject1 = (TLRPC.Message)paramVarArgs.get(paramInt1);
          l = MessageObject.getDialogId((TLRPC.Message)localObject1);
          if ((l != this.dialog_id) && (l != this.mergeDialogId))
          {
            paramInt1 += 1;
          }
          else
          {
            localObject2 = this.messagesDict;
            if (l == this.dialog_id) {}
            for (i = 0;; i = 1)
            {
              localObject2 = (MessageObject)localObject2[i].get(((TLRPC.Message)localObject1).id);
              if (localObject2 == null) {
                break;
              }
              ((MessageObject)localObject2).messageOwner.media = new TLRPC.TL_messageMediaWebPage();
              ((MessageObject)localObject2).messageOwner.media.webpage = ((TLRPC.Message)localObject1).media.webpage;
              ((MessageObject)localObject2).generateThumbs(true);
              paramInt2 = 1;
              break;
            }
          }
        }
        if (paramInt2 == 0) {
          break;
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.didReceivedWebpagesInUpdates)
      {
        if (this.foundWebPage == null) {
          break;
        }
        paramVarArgs = (LongSparseArray)paramVarArgs[0];
        paramInt1 = 0;
        while (paramInt1 < paramVarArgs.size())
        {
          localObject1 = (TLRPC.WebPage)paramVarArgs.valueAt(paramInt1);
          if (((TLRPC.WebPage)localObject1).id == this.foundWebPage.id)
          {
            if (!(localObject1 instanceof TLRPC.TL_webPageEmpty)) {}
            for (bool1 = true;; bool1 = false)
            {
              showReplyPanel(bool1, null, null, (TLRPC.WebPage)localObject1, false);
              return;
            }
          }
          paramInt1 += 1;
        }
        break;
      }
      if (paramInt1 == NotificationCenter.messagesReadContent)
      {
        paramVarArgs = (ArrayList)paramVarArgs[0];
        i = 0;
        if (ChatObject.isChannel(this.currentChat))
        {
          paramInt1 = this.currentChat.id;
          paramInt2 = 0;
          label16434:
          if (paramInt2 >= paramVarArgs.size()) {
            break label16612;
          }
          l = ((Long)paramVarArgs.get(paramInt2)).longValue();
          k = (int)(l >> 32);
          j = k;
          if (k < 0) {
            j = 0;
          }
          if (j == paramInt1) {
            break label16493;
          }
        }
        for (;;)
        {
          paramInt2 += 1;
          break label16434;
          paramInt1 = 0;
          break;
          label16493:
          localObject1 = (MessageObject)this.messagesDict[0].get((int)l);
          if (localObject1 != null)
          {
            ((MessageObject)localObject1).setContentIsRead();
            j = 1;
            i = j;
            if (((MessageObject)localObject1).messageOwner.mentioned)
            {
              this.newMentionsCount -= 1;
              if (this.newMentionsCount <= 0)
              {
                this.newMentionsCount = 0;
                this.hasAllMentionsLocal = true;
                showMentiondownButton(false, true);
                i = j;
              }
              else
              {
                this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
                i = j;
              }
            }
          }
        }
        label16612:
        if (i == 0) {
          break;
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.botInfoDidLoaded)
      {
        paramInt1 = ((Integer)paramVarArgs[1]).intValue();
        if (this.classGuid != paramInt1) {
          break;
        }
        paramVarArgs = (TLRPC.BotInfo)paramVarArgs[0];
        if (this.currentEncryptedChat == null)
        {
          if ((!paramVarArgs.commands.isEmpty()) && (!ChatObject.isChannel(this.currentChat))) {
            this.hasBotsCommands = true;
          }
          this.botInfo.put(paramVarArgs.user_id, paramVarArgs);
          if (this.chatAdapter != null) {
            this.chatAdapter.notifyItemChanged(this.chatAdapter.botInfoRow);
          }
          if ((this.mentionsAdapter != null) && ((!ChatObject.isChannel(this.currentChat)) || ((this.currentChat != null) && (this.currentChat.megagroup)))) {
            this.mentionsAdapter.setBotInfo(this.botInfo);
          }
          if (this.chatActivityEnterView != null) {
            this.chatActivityEnterView.setBotsCount(this.botsCount, this.hasBotsCommands);
          }
        }
        updateBotButtons();
        return;
      }
      if (paramInt1 == NotificationCenter.botKeyboardDidLoaded)
      {
        if (this.dialog_id != ((Long)paramVarArgs[1]).longValue()) {
          break;
        }
        paramVarArgs = (TLRPC.Message)paramVarArgs[0];
        if ((paramVarArgs != null) && (!this.userBlocked))
        {
          this.botButtons = new MessageObject(this.currentAccount, paramVarArgs, false);
          checkBotKeyboard();
          return;
        }
        this.botButtons = null;
        if (this.chatActivityEnterView == null) {
          break;
        }
        if ((this.replyingMessageObject != null) && (this.botReplyButtons == this.replyingMessageObject))
        {
          this.botReplyButtons = null;
          showReplyPanel(false, null, null, null, false);
        }
        this.chatActivityEnterView.setButtons(this.botButtons);
        return;
      }
      if (paramInt1 == NotificationCenter.chatSearchResultsAvailable)
      {
        if (this.classGuid != ((Integer)paramVarArgs[0]).intValue()) {
          break;
        }
        paramInt2 = ((Integer)paramVarArgs[1]).intValue();
        l = ((Long)paramVarArgs[3]).longValue();
        if (paramInt2 != 0) {
          if (l != this.dialog_id) {
            break label17027;
          }
        }
        label17027:
        for (paramInt1 = 0;; paramInt1 = 1)
        {
          scrollToMessageId(paramInt2, 0, true, paramInt1, false);
          updateSearchButtons(((Integer)paramVarArgs[2]).intValue(), ((Integer)paramVarArgs[4]).intValue(), ((Integer)paramVarArgs[5]).intValue());
          if (this.searchItem == null) {
            break;
          }
          this.searchItem.setShowSearchProgress(false);
          return;
        }
      }
      if (paramInt1 == NotificationCenter.chatSearchResultsLoading)
      {
        if ((this.classGuid != ((Integer)paramVarArgs[0]).intValue()) || (this.searchItem == null)) {
          break;
        }
        this.searchItem.setShowSearchProgress(true);
        return;
      }
      if (paramInt1 == NotificationCenter.didUpdatedMessagesViews)
      {
        paramVarArgs = (SparseIntArray)((SparseArray)paramVarArgs[0]).get((int)this.dialog_id);
        if (paramVarArgs == null) {
          break;
        }
        paramInt2 = 0;
        paramInt1 = 0;
        while (paramInt1 < paramVarArgs.size())
        {
          j = paramVarArgs.keyAt(paramInt1);
          localObject1 = (MessageObject)this.messagesDict[0].get(j);
          i = paramInt2;
          if (localObject1 != null)
          {
            j = paramVarArgs.get(j);
            i = paramInt2;
            if (j > ((MessageObject)localObject1).messageOwner.views)
            {
              ((MessageObject)localObject1).messageOwner.views = j;
              i = 1;
            }
          }
          paramInt1 += 1;
          paramInt2 = i;
        }
        if (paramInt2 == 0) {
          break;
        }
        updateVisibleRows();
        return;
      }
      if (paramInt1 == NotificationCenter.peerSettingsDidLoaded)
      {
        if (((Long)paramVarArgs[0]).longValue() != this.dialog_id) {
          break;
        }
        updateSpamView();
        return;
      }
      if (paramInt1 == NotificationCenter.newDraftReceived)
      {
        if (((Long)paramVarArgs[0]).longValue() != this.dialog_id) {
          break;
        }
        applyDraftMaybe(true);
        return;
      }
      if (paramInt1 == NotificationCenter.userInfoDidLoaded)
      {
        localObject1 = (Integer)paramVarArgs[0];
        if ((this.currentUser == null) || (this.currentUser.id != ((Integer)localObject1).intValue())) {
          break;
        }
        paramVarArgs = (TLRPC.TL_userFull)paramVarArgs[1];
        if (this.headerItem == null) {
          break;
        }
        if (paramVarArgs.phone_calls_available)
        {
          this.headerItem.showSubItem(32);
          return;
        }
        this.headerItem.hideSubItem(32);
        return;
      }
      if (paramInt1 == NotificationCenter.didSetNewWallpapper)
      {
        if (this.fragmentView == null) {
          break;
        }
        ((SizeNotifierFrameLayout)this.fragmentView).setBackgroundImage(Theme.getCachedWallpaper());
        this.progressView2.getBackground().setColorFilter(Theme.colorFilter);
        if (this.emptyView != null) {
          this.emptyView.getBackground().setColorFilter(Theme.colorFilter);
        }
        if (this.bigEmptyView != null) {
          this.bigEmptyView.getBackground().setColorFilter(Theme.colorFilter);
        }
        this.chatListView.invalidateViews();
        return;
      }
      if (paramInt1 == NotificationCenter.channelRightsUpdated)
      {
        paramVarArgs = (TLRPC.Chat)paramVarArgs[0];
        if ((this.currentChat == null) || (paramVarArgs.id != this.currentChat.id) || (this.chatActivityEnterView == null)) {
          break;
        }
        this.currentChat = paramVarArgs;
        this.chatActivityEnterView.checkChannelRights();
        checkRaiseSensors();
        updateSecretStatus();
        return;
      }
      if ((paramInt1 != NotificationCenter.updateMentionsCount) || (this.dialog_id != ((Long)paramVarArgs[0]).longValue())) {
        break;
      }
      paramInt1 = ((Integer)paramVarArgs[1]).intValue();
      if (this.newMentionsCount <= paramInt1) {
        break;
      }
      this.newMentionsCount = paramInt1;
      if (this.newMentionsCount <= 0)
      {
        this.newMentionsCount = 0;
        this.hasAllMentionsLocal = true;
        showMentiondownButton(false, true);
        return;
      }
      this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(this.newMentionsCount) }));
      return;
      paramInt1 = 1;
    }
  }
  
  public void didSelectDialogs(DialogsActivity paramDialogsActivity, ArrayList<Long> paramArrayList, CharSequence paramCharSequence, boolean paramBoolean)
  {
    if ((this.forwardingMessage == null) && (this.selectedMessagesIds[0].size() == 0) && (this.selectedMessagesIds[1].size() == 0)) {}
    ArrayList localArrayList1;
    label78:
    label582:
    for (;;)
    {
      return;
      localArrayList1 = new ArrayList();
      if (this.forwardingMessage != null) {
        if (this.forwardingMessageGroup != null)
        {
          localArrayList1.addAll(this.forwardingMessageGroup.messages);
          this.forwardingMessage = null;
          this.forwardingMessageGroup = null;
        }
      }
      for (;;)
      {
        if ((paramArrayList.size() > 1) || (((Long)paramArrayList.get(0)).longValue() == UserConfig.getInstance(this.currentAccount).getClientUserId()) || (paramCharSequence != null))
        {
          i = 0;
          for (;;)
          {
            if (i < paramArrayList.size())
            {
              l = ((Long)paramArrayList.get(i)).longValue();
              if (paramCharSequence != null) {
                SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramCharSequence.toString(), l, null, null, true, null, null, null);
              }
              SendMessagesHelper.getInstance(this.currentAccount).sendMessage(localArrayList1, l);
              i += 1;
              continue;
              localArrayList1.add(this.forwardingMessage);
              break;
              i = 1;
              while (i >= 0)
              {
                ArrayList localArrayList2 = new ArrayList();
                j = 0;
                while (j < this.selectedMessagesIds[i].size())
                {
                  localArrayList2.add(Integer.valueOf(this.selectedMessagesIds[i].keyAt(j)));
                  j += 1;
                }
                Collections.sort(localArrayList2);
                j = 0;
                while (j < localArrayList2.size())
                {
                  Integer localInteger = (Integer)localArrayList2.get(j);
                  MessageObject localMessageObject = (MessageObject)this.selectedMessagesIds[i].get(localInteger.intValue());
                  if ((localMessageObject != null) && (localInteger.intValue() > 0)) {
                    localArrayList1.add(localMessageObject);
                  }
                  j += 1;
                }
                this.selectedMessagesCanCopyIds[i].clear();
                this.selectedMessagesCanStarIds[i].clear();
                this.selectedMessagesIds[i].clear();
                i -= 1;
              }
              this.cantDeleteMessagesCount = 0;
              this.canEditMessagesCount = 0;
              this.actionBar.hideActionMode();
              updatePinnedMessageView(true);
              break label78;
            }
          }
          paramDialogsActivity.finishFragment();
          return;
        }
      }
      long l = ((Long)paramArrayList.get(0)).longValue();
      if (l == this.dialog_id) {
        break label589;
      }
      int i = (int)l;
      int j = (int)(l >> 32);
      paramArrayList = new Bundle();
      paramArrayList.putBoolean("scrollToTopOnResume", this.scrollToTopOnResume);
      if (i != 0) {
        if (i > 0) {
          paramArrayList.putInt("user_id", i);
        }
      }
      for (;;)
      {
        if ((i != 0) && (!MessagesController.getInstance(this.currentAccount).checkCanOpenChat(paramArrayList, paramDialogsActivity))) {
          break label582;
        }
        paramArrayList = new ChatActivity(paramArrayList);
        if (!presentFragment(paramArrayList, true)) {
          break label584;
        }
        paramArrayList.showReplyPanel(true, null, localArrayList1, null, false);
        if (AndroidUtilities.isTablet()) {
          break;
        }
        removeSelfFromStack();
        return;
        if (i < 0)
        {
          paramArrayList.putInt("chat_id", -i);
          continue;
          paramArrayList.putInt("enc_id", j);
        }
      }
    }
    label584:
    paramDialogsActivity.finishFragment();
    return;
    label589:
    paramDialogsActivity.finishFragment();
    moveScrollToLastMessage();
    showReplyPanel(true, null, localArrayList1, null, false);
    if (AndroidUtilities.isTablet())
    {
      this.actionBar.hideActionMode();
      updatePinnedMessageView(true);
    }
    updateVisibleRows();
  }
  
  public void didSelectLocation(TLRPC.MessageMedia paramMessageMedia, int paramInt)
  {
    SendMessagesHelper.getInstance(this.currentAccount).sendMessage(paramMessageMedia, this.dialog_id, this.replyingMessageObject, null, null);
    moveScrollToLastMessage();
    if (paramInt == 1)
    {
      showReplyPanel(false, null, null, null, false);
      DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
    }
    if (this.paused) {
      this.scrollToTopOnResume = true;
    }
  }
  
  public void dismissCurrentDialig()
  {
    if ((this.chatAttachAlert != null) && (this.visibleDialog == this.chatAttachAlert))
    {
      this.chatAttachAlert.closeCamera(false);
      this.chatAttachAlert.dismissInternal();
      this.chatAttachAlert.hideCamera(true);
      return;
    }
    super.dismissCurrentDialig();
  }
  
  public boolean dismissDialogOnPause(Dialog paramDialog)
  {
    return (paramDialog != this.chatAttachAlert) && (super.dismissDialogOnPause(paramDialog));
  }
  
  public boolean extendActionMode(Menu paramMenu)
  {
    if ((PhotoViewer.hasInstance()) && (PhotoViewer.getInstance().isVisible()))
    {
      if ((PhotoViewer.getInstance().getSelectiongLength() != 0) && (paramMenu.findItem(16908321) != null)) {}
    }
    else {
      while ((this.chatActivityEnterView.getSelectionLength() == 0) || (paramMenu.findItem(16908321) == null)) {
        return true;
      }
    }
    if (Build.VERSION.SDK_INT >= 23) {
      paramMenu.removeItem(16908341);
    }
    SpannableStringBuilder localSpannableStringBuilder = new SpannableStringBuilder(LocaleController.getString("Bold", 2131493085));
    localSpannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, localSpannableStringBuilder.length(), 33);
    paramMenu.add(2131230802, 2131230801, 6, localSpannableStringBuilder);
    localSpannableStringBuilder = new SpannableStringBuilder(LocaleController.getString("Italic", 2131493709));
    localSpannableStringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/ritalic.ttf")), 0, localSpannableStringBuilder.length(), 33);
    paramMenu.add(2131230802, 2131230803, 7, localSpannableStringBuilder);
    paramMenu.add(2131230802, 2131230804, 8, LocaleController.getString("Regular", 2131494229));
    return true;
  }
  
  public TLRPC.Chat getCurrentChat()
  {
    return this.currentChat;
  }
  
  public TLRPC.ChatFull getCurrentChatInfo()
  {
    return this.info;
  }
  
  public TLRPC.EncryptedChat getCurrentEncryptedChat()
  {
    return this.currentEncryptedChat;
  }
  
  public TLRPC.User getCurrentUser()
  {
    return this.currentUser;
  }
  
  public long getDialogId()
  {
    return this.dialog_id;
  }
  
  /* Error */
  public org.telegram.ui.ActionBar.ThemeDescription[] getThemeDescriptions()
  {
    // Byte code:
    //   0: new 52	org/telegram/ui/ChatActivity$113
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 5675	org/telegram/ui/ChatActivity$113:<init>	(Lorg/telegram/ui/ChatActivity;)V
    //   8: astore 72
    //   10: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13: dup
    //   14: aload_0
    //   15: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   18: iconst_0
    //   19: aconst_null
    //   20: aconst_null
    //   21: aconst_null
    //   22: aconst_null
    //   23: ldc_w 5679
    //   26: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   29: astore_3
    //   30: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   33: dup
    //   34: aload_0
    //   35: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   38: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   41: aconst_null
    //   42: aconst_null
    //   43: aconst_null
    //   44: aconst_null
    //   45: ldc_w 5687
    //   48: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   51: astore 4
    //   53: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   56: dup
    //   57: aload_0
    //   58: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   61: getstatic 5690	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LISTGLOWCOLOR	I
    //   64: aconst_null
    //   65: aconst_null
    //   66: aconst_null
    //   67: aconst_null
    //   68: ldc_w 5687
    //   71: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   74: astore 5
    //   76: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   79: dup
    //   80: aload_0
    //   81: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   84: getstatic 5693	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_ITEMSCOLOR	I
    //   87: aconst_null
    //   88: aconst_null
    //   89: aconst_null
    //   90: aconst_null
    //   91: ldc_w 5695
    //   94: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   97: astore 6
    //   99: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   102: dup
    //   103: aload_0
    //   104: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   107: getstatic 5698	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SELECTORCOLOR	I
    //   110: aconst_null
    //   111: aconst_null
    //   112: aconst_null
    //   113: aconst_null
    //   114: ldc_w 5700
    //   117: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   120: astore 7
    //   122: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   125: dup
    //   126: aload_0
    //   127: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   130: getstatic 5703	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SUBMENUBACKGROUND	I
    //   133: aconst_null
    //   134: aconst_null
    //   135: aconst_null
    //   136: aconst_null
    //   137: ldc_w 5705
    //   140: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   143: astore 8
    //   145: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   148: dup
    //   149: aload_0
    //   150: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   153: getstatic 5708	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SUBMENUITEM	I
    //   156: aconst_null
    //   157: aconst_null
    //   158: aconst_null
    //   159: aconst_null
    //   160: ldc_w 5710
    //   163: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   166: astore 9
    //   168: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   171: dup
    //   172: aload_0
    //   173: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   176: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   179: aconst_null
    //   180: aconst_null
    //   181: aconst_null
    //   182: aconst_null
    //   183: ldc_w 5687
    //   186: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   189: astore 10
    //   191: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   194: dup
    //   195: aload_0
    //   196: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   199: getstatic 5690	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LISTGLOWCOLOR	I
    //   202: aconst_null
    //   203: aconst_null
    //   204: aconst_null
    //   205: aconst_null
    //   206: ldc_w 5687
    //   209: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   212: astore 11
    //   214: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   217: dup
    //   218: aload_0
    //   219: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   222: getstatic 5693	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_ITEMSCOLOR	I
    //   225: aconst_null
    //   226: aconst_null
    //   227: aconst_null
    //   228: aconst_null
    //   229: ldc_w 5695
    //   232: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   235: astore 12
    //   237: aload_0
    //   238: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   241: ifnull +15226 -> 15467
    //   244: aload_0
    //   245: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   248: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   251: astore_2
    //   252: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   255: dup
    //   256: aload_2
    //   257: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   260: aconst_null
    //   261: aconst_null
    //   262: aconst_null
    //   263: aconst_null
    //   264: ldc_w 5719
    //   267: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   270: astore 13
    //   272: aload_0
    //   273: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   276: ifnull +15196 -> 15472
    //   279: aload_0
    //   280: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   283: invokevirtual 5722	org/telegram/ui/Components/ChatAvatarContainer:getSubtitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   286: astore_2
    //   287: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   290: dup
    //   291: aload_2
    //   292: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   295: aconst_null
    //   296: iconst_2
    //   297: anewarray 2837	android/graphics/Paint
    //   300: dup
    //   301: iconst_0
    //   302: getstatic 5725	org/telegram/ui/ActionBar/Theme:chat_statusPaint	Landroid/graphics/Paint;
    //   305: aastore
    //   306: dup
    //   307: iconst_1
    //   308: getstatic 5728	org/telegram/ui/ActionBar/Theme:chat_statusRecordPaint	Landroid/graphics/Paint;
    //   311: aastore
    //   312: aconst_null
    //   313: aconst_null
    //   314: ldc_w 5730
    //   317: aconst_null
    //   318: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   321: astore 14
    //   323: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   326: dup
    //   327: aload_0
    //   328: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   331: getstatic 5698	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SELECTORCOLOR	I
    //   334: aconst_null
    //   335: aconst_null
    //   336: aconst_null
    //   337: aconst_null
    //   338: ldc_w 5700
    //   341: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   344: astore 15
    //   346: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   349: dup
    //   350: aload_0
    //   351: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   354: getstatic 5736	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SEARCH	I
    //   357: aconst_null
    //   358: aconst_null
    //   359: aconst_null
    //   360: aconst_null
    //   361: ldc_w 5738
    //   364: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   367: astore 16
    //   369: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   372: dup
    //   373: aload_0
    //   374: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   377: getstatic 5741	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_SEARCHPLACEHOLDER	I
    //   380: aconst_null
    //   381: aconst_null
    //   382: aconst_null
    //   383: aconst_null
    //   384: ldc_w 5743
    //   387: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   390: astore 17
    //   392: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   395: dup
    //   396: aload_0
    //   397: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   400: getstatic 5746	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_ITEMSCOLOR	I
    //   403: aconst_null
    //   404: aconst_null
    //   405: aconst_null
    //   406: aconst_null
    //   407: ldc_w 4526
    //   410: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   413: astore 18
    //   415: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   418: dup
    //   419: aload_0
    //   420: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   423: getstatic 5749	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_BACKGROUND	I
    //   426: aconst_null
    //   427: aconst_null
    //   428: aconst_null
    //   429: aconst_null
    //   430: ldc_w 5751
    //   433: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   436: astore 19
    //   438: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   441: dup
    //   442: aload_0
    //   443: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   446: getstatic 5754	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_TOPBACKGROUND	I
    //   449: aconst_null
    //   450: aconst_null
    //   451: aconst_null
    //   452: aconst_null
    //   453: ldc_w 5756
    //   456: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   459: astore 20
    //   461: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   464: dup
    //   465: aload_0
    //   466: getfield 781	org/telegram/ui/ChatActivity:actionBar	Lorg/telegram/ui/ActionBar/ActionBar;
    //   469: getstatic 5759	org/telegram/ui/ActionBar/ThemeDescription:FLAG_AB_AM_SELECTORCOLOR	I
    //   472: aconst_null
    //   473: aconst_null
    //   474: aconst_null
    //   475: aconst_null
    //   476: ldc_w 5761
    //   479: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   482: astore 21
    //   484: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   487: dup
    //   488: aload_0
    //   489: getfield 1040	org/telegram/ui/ChatActivity:selectedMessagesCountTextView	Lorg/telegram/ui/Components/NumberTextView;
    //   492: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   495: aconst_null
    //   496: aconst_null
    //   497: aconst_null
    //   498: aconst_null
    //   499: ldc_w 4526
    //   502: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   505: astore 22
    //   507: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   510: dup
    //   511: aload_0
    //   512: getfield 1468	org/telegram/ui/ChatActivity:actionModeTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   515: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   518: aconst_null
    //   519: aconst_null
    //   520: aconst_null
    //   521: aconst_null
    //   522: ldc_w 4526
    //   525: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   528: astore 23
    //   530: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   533: dup
    //   534: aload_0
    //   535: getfield 1471	org/telegram/ui/ChatActivity:actionModeSubTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   538: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   541: aconst_null
    //   542: aconst_null
    //   543: aconst_null
    //   544: aconst_null
    //   545: ldc_w 4526
    //   548: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   551: astore 24
    //   553: aload_0
    //   554: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   557: ifnull +14920 -> 15477
    //   560: aload_0
    //   561: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   564: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   567: astore_2
    //   568: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   571: dup
    //   572: aload_2
    //   573: iconst_0
    //   574: aconst_null
    //   575: aconst_null
    //   576: iconst_1
    //   577: anewarray 4185	android/graphics/drawable/Drawable
    //   580: dup
    //   581: iconst_0
    //   582: getstatic 4338	org/telegram/ui/ActionBar/Theme:chat_muteIconDrawable	Landroid/graphics/drawable/Drawable;
    //   585: aastore
    //   586: aconst_null
    //   587: ldc_w 5763
    //   590: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   593: astore 25
    //   595: aload_0
    //   596: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   599: ifnull +14883 -> 15482
    //   602: aload_0
    //   603: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   606: invokevirtual 5714	org/telegram/ui/Components/ChatAvatarContainer:getTitleTextView	()Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   609: astore_2
    //   610: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   613: dup
    //   614: aload_2
    //   615: iconst_0
    //   616: aconst_null
    //   617: aconst_null
    //   618: iconst_1
    //   619: anewarray 4185	android/graphics/drawable/Drawable
    //   622: dup
    //   623: iconst_0
    //   624: getstatic 4341	org/telegram/ui/ActionBar/Theme:chat_lockIconDrawable	Landroid/graphics/drawable/Drawable;
    //   627: aastore
    //   628: aconst_null
    //   629: ldc_w 5765
    //   632: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   635: astore 26
    //   637: aload_0
    //   638: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   641: astore_2
    //   642: getstatic 5768	org/telegram/ui/ActionBar/Theme:avatar_photoDrawable	Landroid/graphics/drawable/Drawable;
    //   645: astore 27
    //   647: getstatic 5771	org/telegram/ui/ActionBar/Theme:avatar_broadcastDrawable	Landroid/graphics/drawable/Drawable;
    //   650: astore 28
    //   652: getstatic 5774	org/telegram/ui/ActionBar/Theme:avatar_savedDrawable	Landroid/graphics/drawable/Drawable;
    //   655: astore 29
    //   657: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   660: dup
    //   661: aload_2
    //   662: iconst_0
    //   663: iconst_1
    //   664: anewarray 5776	java/lang/Class
    //   667: dup
    //   668: iconst_0
    //   669: ldc_w 2530
    //   672: aastore
    //   673: aconst_null
    //   674: iconst_3
    //   675: anewarray 4185	android/graphics/drawable/Drawable
    //   678: dup
    //   679: iconst_0
    //   680: aload 27
    //   682: aastore
    //   683: dup
    //   684: iconst_1
    //   685: aload 28
    //   687: aastore
    //   688: dup
    //   689: iconst_2
    //   690: aload 29
    //   692: aastore
    //   693: aconst_null
    //   694: ldc_w 5778
    //   697: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   700: astore 27
    //   702: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   705: dup
    //   706: aload_0
    //   707: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   710: iconst_0
    //   711: iconst_1
    //   712: anewarray 5776	java/lang/Class
    //   715: dup
    //   716: iconst_0
    //   717: ldc_w 2530
    //   720: aastore
    //   721: aconst_null
    //   722: aconst_null
    //   723: aconst_null
    //   724: ldc_w 5780
    //   727: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   730: astore 28
    //   732: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   735: dup
    //   736: aload_0
    //   737: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   740: iconst_0
    //   741: iconst_1
    //   742: anewarray 5776	java/lang/Class
    //   745: dup
    //   746: iconst_0
    //   747: ldc_w 2530
    //   750: aastore
    //   751: aconst_null
    //   752: aconst_null
    //   753: aconst_null
    //   754: ldc_w 5782
    //   757: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   760: astore 29
    //   762: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   765: dup
    //   766: aload_0
    //   767: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   770: iconst_0
    //   771: iconst_1
    //   772: anewarray 5776	java/lang/Class
    //   775: dup
    //   776: iconst_0
    //   777: ldc_w 2530
    //   780: aastore
    //   781: aconst_null
    //   782: aconst_null
    //   783: aconst_null
    //   784: ldc_w 5784
    //   787: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   790: astore 30
    //   792: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   795: dup
    //   796: aload_0
    //   797: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   800: iconst_0
    //   801: iconst_1
    //   802: anewarray 5776	java/lang/Class
    //   805: dup
    //   806: iconst_0
    //   807: ldc_w 2530
    //   810: aastore
    //   811: aconst_null
    //   812: aconst_null
    //   813: aconst_null
    //   814: ldc_w 5786
    //   817: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   820: astore 31
    //   822: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   825: dup
    //   826: aload_0
    //   827: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   830: iconst_0
    //   831: iconst_1
    //   832: anewarray 5776	java/lang/Class
    //   835: dup
    //   836: iconst_0
    //   837: ldc_w 2530
    //   840: aastore
    //   841: aconst_null
    //   842: aconst_null
    //   843: aconst_null
    //   844: ldc_w 5788
    //   847: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   850: astore 32
    //   852: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   855: dup
    //   856: aload_0
    //   857: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   860: iconst_0
    //   861: iconst_1
    //   862: anewarray 5776	java/lang/Class
    //   865: dup
    //   866: iconst_0
    //   867: ldc_w 2530
    //   870: aastore
    //   871: aconst_null
    //   872: aconst_null
    //   873: aconst_null
    //   874: ldc_w 5790
    //   877: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   880: astore 33
    //   882: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   885: dup
    //   886: aload_0
    //   887: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   890: iconst_0
    //   891: iconst_1
    //   892: anewarray 5776	java/lang/Class
    //   895: dup
    //   896: iconst_0
    //   897: ldc_w 2530
    //   900: aastore
    //   901: aconst_null
    //   902: aconst_null
    //   903: aconst_null
    //   904: ldc_w 5792
    //   907: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   910: astore 34
    //   912: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   915: dup
    //   916: aload_0
    //   917: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   920: iconst_0
    //   921: iconst_1
    //   922: anewarray 5776	java/lang/Class
    //   925: dup
    //   926: iconst_0
    //   927: ldc_w 2530
    //   930: aastore
    //   931: aconst_null
    //   932: aconst_null
    //   933: aconst_null
    //   934: ldc_w 5794
    //   937: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   940: astore 35
    //   942: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   945: dup
    //   946: aload_0
    //   947: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   950: iconst_0
    //   951: iconst_1
    //   952: anewarray 5776	java/lang/Class
    //   955: dup
    //   956: iconst_0
    //   957: ldc_w 2530
    //   960: aastore
    //   961: aconst_null
    //   962: aconst_null
    //   963: aconst_null
    //   964: ldc_w 5796
    //   967: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   970: astore 36
    //   972: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   975: dup
    //   976: aload_0
    //   977: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   980: iconst_0
    //   981: iconst_1
    //   982: anewarray 5776	java/lang/Class
    //   985: dup
    //   986: iconst_0
    //   987: ldc_w 2530
    //   990: aastore
    //   991: aconst_null
    //   992: aconst_null
    //   993: aconst_null
    //   994: ldc_w 5798
    //   997: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1000: astore 37
    //   1002: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1005: dup
    //   1006: aload_0
    //   1007: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1010: iconst_0
    //   1011: iconst_1
    //   1012: anewarray 5776	java/lang/Class
    //   1015: dup
    //   1016: iconst_0
    //   1017: ldc_w 2530
    //   1020: aastore
    //   1021: aconst_null
    //   1022: aconst_null
    //   1023: aconst_null
    //   1024: ldc_w 5800
    //   1027: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1030: astore 38
    //   1032: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1035: dup
    //   1036: aload_0
    //   1037: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1040: iconst_0
    //   1041: iconst_1
    //   1042: anewarray 5776	java/lang/Class
    //   1045: dup
    //   1046: iconst_0
    //   1047: ldc_w 2530
    //   1050: aastore
    //   1051: aconst_null
    //   1052: aconst_null
    //   1053: aconst_null
    //   1054: ldc_w 5802
    //   1057: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1060: astore 39
    //   1062: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1065: dup
    //   1066: aload_0
    //   1067: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1070: iconst_0
    //   1071: iconst_1
    //   1072: anewarray 5776	java/lang/Class
    //   1075: dup
    //   1076: iconst_0
    //   1077: ldc_w 2530
    //   1080: aastore
    //   1081: aconst_null
    //   1082: aconst_null
    //   1083: aconst_null
    //   1084: ldc_w 5804
    //   1087: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1090: astore 40
    //   1092: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1095: dup
    //   1096: aload_0
    //   1097: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1100: iconst_0
    //   1101: iconst_1
    //   1102: anewarray 5776	java/lang/Class
    //   1105: dup
    //   1106: iconst_0
    //   1107: ldc_w 2530
    //   1110: aastore
    //   1111: aconst_null
    //   1112: aconst_null
    //   1113: aconst_null
    //   1114: ldc_w 5806
    //   1117: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1120: astore 41
    //   1122: aload_0
    //   1123: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1126: astore_2
    //   1127: getstatic 5809	org/telegram/ui/ActionBar/Theme:chat_msgInDrawable	Landroid/graphics/drawable/Drawable;
    //   1130: astore 42
    //   1132: getstatic 5812	org/telegram/ui/ActionBar/Theme:chat_msgInMediaDrawable	Landroid/graphics/drawable/Drawable;
    //   1135: astore 43
    //   1137: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1140: dup
    //   1141: aload_2
    //   1142: iconst_0
    //   1143: iconst_2
    //   1144: anewarray 5776	java/lang/Class
    //   1147: dup
    //   1148: iconst_0
    //   1149: ldc_w 2530
    //   1152: aastore
    //   1153: dup
    //   1154: iconst_1
    //   1155: ldc_w 5814
    //   1158: aastore
    //   1159: aconst_null
    //   1160: iconst_2
    //   1161: anewarray 4185	android/graphics/drawable/Drawable
    //   1164: dup
    //   1165: iconst_0
    //   1166: aload 42
    //   1168: aastore
    //   1169: dup
    //   1170: iconst_1
    //   1171: aload 43
    //   1173: aastore
    //   1174: aconst_null
    //   1175: ldc_w 5816
    //   1178: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1181: astore 42
    //   1183: aload_0
    //   1184: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1187: astore_2
    //   1188: getstatic 5819	org/telegram/ui/ActionBar/Theme:chat_msgInSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1191: astore 43
    //   1193: getstatic 5822	org/telegram/ui/ActionBar/Theme:chat_msgInMediaSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1196: astore 44
    //   1198: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1201: dup
    //   1202: aload_2
    //   1203: iconst_0
    //   1204: iconst_1
    //   1205: anewarray 5776	java/lang/Class
    //   1208: dup
    //   1209: iconst_0
    //   1210: ldc_w 2530
    //   1213: aastore
    //   1214: aconst_null
    //   1215: iconst_2
    //   1216: anewarray 4185	android/graphics/drawable/Drawable
    //   1219: dup
    //   1220: iconst_0
    //   1221: aload 43
    //   1223: aastore
    //   1224: dup
    //   1225: iconst_1
    //   1226: aload 44
    //   1228: aastore
    //   1229: aconst_null
    //   1230: ldc_w 5824
    //   1233: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1236: astore 43
    //   1238: aload_0
    //   1239: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1242: astore_2
    //   1243: getstatic 5827	org/telegram/ui/ActionBar/Theme:chat_msgInShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1246: astore 44
    //   1248: getstatic 5830	org/telegram/ui/ActionBar/Theme:chat_msgInMediaShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1251: astore 45
    //   1253: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1256: dup
    //   1257: aload_2
    //   1258: iconst_0
    //   1259: iconst_2
    //   1260: anewarray 5776	java/lang/Class
    //   1263: dup
    //   1264: iconst_0
    //   1265: ldc_w 2530
    //   1268: aastore
    //   1269: dup
    //   1270: iconst_1
    //   1271: ldc_w 5814
    //   1274: aastore
    //   1275: aconst_null
    //   1276: iconst_2
    //   1277: anewarray 4185	android/graphics/drawable/Drawable
    //   1280: dup
    //   1281: iconst_0
    //   1282: aload 44
    //   1284: aastore
    //   1285: dup
    //   1286: iconst_1
    //   1287: aload 45
    //   1289: aastore
    //   1290: aconst_null
    //   1291: ldc_w 5832
    //   1294: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1297: astore 44
    //   1299: aload_0
    //   1300: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1303: astore_2
    //   1304: getstatic 5835	org/telegram/ui/ActionBar/Theme:chat_msgOutDrawable	Landroid/graphics/drawable/Drawable;
    //   1307: astore 45
    //   1309: getstatic 5838	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaDrawable	Landroid/graphics/drawable/Drawable;
    //   1312: astore 46
    //   1314: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1317: dup
    //   1318: aload_2
    //   1319: iconst_0
    //   1320: iconst_1
    //   1321: anewarray 5776	java/lang/Class
    //   1324: dup
    //   1325: iconst_0
    //   1326: ldc_w 2530
    //   1329: aastore
    //   1330: aconst_null
    //   1331: iconst_2
    //   1332: anewarray 4185	android/graphics/drawable/Drawable
    //   1335: dup
    //   1336: iconst_0
    //   1337: aload 45
    //   1339: aastore
    //   1340: dup
    //   1341: iconst_1
    //   1342: aload 46
    //   1344: aastore
    //   1345: aconst_null
    //   1346: ldc_w 5840
    //   1349: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1352: astore 45
    //   1354: aload_0
    //   1355: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1358: astore_2
    //   1359: getstatic 5843	org/telegram/ui/ActionBar/Theme:chat_msgOutSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1362: astore 46
    //   1364: getstatic 5846	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1367: astore 47
    //   1369: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1372: dup
    //   1373: aload_2
    //   1374: iconst_0
    //   1375: iconst_1
    //   1376: anewarray 5776	java/lang/Class
    //   1379: dup
    //   1380: iconst_0
    //   1381: ldc_w 2530
    //   1384: aastore
    //   1385: aconst_null
    //   1386: iconst_2
    //   1387: anewarray 4185	android/graphics/drawable/Drawable
    //   1390: dup
    //   1391: iconst_0
    //   1392: aload 46
    //   1394: aastore
    //   1395: dup
    //   1396: iconst_1
    //   1397: aload 47
    //   1399: aastore
    //   1400: aconst_null
    //   1401: ldc_w 5848
    //   1404: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1407: astore 46
    //   1409: aload_0
    //   1410: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1413: astore_2
    //   1414: getstatic 5851	org/telegram/ui/ActionBar/Theme:chat_msgOutShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1417: astore 47
    //   1419: getstatic 5854	org/telegram/ui/ActionBar/Theme:chat_msgOutMediaShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   1422: astore 48
    //   1424: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1427: dup
    //   1428: aload_2
    //   1429: iconst_0
    //   1430: iconst_1
    //   1431: anewarray 5776	java/lang/Class
    //   1434: dup
    //   1435: iconst_0
    //   1436: ldc_w 2530
    //   1439: aastore
    //   1440: aconst_null
    //   1441: iconst_2
    //   1442: anewarray 4185	android/graphics/drawable/Drawable
    //   1445: dup
    //   1446: iconst_0
    //   1447: aload 47
    //   1449: aastore
    //   1450: dup
    //   1451: iconst_1
    //   1452: aload 48
    //   1454: aastore
    //   1455: aconst_null
    //   1456: ldc_w 5856
    //   1459: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1462: astore 47
    //   1464: aload_0
    //   1465: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1468: astore_2
    //   1469: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   1472: istore_1
    //   1473: getstatic 5860	org/telegram/ui/ActionBar/Theme:chat_actionTextPaint	Landroid/text/TextPaint;
    //   1476: astore 48
    //   1478: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1481: dup
    //   1482: aload_2
    //   1483: iload_1
    //   1484: iconst_1
    //   1485: anewarray 5776	java/lang/Class
    //   1488: dup
    //   1489: iconst_0
    //   1490: ldc_w 2236
    //   1493: aastore
    //   1494: aload 48
    //   1496: aconst_null
    //   1497: aconst_null
    //   1498: ldc_w 4638
    //   1501: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1504: astore 48
    //   1506: aload_0
    //   1507: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1510: astore_2
    //   1511: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1514: istore_1
    //   1515: getstatic 5860	org/telegram/ui/ActionBar/Theme:chat_actionTextPaint	Landroid/text/TextPaint;
    //   1518: astore 49
    //   1520: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1523: dup
    //   1524: aload_2
    //   1525: iload_1
    //   1526: iconst_1
    //   1527: anewarray 5776	java/lang/Class
    //   1530: dup
    //   1531: iconst_0
    //   1532: ldc_w 2236
    //   1535: aastore
    //   1536: aload 49
    //   1538: aconst_null
    //   1539: aconst_null
    //   1540: ldc_w 5865
    //   1543: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1546: astore 49
    //   1548: aload_0
    //   1549: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1552: astore_2
    //   1553: getstatic 5868	org/telegram/ui/ActionBar/Theme:chat_shareIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1556: astore 50
    //   1558: getstatic 5871	org/telegram/ui/ActionBar/Theme:chat_replyIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1561: astore 51
    //   1563: getstatic 5874	org/telegram/ui/ActionBar/Theme:chat_botInlineDrawable	Landroid/graphics/drawable/Drawable;
    //   1566: astore 52
    //   1568: getstatic 5877	org/telegram/ui/ActionBar/Theme:chat_botLinkDrawalbe	Landroid/graphics/drawable/Drawable;
    //   1571: astore 53
    //   1573: getstatic 5880	org/telegram/ui/ActionBar/Theme:chat_goIconDrawable	Landroid/graphics/drawable/Drawable;
    //   1576: astore 54
    //   1578: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1581: dup
    //   1582: aload_2
    //   1583: iconst_0
    //   1584: iconst_1
    //   1585: anewarray 5776	java/lang/Class
    //   1588: dup
    //   1589: iconst_0
    //   1590: ldc_w 2530
    //   1593: aastore
    //   1594: aconst_null
    //   1595: iconst_5
    //   1596: anewarray 4185	android/graphics/drawable/Drawable
    //   1599: dup
    //   1600: iconst_0
    //   1601: aload 50
    //   1603: aastore
    //   1604: dup
    //   1605: iconst_1
    //   1606: aload 51
    //   1608: aastore
    //   1609: dup
    //   1610: iconst_2
    //   1611: aload 52
    //   1613: aastore
    //   1614: dup
    //   1615: iconst_3
    //   1616: aload 53
    //   1618: aastore
    //   1619: dup
    //   1620: iconst_4
    //   1621: aload 54
    //   1623: aastore
    //   1624: aconst_null
    //   1625: ldc_w 5882
    //   1628: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1631: astore 50
    //   1633: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1636: dup
    //   1637: aload_0
    //   1638: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1641: iconst_0
    //   1642: iconst_2
    //   1643: anewarray 5776	java/lang/Class
    //   1646: dup
    //   1647: iconst_0
    //   1648: ldc_w 2530
    //   1651: aastore
    //   1652: dup
    //   1653: iconst_1
    //   1654: ldc_w 2236
    //   1657: aastore
    //   1658: aconst_null
    //   1659: aconst_null
    //   1660: aconst_null
    //   1661: ldc_w 5884
    //   1664: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1667: astore 51
    //   1669: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1672: dup
    //   1673: aload_0
    //   1674: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1677: iconst_0
    //   1678: iconst_2
    //   1679: anewarray 5776	java/lang/Class
    //   1682: dup
    //   1683: iconst_0
    //   1684: ldc_w 2530
    //   1687: aastore
    //   1688: dup
    //   1689: iconst_1
    //   1690: ldc_w 2236
    //   1693: aastore
    //   1694: aconst_null
    //   1695: aconst_null
    //   1696: aconst_null
    //   1697: ldc_w 5886
    //   1700: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1703: astore 52
    //   1705: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1708: dup
    //   1709: aload_0
    //   1710: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1713: iconst_0
    //   1714: iconst_2
    //   1715: anewarray 5776	java/lang/Class
    //   1718: dup
    //   1719: iconst_0
    //   1720: ldc_w 2530
    //   1723: aastore
    //   1724: dup
    //   1725: iconst_1
    //   1726: ldc_w 5814
    //   1729: aastore
    //   1730: aconst_null
    //   1731: aconst_null
    //   1732: aconst_null
    //   1733: ldc_w 5888
    //   1736: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1739: astore 53
    //   1741: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1744: dup
    //   1745: aload_0
    //   1746: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1749: iconst_0
    //   1750: iconst_1
    //   1751: anewarray 5776	java/lang/Class
    //   1754: dup
    //   1755: iconst_0
    //   1756: ldc_w 2530
    //   1759: aastore
    //   1760: aconst_null
    //   1761: aconst_null
    //   1762: aconst_null
    //   1763: ldc_w 5890
    //   1766: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1769: astore 54
    //   1771: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1774: dup
    //   1775: aload_0
    //   1776: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1779: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1782: iconst_2
    //   1783: anewarray 5776	java/lang/Class
    //   1786: dup
    //   1787: iconst_0
    //   1788: ldc_w 2530
    //   1791: aastore
    //   1792: dup
    //   1793: iconst_1
    //   1794: ldc_w 5814
    //   1797: aastore
    //   1798: aconst_null
    //   1799: aconst_null
    //   1800: aconst_null
    //   1801: ldc_w 5892
    //   1804: aconst_null
    //   1805: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   1808: astore 55
    //   1810: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1813: dup
    //   1814: aload_0
    //   1815: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1818: getstatic 5863	org/telegram/ui/ActionBar/ThemeDescription:FLAG_LINKCOLOR	I
    //   1821: iconst_1
    //   1822: anewarray 5776	java/lang/Class
    //   1825: dup
    //   1826: iconst_0
    //   1827: ldc_w 2530
    //   1830: aastore
    //   1831: aconst_null
    //   1832: aconst_null
    //   1833: aconst_null
    //   1834: ldc_w 5894
    //   1837: aconst_null
    //   1838: invokespecial 5733	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;Ljava/lang/Object;)V
    //   1841: astore 56
    //   1843: aload_0
    //   1844: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1847: astore_2
    //   1848: getstatic 5897	org/telegram/ui/ActionBar/Theme:chat_msgOutCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   1851: astore 57
    //   1853: getstatic 5900	org/telegram/ui/ActionBar/Theme:chat_msgOutHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   1856: astore 58
    //   1858: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1861: dup
    //   1862: aload_2
    //   1863: iconst_0
    //   1864: iconst_1
    //   1865: anewarray 5776	java/lang/Class
    //   1868: dup
    //   1869: iconst_0
    //   1870: ldc_w 2530
    //   1873: aastore
    //   1874: aconst_null
    //   1875: iconst_2
    //   1876: anewarray 4185	android/graphics/drawable/Drawable
    //   1879: dup
    //   1880: iconst_0
    //   1881: aload 57
    //   1883: aastore
    //   1884: dup
    //   1885: iconst_1
    //   1886: aload 58
    //   1888: aastore
    //   1889: aconst_null
    //   1890: ldc_w 5902
    //   1893: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1896: astore 57
    //   1898: aload_0
    //   1899: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1902: astore_2
    //   1903: getstatic 5905	org/telegram/ui/ActionBar/Theme:chat_msgOutCheckSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1906: astore 58
    //   1908: getstatic 5908	org/telegram/ui/ActionBar/Theme:chat_msgOutHalfCheckSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   1911: astore 59
    //   1913: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1916: dup
    //   1917: aload_2
    //   1918: iconst_0
    //   1919: iconst_1
    //   1920: anewarray 5776	java/lang/Class
    //   1923: dup
    //   1924: iconst_0
    //   1925: ldc_w 2530
    //   1928: aastore
    //   1929: aconst_null
    //   1930: iconst_2
    //   1931: anewarray 4185	android/graphics/drawable/Drawable
    //   1934: dup
    //   1935: iconst_0
    //   1936: aload 58
    //   1938: aastore
    //   1939: dup
    //   1940: iconst_1
    //   1941: aload 59
    //   1943: aastore
    //   1944: aconst_null
    //   1945: ldc_w 5910
    //   1948: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1951: astore 58
    //   1953: aload_0
    //   1954: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   1957: astore_2
    //   1958: getstatic 5913	org/telegram/ui/ActionBar/Theme:chat_msgOutClockDrawable	Landroid/graphics/drawable/Drawable;
    //   1961: astore 59
    //   1963: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   1966: dup
    //   1967: aload_2
    //   1968: iconst_0
    //   1969: iconst_1
    //   1970: anewarray 5776	java/lang/Class
    //   1973: dup
    //   1974: iconst_0
    //   1975: ldc_w 2530
    //   1978: aastore
    //   1979: aconst_null
    //   1980: iconst_1
    //   1981: anewarray 4185	android/graphics/drawable/Drawable
    //   1984: dup
    //   1985: iconst_0
    //   1986: aload 59
    //   1988: aastore
    //   1989: aconst_null
    //   1990: ldc_w 5915
    //   1993: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   1996: astore 59
    //   1998: aload_0
    //   1999: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2002: astore_2
    //   2003: getstatic 5918	org/telegram/ui/ActionBar/Theme:chat_msgOutSelectedClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2006: astore 60
    //   2008: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2011: dup
    //   2012: aload_2
    //   2013: iconst_0
    //   2014: iconst_1
    //   2015: anewarray 5776	java/lang/Class
    //   2018: dup
    //   2019: iconst_0
    //   2020: ldc_w 2530
    //   2023: aastore
    //   2024: aconst_null
    //   2025: iconst_1
    //   2026: anewarray 4185	android/graphics/drawable/Drawable
    //   2029: dup
    //   2030: iconst_0
    //   2031: aload 60
    //   2033: aastore
    //   2034: aconst_null
    //   2035: ldc_w 5920
    //   2038: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2041: astore 60
    //   2043: aload_0
    //   2044: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2047: astore_2
    //   2048: getstatic 5923	org/telegram/ui/ActionBar/Theme:chat_msgInClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2051: astore 61
    //   2053: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2056: dup
    //   2057: aload_2
    //   2058: iconst_0
    //   2059: iconst_1
    //   2060: anewarray 5776	java/lang/Class
    //   2063: dup
    //   2064: iconst_0
    //   2065: ldc_w 2530
    //   2068: aastore
    //   2069: aconst_null
    //   2070: iconst_1
    //   2071: anewarray 4185	android/graphics/drawable/Drawable
    //   2074: dup
    //   2075: iconst_0
    //   2076: aload 61
    //   2078: aastore
    //   2079: aconst_null
    //   2080: ldc_w 5925
    //   2083: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2086: astore 61
    //   2088: aload_0
    //   2089: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2092: astore_2
    //   2093: getstatic 5928	org/telegram/ui/ActionBar/Theme:chat_msgInSelectedClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2096: astore 62
    //   2098: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2101: dup
    //   2102: aload_2
    //   2103: iconst_0
    //   2104: iconst_1
    //   2105: anewarray 5776	java/lang/Class
    //   2108: dup
    //   2109: iconst_0
    //   2110: ldc_w 2530
    //   2113: aastore
    //   2114: aconst_null
    //   2115: iconst_1
    //   2116: anewarray 4185	android/graphics/drawable/Drawable
    //   2119: dup
    //   2120: iconst_0
    //   2121: aload 62
    //   2123: aastore
    //   2124: aconst_null
    //   2125: ldc_w 5930
    //   2128: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2131: astore 62
    //   2133: aload_0
    //   2134: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2137: astore_2
    //   2138: getstatic 5933	org/telegram/ui/ActionBar/Theme:chat_msgMediaCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2141: astore 63
    //   2143: getstatic 5936	org/telegram/ui/ActionBar/Theme:chat_msgMediaHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2146: astore 64
    //   2148: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2151: dup
    //   2152: aload_2
    //   2153: iconst_0
    //   2154: iconst_1
    //   2155: anewarray 5776	java/lang/Class
    //   2158: dup
    //   2159: iconst_0
    //   2160: ldc_w 2530
    //   2163: aastore
    //   2164: aconst_null
    //   2165: iconst_2
    //   2166: anewarray 4185	android/graphics/drawable/Drawable
    //   2169: dup
    //   2170: iconst_0
    //   2171: aload 63
    //   2173: aastore
    //   2174: dup
    //   2175: iconst_1
    //   2176: aload 64
    //   2178: aastore
    //   2179: aconst_null
    //   2180: ldc_w 5938
    //   2183: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2186: astore 63
    //   2188: aload_0
    //   2189: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2192: astore_2
    //   2193: getstatic 5941	org/telegram/ui/ActionBar/Theme:chat_msgStickerHalfCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2196: astore 64
    //   2198: getstatic 5944	org/telegram/ui/ActionBar/Theme:chat_msgStickerCheckDrawable	Landroid/graphics/drawable/Drawable;
    //   2201: astore 65
    //   2203: getstatic 5947	org/telegram/ui/ActionBar/Theme:chat_msgStickerClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2206: astore 66
    //   2208: getstatic 5950	org/telegram/ui/ActionBar/Theme:chat_msgStickerViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2211: astore 67
    //   2213: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2216: dup
    //   2217: aload_2
    //   2218: iconst_0
    //   2219: iconst_1
    //   2220: anewarray 5776	java/lang/Class
    //   2223: dup
    //   2224: iconst_0
    //   2225: ldc_w 2530
    //   2228: aastore
    //   2229: aconst_null
    //   2230: iconst_4
    //   2231: anewarray 4185	android/graphics/drawable/Drawable
    //   2234: dup
    //   2235: iconst_0
    //   2236: aload 64
    //   2238: aastore
    //   2239: dup
    //   2240: iconst_1
    //   2241: aload 65
    //   2243: aastore
    //   2244: dup
    //   2245: iconst_2
    //   2246: aload 66
    //   2248: aastore
    //   2249: dup
    //   2250: iconst_3
    //   2251: aload 67
    //   2253: aastore
    //   2254: aconst_null
    //   2255: ldc_w 4638
    //   2258: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2261: astore 64
    //   2263: aload_0
    //   2264: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2267: astore_2
    //   2268: getstatic 5953	org/telegram/ui/ActionBar/Theme:chat_msgMediaClockDrawable	Landroid/graphics/drawable/Drawable;
    //   2271: astore 65
    //   2273: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2276: dup
    //   2277: aload_2
    //   2278: iconst_0
    //   2279: iconst_1
    //   2280: anewarray 5776	java/lang/Class
    //   2283: dup
    //   2284: iconst_0
    //   2285: ldc_w 2530
    //   2288: aastore
    //   2289: aconst_null
    //   2290: iconst_1
    //   2291: anewarray 4185	android/graphics/drawable/Drawable
    //   2294: dup
    //   2295: iconst_0
    //   2296: aload 65
    //   2298: aastore
    //   2299: aconst_null
    //   2300: ldc_w 5955
    //   2303: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2306: astore 65
    //   2308: aload_0
    //   2309: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2312: astore_2
    //   2313: getstatic 5958	org/telegram/ui/ActionBar/Theme:chat_msgOutViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2316: astore 66
    //   2318: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2321: dup
    //   2322: aload_2
    //   2323: iconst_0
    //   2324: iconst_1
    //   2325: anewarray 5776	java/lang/Class
    //   2328: dup
    //   2329: iconst_0
    //   2330: ldc_w 2530
    //   2333: aastore
    //   2334: aconst_null
    //   2335: iconst_1
    //   2336: anewarray 4185	android/graphics/drawable/Drawable
    //   2339: dup
    //   2340: iconst_0
    //   2341: aload 66
    //   2343: aastore
    //   2344: aconst_null
    //   2345: ldc_w 5960
    //   2348: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2351: astore 66
    //   2353: aload_0
    //   2354: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2357: astore_2
    //   2358: getstatic 5963	org/telegram/ui/ActionBar/Theme:chat_msgOutViewsSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2361: astore 67
    //   2363: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2366: dup
    //   2367: aload_2
    //   2368: iconst_0
    //   2369: iconst_1
    //   2370: anewarray 5776	java/lang/Class
    //   2373: dup
    //   2374: iconst_0
    //   2375: ldc_w 2530
    //   2378: aastore
    //   2379: aconst_null
    //   2380: iconst_1
    //   2381: anewarray 4185	android/graphics/drawable/Drawable
    //   2384: dup
    //   2385: iconst_0
    //   2386: aload 67
    //   2388: aastore
    //   2389: aconst_null
    //   2390: ldc_w 5965
    //   2393: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2396: astore 67
    //   2398: aload_0
    //   2399: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2402: astore_2
    //   2403: getstatic 5968	org/telegram/ui/ActionBar/Theme:chat_msgInViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2406: astore 68
    //   2408: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2411: dup
    //   2412: aload_2
    //   2413: iconst_0
    //   2414: iconst_1
    //   2415: anewarray 5776	java/lang/Class
    //   2418: dup
    //   2419: iconst_0
    //   2420: ldc_w 2530
    //   2423: aastore
    //   2424: aconst_null
    //   2425: iconst_1
    //   2426: anewarray 4185	android/graphics/drawable/Drawable
    //   2429: dup
    //   2430: iconst_0
    //   2431: aload 68
    //   2433: aastore
    //   2434: aconst_null
    //   2435: ldc_w 5970
    //   2438: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2441: astore 68
    //   2443: aload_0
    //   2444: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2447: astore_2
    //   2448: getstatic 5973	org/telegram/ui/ActionBar/Theme:chat_msgInViewsSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2451: astore 69
    //   2453: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2456: dup
    //   2457: aload_2
    //   2458: iconst_0
    //   2459: iconst_1
    //   2460: anewarray 5776	java/lang/Class
    //   2463: dup
    //   2464: iconst_0
    //   2465: ldc_w 2530
    //   2468: aastore
    //   2469: aconst_null
    //   2470: iconst_1
    //   2471: anewarray 4185	android/graphics/drawable/Drawable
    //   2474: dup
    //   2475: iconst_0
    //   2476: aload 69
    //   2478: aastore
    //   2479: aconst_null
    //   2480: ldc_w 5975
    //   2483: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2486: astore 69
    //   2488: aload_0
    //   2489: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2492: astore_2
    //   2493: getstatic 5978	org/telegram/ui/ActionBar/Theme:chat_msgMediaViewsDrawable	Landroid/graphics/drawable/Drawable;
    //   2496: astore 70
    //   2498: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2501: dup
    //   2502: aload_2
    //   2503: iconst_0
    //   2504: iconst_1
    //   2505: anewarray 5776	java/lang/Class
    //   2508: dup
    //   2509: iconst_0
    //   2510: ldc_w 2530
    //   2513: aastore
    //   2514: aconst_null
    //   2515: iconst_1
    //   2516: anewarray 4185	android/graphics/drawable/Drawable
    //   2519: dup
    //   2520: iconst_0
    //   2521: aload 70
    //   2523: aastore
    //   2524: aconst_null
    //   2525: ldc_w 5980
    //   2528: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2531: astore 70
    //   2533: aload_0
    //   2534: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2537: astore_2
    //   2538: getstatic 5983	org/telegram/ui/ActionBar/Theme:chat_msgOutMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2541: astore 71
    //   2543: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2546: dup
    //   2547: aload_2
    //   2548: iconst_0
    //   2549: iconst_1
    //   2550: anewarray 5776	java/lang/Class
    //   2553: dup
    //   2554: iconst_0
    //   2555: ldc_w 2530
    //   2558: aastore
    //   2559: aconst_null
    //   2560: iconst_1
    //   2561: anewarray 4185	android/graphics/drawable/Drawable
    //   2564: dup
    //   2565: iconst_0
    //   2566: aload 71
    //   2568: aastore
    //   2569: aconst_null
    //   2570: ldc_w 5985
    //   2573: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2576: astore 71
    //   2578: aload_0
    //   2579: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2582: astore_2
    //   2583: getstatic 5988	org/telegram/ui/ActionBar/Theme:chat_msgOutMenuSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2586: astore 73
    //   2588: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2591: dup
    //   2592: aload_2
    //   2593: iconst_0
    //   2594: iconst_1
    //   2595: anewarray 5776	java/lang/Class
    //   2598: dup
    //   2599: iconst_0
    //   2600: ldc_w 2530
    //   2603: aastore
    //   2604: aconst_null
    //   2605: iconst_1
    //   2606: anewarray 4185	android/graphics/drawable/Drawable
    //   2609: dup
    //   2610: iconst_0
    //   2611: aload 73
    //   2613: aastore
    //   2614: aconst_null
    //   2615: ldc_w 5990
    //   2618: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2621: astore 73
    //   2623: aload_0
    //   2624: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2627: astore_2
    //   2628: getstatic 5993	org/telegram/ui/ActionBar/Theme:chat_msgInMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2631: astore 74
    //   2633: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2636: dup
    //   2637: aload_2
    //   2638: iconst_0
    //   2639: iconst_1
    //   2640: anewarray 5776	java/lang/Class
    //   2643: dup
    //   2644: iconst_0
    //   2645: ldc_w 2530
    //   2648: aastore
    //   2649: aconst_null
    //   2650: iconst_1
    //   2651: anewarray 4185	android/graphics/drawable/Drawable
    //   2654: dup
    //   2655: iconst_0
    //   2656: aload 74
    //   2658: aastore
    //   2659: aconst_null
    //   2660: ldc_w 5995
    //   2663: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2666: astore 74
    //   2668: aload_0
    //   2669: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2672: astore_2
    //   2673: getstatic 5998	org/telegram/ui/ActionBar/Theme:chat_msgInMenuSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2676: astore 75
    //   2678: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2681: dup
    //   2682: aload_2
    //   2683: iconst_0
    //   2684: iconst_1
    //   2685: anewarray 5776	java/lang/Class
    //   2688: dup
    //   2689: iconst_0
    //   2690: ldc_w 2530
    //   2693: aastore
    //   2694: aconst_null
    //   2695: iconst_1
    //   2696: anewarray 4185	android/graphics/drawable/Drawable
    //   2699: dup
    //   2700: iconst_0
    //   2701: aload 75
    //   2703: aastore
    //   2704: aconst_null
    //   2705: ldc_w 6000
    //   2708: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2711: astore 75
    //   2713: aload_0
    //   2714: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2717: astore_2
    //   2718: getstatic 6003	org/telegram/ui/ActionBar/Theme:chat_msgMediaMenuDrawable	Landroid/graphics/drawable/Drawable;
    //   2721: astore 76
    //   2723: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2726: dup
    //   2727: aload_2
    //   2728: iconst_0
    //   2729: iconst_1
    //   2730: anewarray 5776	java/lang/Class
    //   2733: dup
    //   2734: iconst_0
    //   2735: ldc_w 2530
    //   2738: aastore
    //   2739: aconst_null
    //   2740: iconst_1
    //   2741: anewarray 4185	android/graphics/drawable/Drawable
    //   2744: dup
    //   2745: iconst_0
    //   2746: aload 76
    //   2748: aastore
    //   2749: aconst_null
    //   2750: ldc_w 6005
    //   2753: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2756: astore 76
    //   2758: aload_0
    //   2759: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2762: astore_2
    //   2763: getstatic 6008	org/telegram/ui/ActionBar/Theme:chat_msgOutInstantDrawable	Landroid/graphics/drawable/Drawable;
    //   2766: astore 77
    //   2768: getstatic 6011	org/telegram/ui/ActionBar/Theme:chat_msgOutCallDrawable	Landroid/graphics/drawable/Drawable;
    //   2771: astore 78
    //   2773: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2776: dup
    //   2777: aload_2
    //   2778: iconst_0
    //   2779: iconst_1
    //   2780: anewarray 5776	java/lang/Class
    //   2783: dup
    //   2784: iconst_0
    //   2785: ldc_w 2530
    //   2788: aastore
    //   2789: aconst_null
    //   2790: iconst_2
    //   2791: anewarray 4185	android/graphics/drawable/Drawable
    //   2794: dup
    //   2795: iconst_0
    //   2796: aload 77
    //   2798: aastore
    //   2799: dup
    //   2800: iconst_1
    //   2801: aload 78
    //   2803: aastore
    //   2804: aconst_null
    //   2805: ldc_w 6013
    //   2808: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2811: astore 77
    //   2813: aload_0
    //   2814: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2817: astore_2
    //   2818: getstatic 6016	org/telegram/ui/ActionBar/Theme:chat_msgOutCallSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2821: astore 78
    //   2823: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2826: dup
    //   2827: aload_2
    //   2828: iconst_0
    //   2829: iconst_1
    //   2830: anewarray 5776	java/lang/Class
    //   2833: dup
    //   2834: iconst_0
    //   2835: ldc_w 2530
    //   2838: aastore
    //   2839: aconst_null
    //   2840: iconst_1
    //   2841: anewarray 4185	android/graphics/drawable/Drawable
    //   2844: dup
    //   2845: iconst_0
    //   2846: aload 78
    //   2848: aastore
    //   2849: aconst_null
    //   2850: ldc_w 6018
    //   2853: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2856: astore 78
    //   2858: aload_0
    //   2859: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2862: astore_2
    //   2863: getstatic 6021	org/telegram/ui/ActionBar/Theme:chat_msgInInstantDrawable	Landroid/graphics/drawable/Drawable;
    //   2866: astore 79
    //   2868: getstatic 6024	org/telegram/ui/ActionBar/Theme:chat_msgInCallDrawable	Landroid/graphics/drawable/Drawable;
    //   2871: astore 80
    //   2873: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2876: dup
    //   2877: aload_2
    //   2878: iconst_0
    //   2879: iconst_1
    //   2880: anewarray 5776	java/lang/Class
    //   2883: dup
    //   2884: iconst_0
    //   2885: ldc_w 2530
    //   2888: aastore
    //   2889: aconst_null
    //   2890: iconst_2
    //   2891: anewarray 4185	android/graphics/drawable/Drawable
    //   2894: dup
    //   2895: iconst_0
    //   2896: aload 79
    //   2898: aastore
    //   2899: dup
    //   2900: iconst_1
    //   2901: aload 80
    //   2903: aastore
    //   2904: aconst_null
    //   2905: ldc_w 6026
    //   2908: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2911: astore 79
    //   2913: aload_0
    //   2914: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2917: astore_2
    //   2918: getstatic 6029	org/telegram/ui/ActionBar/Theme:chat_msgInCallSelectedDrawable	Landroid/graphics/drawable/Drawable;
    //   2921: astore 80
    //   2923: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2926: dup
    //   2927: aload_2
    //   2928: iconst_0
    //   2929: iconst_1
    //   2930: anewarray 5776	java/lang/Class
    //   2933: dup
    //   2934: iconst_0
    //   2935: ldc_w 2530
    //   2938: aastore
    //   2939: aconst_null
    //   2940: iconst_1
    //   2941: anewarray 4185	android/graphics/drawable/Drawable
    //   2944: dup
    //   2945: iconst_0
    //   2946: aload 80
    //   2948: aastore
    //   2949: aconst_null
    //   2950: ldc_w 6031
    //   2953: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   2956: astore 80
    //   2958: aload_0
    //   2959: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   2962: astore_2
    //   2963: getstatic 6034	org/telegram/ui/ActionBar/Theme:chat_msgCallUpRedDrawable	Landroid/graphics/drawable/Drawable;
    //   2966: astore 81
    //   2968: getstatic 6037	org/telegram/ui/ActionBar/Theme:chat_msgCallDownRedDrawable	Landroid/graphics/drawable/Drawable;
    //   2971: astore 82
    //   2973: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   2976: dup
    //   2977: aload_2
    //   2978: iconst_0
    //   2979: iconst_1
    //   2980: anewarray 5776	java/lang/Class
    //   2983: dup
    //   2984: iconst_0
    //   2985: ldc_w 2530
    //   2988: aastore
    //   2989: aconst_null
    //   2990: iconst_2
    //   2991: anewarray 4185	android/graphics/drawable/Drawable
    //   2994: dup
    //   2995: iconst_0
    //   2996: aload 81
    //   2998: aastore
    //   2999: dup
    //   3000: iconst_1
    //   3001: aload 82
    //   3003: aastore
    //   3004: aconst_null
    //   3005: ldc_w 6039
    //   3008: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3011: astore 81
    //   3013: aload_0
    //   3014: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3017: astore_2
    //   3018: getstatic 6042	org/telegram/ui/ActionBar/Theme:chat_msgCallUpGreenDrawable	Landroid/graphics/drawable/Drawable;
    //   3021: astore 82
    //   3023: getstatic 6045	org/telegram/ui/ActionBar/Theme:chat_msgCallDownGreenDrawable	Landroid/graphics/drawable/Drawable;
    //   3026: astore 83
    //   3028: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3031: dup
    //   3032: aload_2
    //   3033: iconst_0
    //   3034: iconst_1
    //   3035: anewarray 5776	java/lang/Class
    //   3038: dup
    //   3039: iconst_0
    //   3040: ldc_w 2530
    //   3043: aastore
    //   3044: aconst_null
    //   3045: iconst_2
    //   3046: anewarray 4185	android/graphics/drawable/Drawable
    //   3049: dup
    //   3050: iconst_0
    //   3051: aload 82
    //   3053: aastore
    //   3054: dup
    //   3055: iconst_1
    //   3056: aload 83
    //   3058: aastore
    //   3059: aconst_null
    //   3060: ldc_w 6047
    //   3063: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3066: astore 82
    //   3068: aload_0
    //   3069: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3072: astore_2
    //   3073: getstatic 6050	org/telegram/ui/ActionBar/Theme:chat_msgErrorPaint	Landroid/graphics/Paint;
    //   3076: astore 83
    //   3078: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3081: dup
    //   3082: aload_2
    //   3083: iconst_0
    //   3084: iconst_1
    //   3085: anewarray 5776	java/lang/Class
    //   3088: dup
    //   3089: iconst_0
    //   3090: ldc_w 2530
    //   3093: aastore
    //   3094: aload 83
    //   3096: aconst_null
    //   3097: aconst_null
    //   3098: ldc_w 6052
    //   3101: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3104: astore 83
    //   3106: aload_0
    //   3107: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3110: astore_2
    //   3111: getstatic 6055	org/telegram/ui/ActionBar/Theme:chat_msgErrorDrawable	Landroid/graphics/drawable/Drawable;
    //   3114: astore 84
    //   3116: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3119: dup
    //   3120: aload_2
    //   3121: iconst_0
    //   3122: iconst_1
    //   3123: anewarray 5776	java/lang/Class
    //   3126: dup
    //   3127: iconst_0
    //   3128: ldc_w 2530
    //   3131: aastore
    //   3132: aconst_null
    //   3133: iconst_1
    //   3134: anewarray 4185	android/graphics/drawable/Drawable
    //   3137: dup
    //   3138: iconst_0
    //   3139: aload 84
    //   3141: aastore
    //   3142: aconst_null
    //   3143: ldc_w 6057
    //   3146: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3149: astore 84
    //   3151: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3154: dup
    //   3155: aload_0
    //   3156: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3159: iconst_0
    //   3160: iconst_1
    //   3161: anewarray 5776	java/lang/Class
    //   3164: dup
    //   3165: iconst_0
    //   3166: ldc_w 2530
    //   3169: aastore
    //   3170: aconst_null
    //   3171: aconst_null
    //   3172: aload 72
    //   3174: ldc_w 3676
    //   3177: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3180: astore 85
    //   3182: aload_0
    //   3183: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3186: astore_2
    //   3187: getstatic 6060	org/telegram/ui/ActionBar/Theme:chat_durationPaint	Landroid/text/TextPaint;
    //   3190: astore 86
    //   3192: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3195: dup
    //   3196: aload_2
    //   3197: iconst_0
    //   3198: iconst_1
    //   3199: anewarray 5776	java/lang/Class
    //   3202: dup
    //   3203: iconst_0
    //   3204: ldc_w 2530
    //   3207: aastore
    //   3208: aload 86
    //   3210: aconst_null
    //   3211: aconst_null
    //   3212: ldc_w 6062
    //   3215: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3218: astore 86
    //   3220: aload_0
    //   3221: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3224: astore_2
    //   3225: getstatic 6065	org/telegram/ui/ActionBar/Theme:chat_gamePaint	Landroid/text/TextPaint;
    //   3228: astore 87
    //   3230: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3233: dup
    //   3234: aload_2
    //   3235: iconst_0
    //   3236: iconst_1
    //   3237: anewarray 5776	java/lang/Class
    //   3240: dup
    //   3241: iconst_0
    //   3242: ldc_w 2530
    //   3245: aastore
    //   3246: aload 87
    //   3248: aconst_null
    //   3249: aconst_null
    //   3250: ldc_w 6067
    //   3253: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3256: astore 87
    //   3258: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3261: dup
    //   3262: aload_0
    //   3263: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3266: iconst_0
    //   3267: iconst_1
    //   3268: anewarray 5776	java/lang/Class
    //   3271: dup
    //   3272: iconst_0
    //   3273: ldc_w 2530
    //   3276: aastore
    //   3277: aconst_null
    //   3278: aconst_null
    //   3279: aconst_null
    //   3280: ldc_w 6069
    //   3283: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3286: astore 88
    //   3288: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3291: dup
    //   3292: aload_0
    //   3293: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3296: iconst_0
    //   3297: iconst_1
    //   3298: anewarray 5776	java/lang/Class
    //   3301: dup
    //   3302: iconst_0
    //   3303: ldc_w 2530
    //   3306: aastore
    //   3307: aconst_null
    //   3308: aconst_null
    //   3309: aconst_null
    //   3310: ldc_w 6071
    //   3313: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3316: astore 89
    //   3318: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3321: dup
    //   3322: aload_0
    //   3323: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3326: iconst_0
    //   3327: iconst_1
    //   3328: anewarray 5776	java/lang/Class
    //   3331: dup
    //   3332: iconst_0
    //   3333: ldc_w 2530
    //   3336: aastore
    //   3337: aconst_null
    //   3338: aconst_null
    //   3339: aconst_null
    //   3340: ldc_w 6073
    //   3343: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3346: astore 90
    //   3348: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3351: dup
    //   3352: aload_0
    //   3353: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3356: iconst_0
    //   3357: iconst_1
    //   3358: anewarray 5776	java/lang/Class
    //   3361: dup
    //   3362: iconst_0
    //   3363: ldc_w 2530
    //   3366: aastore
    //   3367: aconst_null
    //   3368: aconst_null
    //   3369: aconst_null
    //   3370: ldc_w 6075
    //   3373: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3376: astore 91
    //   3378: aload_0
    //   3379: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3382: astore_2
    //   3383: getstatic 6078	org/telegram/ui/ActionBar/Theme:chat_deleteProgressPaint	Landroid/graphics/Paint;
    //   3386: astore 92
    //   3388: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3391: dup
    //   3392: aload_2
    //   3393: iconst_0
    //   3394: iconst_1
    //   3395: anewarray 5776	java/lang/Class
    //   3398: dup
    //   3399: iconst_0
    //   3400: ldc_w 2530
    //   3403: aastore
    //   3404: aload 92
    //   3406: aconst_null
    //   3407: aconst_null
    //   3408: ldc_w 6080
    //   3411: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3414: astore 92
    //   3416: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3419: dup
    //   3420: aload_0
    //   3421: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3424: iconst_0
    //   3425: iconst_1
    //   3426: anewarray 5776	java/lang/Class
    //   3429: dup
    //   3430: iconst_0
    //   3431: ldc_w 2530
    //   3434: aastore
    //   3435: aconst_null
    //   3436: aconst_null
    //   3437: aconst_null
    //   3438: ldc_w 6082
    //   3441: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3444: astore 93
    //   3446: aload_0
    //   3447: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3450: astore_2
    //   3451: getstatic 6085	org/telegram/ui/ActionBar/Theme:chat_botButtonPaint	Landroid/text/TextPaint;
    //   3454: astore 94
    //   3456: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3459: dup
    //   3460: aload_2
    //   3461: iconst_0
    //   3462: iconst_1
    //   3463: anewarray 5776	java/lang/Class
    //   3466: dup
    //   3467: iconst_0
    //   3468: ldc_w 2530
    //   3471: aastore
    //   3472: aload 94
    //   3474: aconst_null
    //   3475: aconst_null
    //   3476: ldc_w 6087
    //   3479: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3482: astore 94
    //   3484: aload_0
    //   3485: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3488: astore_2
    //   3489: getstatic 6090	org/telegram/ui/ActionBar/Theme:chat_botProgressPaint	Landroid/graphics/Paint;
    //   3492: astore 95
    //   3494: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3497: dup
    //   3498: aload_2
    //   3499: iconst_0
    //   3500: iconst_1
    //   3501: anewarray 5776	java/lang/Class
    //   3504: dup
    //   3505: iconst_0
    //   3506: ldc_w 2530
    //   3509: aastore
    //   3510: aload 95
    //   3512: aconst_null
    //   3513: aconst_null
    //   3514: ldc_w 6092
    //   3517: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3520: astore 95
    //   3522: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3525: dup
    //   3526: aload_0
    //   3527: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3530: iconst_0
    //   3531: iconst_1
    //   3532: anewarray 5776	java/lang/Class
    //   3535: dup
    //   3536: iconst_0
    //   3537: ldc_w 2530
    //   3540: aastore
    //   3541: aconst_null
    //   3542: aconst_null
    //   3543: aconst_null
    //   3544: ldc_w 6094
    //   3547: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3550: astore 96
    //   3552: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3555: dup
    //   3556: aload_0
    //   3557: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3560: iconst_0
    //   3561: iconst_1
    //   3562: anewarray 5776	java/lang/Class
    //   3565: dup
    //   3566: iconst_0
    //   3567: ldc_w 2530
    //   3570: aastore
    //   3571: aconst_null
    //   3572: aconst_null
    //   3573: aconst_null
    //   3574: ldc_w 6096
    //   3577: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3580: astore 97
    //   3582: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3585: dup
    //   3586: aload_0
    //   3587: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3590: iconst_0
    //   3591: iconst_1
    //   3592: anewarray 5776	java/lang/Class
    //   3595: dup
    //   3596: iconst_0
    //   3597: ldc_w 2530
    //   3600: aastore
    //   3601: aconst_null
    //   3602: aconst_null
    //   3603: aconst_null
    //   3604: ldc_w 6098
    //   3607: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3610: astore 98
    //   3612: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3615: dup
    //   3616: aload_0
    //   3617: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3620: iconst_0
    //   3621: iconst_1
    //   3622: anewarray 5776	java/lang/Class
    //   3625: dup
    //   3626: iconst_0
    //   3627: ldc_w 2530
    //   3630: aastore
    //   3631: aconst_null
    //   3632: aconst_null
    //   3633: aconst_null
    //   3634: ldc_w 6100
    //   3637: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3640: astore 99
    //   3642: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3645: dup
    //   3646: aload_0
    //   3647: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3650: iconst_0
    //   3651: iconst_1
    //   3652: anewarray 5776	java/lang/Class
    //   3655: dup
    //   3656: iconst_0
    //   3657: ldc_w 2530
    //   3660: aastore
    //   3661: aconst_null
    //   3662: aconst_null
    //   3663: aconst_null
    //   3664: ldc_w 6102
    //   3667: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3670: astore 100
    //   3672: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3675: dup
    //   3676: aload_0
    //   3677: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3680: iconst_0
    //   3681: iconst_1
    //   3682: anewarray 5776	java/lang/Class
    //   3685: dup
    //   3686: iconst_0
    //   3687: ldc_w 2530
    //   3690: aastore
    //   3691: aconst_null
    //   3692: aconst_null
    //   3693: aconst_null
    //   3694: ldc_w 6104
    //   3697: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3700: astore 101
    //   3702: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3705: dup
    //   3706: aload_0
    //   3707: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3710: iconst_0
    //   3711: iconst_1
    //   3712: anewarray 5776	java/lang/Class
    //   3715: dup
    //   3716: iconst_0
    //   3717: ldc_w 2530
    //   3720: aastore
    //   3721: aconst_null
    //   3722: aconst_null
    //   3723: aconst_null
    //   3724: ldc_w 6106
    //   3727: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3730: astore 102
    //   3732: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3735: dup
    //   3736: aload_0
    //   3737: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3740: iconst_0
    //   3741: iconst_1
    //   3742: anewarray 5776	java/lang/Class
    //   3745: dup
    //   3746: iconst_0
    //   3747: ldc_w 2530
    //   3750: aastore
    //   3751: aconst_null
    //   3752: aconst_null
    //   3753: aconst_null
    //   3754: ldc_w 6108
    //   3757: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3760: astore 103
    //   3762: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3765: dup
    //   3766: aload_0
    //   3767: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3770: iconst_0
    //   3771: iconst_1
    //   3772: anewarray 5776	java/lang/Class
    //   3775: dup
    //   3776: iconst_0
    //   3777: ldc_w 2530
    //   3780: aastore
    //   3781: aconst_null
    //   3782: aconst_null
    //   3783: aconst_null
    //   3784: ldc_w 6110
    //   3787: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3790: astore 104
    //   3792: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3795: dup
    //   3796: aload_0
    //   3797: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3800: iconst_0
    //   3801: iconst_1
    //   3802: anewarray 5776	java/lang/Class
    //   3805: dup
    //   3806: iconst_0
    //   3807: ldc_w 2530
    //   3810: aastore
    //   3811: aconst_null
    //   3812: aconst_null
    //   3813: aconst_null
    //   3814: ldc_w 6112
    //   3817: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3820: astore 105
    //   3822: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3825: dup
    //   3826: aload_0
    //   3827: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3830: iconst_0
    //   3831: iconst_1
    //   3832: anewarray 5776	java/lang/Class
    //   3835: dup
    //   3836: iconst_0
    //   3837: ldc_w 2530
    //   3840: aastore
    //   3841: aconst_null
    //   3842: aconst_null
    //   3843: aconst_null
    //   3844: ldc_w 6114
    //   3847: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3850: astore 106
    //   3852: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3855: dup
    //   3856: aload_0
    //   3857: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3860: iconst_0
    //   3861: iconst_1
    //   3862: anewarray 5776	java/lang/Class
    //   3865: dup
    //   3866: iconst_0
    //   3867: ldc_w 2530
    //   3870: aastore
    //   3871: aconst_null
    //   3872: aconst_null
    //   3873: aconst_null
    //   3874: ldc_w 6116
    //   3877: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3880: astore 107
    //   3882: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3885: dup
    //   3886: aload_0
    //   3887: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3890: iconst_0
    //   3891: iconst_1
    //   3892: anewarray 5776	java/lang/Class
    //   3895: dup
    //   3896: iconst_0
    //   3897: ldc_w 2530
    //   3900: aastore
    //   3901: aconst_null
    //   3902: aconst_null
    //   3903: aconst_null
    //   3904: ldc_w 6118
    //   3907: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3910: astore 108
    //   3912: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3915: dup
    //   3916: aload_0
    //   3917: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3920: iconst_0
    //   3921: iconst_1
    //   3922: anewarray 5776	java/lang/Class
    //   3925: dup
    //   3926: iconst_0
    //   3927: ldc_w 2530
    //   3930: aastore
    //   3931: aconst_null
    //   3932: aconst_null
    //   3933: aconst_null
    //   3934: ldc_w 6120
    //   3937: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3940: astore 109
    //   3942: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3945: dup
    //   3946: aload_0
    //   3947: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3950: iconst_0
    //   3951: iconst_1
    //   3952: anewarray 5776	java/lang/Class
    //   3955: dup
    //   3956: iconst_0
    //   3957: ldc_w 2530
    //   3960: aastore
    //   3961: aconst_null
    //   3962: aconst_null
    //   3963: aconst_null
    //   3964: ldc_w 6122
    //   3967: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   3970: astore 110
    //   3972: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   3975: dup
    //   3976: aload_0
    //   3977: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   3980: iconst_0
    //   3981: iconst_1
    //   3982: anewarray 5776	java/lang/Class
    //   3985: dup
    //   3986: iconst_0
    //   3987: ldc_w 2530
    //   3990: aastore
    //   3991: aconst_null
    //   3992: aconst_null
    //   3993: aconst_null
    //   3994: ldc_w 6124
    //   3997: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4000: astore 111
    //   4002: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4005: dup
    //   4006: aload_0
    //   4007: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4010: iconst_0
    //   4011: iconst_1
    //   4012: anewarray 5776	java/lang/Class
    //   4015: dup
    //   4016: iconst_0
    //   4017: ldc_w 2530
    //   4020: aastore
    //   4021: aconst_null
    //   4022: aconst_null
    //   4023: aconst_null
    //   4024: ldc_w 6126
    //   4027: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4030: astore 112
    //   4032: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4035: dup
    //   4036: aload_0
    //   4037: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4040: iconst_0
    //   4041: iconst_1
    //   4042: anewarray 5776	java/lang/Class
    //   4045: dup
    //   4046: iconst_0
    //   4047: ldc_w 2530
    //   4050: aastore
    //   4051: aconst_null
    //   4052: aconst_null
    //   4053: aconst_null
    //   4054: ldc_w 6128
    //   4057: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4060: astore 113
    //   4062: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4065: dup
    //   4066: aload_0
    //   4067: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4070: iconst_0
    //   4071: iconst_1
    //   4072: anewarray 5776	java/lang/Class
    //   4075: dup
    //   4076: iconst_0
    //   4077: ldc_w 2530
    //   4080: aastore
    //   4081: aconst_null
    //   4082: aconst_null
    //   4083: aconst_null
    //   4084: ldc_w 6130
    //   4087: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4090: astore 114
    //   4092: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4095: dup
    //   4096: aload_0
    //   4097: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4100: iconst_0
    //   4101: iconst_1
    //   4102: anewarray 5776	java/lang/Class
    //   4105: dup
    //   4106: iconst_0
    //   4107: ldc_w 2530
    //   4110: aastore
    //   4111: aconst_null
    //   4112: aconst_null
    //   4113: aconst_null
    //   4114: ldc_w 6132
    //   4117: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4120: astore 115
    //   4122: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4125: dup
    //   4126: aload_0
    //   4127: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4130: iconst_0
    //   4131: iconst_1
    //   4132: anewarray 5776	java/lang/Class
    //   4135: dup
    //   4136: iconst_0
    //   4137: ldc_w 2530
    //   4140: aastore
    //   4141: aconst_null
    //   4142: aconst_null
    //   4143: aconst_null
    //   4144: ldc_w 6134
    //   4147: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4150: astore 116
    //   4152: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4155: dup
    //   4156: aload_0
    //   4157: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4160: iconst_0
    //   4161: iconst_1
    //   4162: anewarray 5776	java/lang/Class
    //   4165: dup
    //   4166: iconst_0
    //   4167: ldc_w 2530
    //   4170: aastore
    //   4171: aconst_null
    //   4172: aconst_null
    //   4173: aconst_null
    //   4174: ldc_w 6136
    //   4177: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4180: astore 117
    //   4182: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4185: dup
    //   4186: aload_0
    //   4187: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4190: iconst_0
    //   4191: iconst_1
    //   4192: anewarray 5776	java/lang/Class
    //   4195: dup
    //   4196: iconst_0
    //   4197: ldc_w 2530
    //   4200: aastore
    //   4201: aconst_null
    //   4202: aconst_null
    //   4203: aconst_null
    //   4204: ldc_w 6138
    //   4207: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4210: astore 118
    //   4212: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4215: dup
    //   4216: aload_0
    //   4217: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4220: iconst_0
    //   4221: iconst_1
    //   4222: anewarray 5776	java/lang/Class
    //   4225: dup
    //   4226: iconst_0
    //   4227: ldc_w 2530
    //   4230: aastore
    //   4231: aconst_null
    //   4232: aconst_null
    //   4233: aconst_null
    //   4234: ldc_w 6140
    //   4237: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4240: astore 119
    //   4242: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4245: dup
    //   4246: aload_0
    //   4247: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4250: iconst_0
    //   4251: iconst_1
    //   4252: anewarray 5776	java/lang/Class
    //   4255: dup
    //   4256: iconst_0
    //   4257: ldc_w 2530
    //   4260: aastore
    //   4261: aconst_null
    //   4262: aconst_null
    //   4263: aconst_null
    //   4264: ldc_w 6142
    //   4267: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4270: astore 120
    //   4272: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4275: dup
    //   4276: aload_0
    //   4277: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4280: iconst_0
    //   4281: iconst_1
    //   4282: anewarray 5776	java/lang/Class
    //   4285: dup
    //   4286: iconst_0
    //   4287: ldc_w 2530
    //   4290: aastore
    //   4291: aconst_null
    //   4292: aconst_null
    //   4293: aconst_null
    //   4294: ldc_w 6144
    //   4297: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4300: astore 121
    //   4302: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4305: dup
    //   4306: aload_0
    //   4307: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4310: iconst_0
    //   4311: iconst_1
    //   4312: anewarray 5776	java/lang/Class
    //   4315: dup
    //   4316: iconst_0
    //   4317: ldc_w 2530
    //   4320: aastore
    //   4321: aconst_null
    //   4322: aconst_null
    //   4323: aconst_null
    //   4324: ldc_w 6146
    //   4327: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4330: astore 122
    //   4332: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4335: dup
    //   4336: aload_0
    //   4337: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4340: iconst_0
    //   4341: iconst_1
    //   4342: anewarray 5776	java/lang/Class
    //   4345: dup
    //   4346: iconst_0
    //   4347: ldc_w 2530
    //   4350: aastore
    //   4351: aconst_null
    //   4352: aconst_null
    //   4353: aconst_null
    //   4354: ldc_w 6148
    //   4357: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4360: astore 123
    //   4362: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4365: dup
    //   4366: aload_0
    //   4367: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4370: iconst_0
    //   4371: iconst_1
    //   4372: anewarray 5776	java/lang/Class
    //   4375: dup
    //   4376: iconst_0
    //   4377: ldc_w 2530
    //   4380: aastore
    //   4381: aconst_null
    //   4382: aconst_null
    //   4383: aconst_null
    //   4384: ldc_w 6150
    //   4387: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4390: astore 124
    //   4392: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4395: dup
    //   4396: aload_0
    //   4397: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4400: iconst_0
    //   4401: iconst_1
    //   4402: anewarray 5776	java/lang/Class
    //   4405: dup
    //   4406: iconst_0
    //   4407: ldc_w 2530
    //   4410: aastore
    //   4411: aconst_null
    //   4412: aconst_null
    //   4413: aconst_null
    //   4414: ldc_w 6152
    //   4417: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4420: astore 125
    //   4422: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4425: dup
    //   4426: aload_0
    //   4427: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4430: iconst_0
    //   4431: iconst_1
    //   4432: anewarray 5776	java/lang/Class
    //   4435: dup
    //   4436: iconst_0
    //   4437: ldc_w 2530
    //   4440: aastore
    //   4441: aconst_null
    //   4442: aconst_null
    //   4443: aconst_null
    //   4444: ldc_w 6154
    //   4447: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4450: astore 126
    //   4452: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4455: dup
    //   4456: aload_0
    //   4457: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4460: iconst_0
    //   4461: iconst_1
    //   4462: anewarray 5776	java/lang/Class
    //   4465: dup
    //   4466: iconst_0
    //   4467: ldc_w 2530
    //   4470: aastore
    //   4471: aconst_null
    //   4472: aconst_null
    //   4473: aconst_null
    //   4474: ldc_w 6156
    //   4477: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4480: astore 127
    //   4482: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4485: dup
    //   4486: aload_0
    //   4487: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4490: iconst_0
    //   4491: iconst_1
    //   4492: anewarray 5776	java/lang/Class
    //   4495: dup
    //   4496: iconst_0
    //   4497: ldc_w 2530
    //   4500: aastore
    //   4501: aconst_null
    //   4502: aconst_null
    //   4503: aconst_null
    //   4504: ldc_w 6158
    //   4507: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4510: astore -128
    //   4512: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4515: dup
    //   4516: aload_0
    //   4517: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4520: iconst_0
    //   4521: iconst_1
    //   4522: anewarray 5776	java/lang/Class
    //   4525: dup
    //   4526: iconst_0
    //   4527: ldc_w 2530
    //   4530: aastore
    //   4531: aconst_null
    //   4532: aconst_null
    //   4533: aconst_null
    //   4534: ldc_w 6160
    //   4537: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4540: astore -127
    //   4542: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4545: dup
    //   4546: aload_0
    //   4547: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4550: iconst_0
    //   4551: iconst_1
    //   4552: anewarray 5776	java/lang/Class
    //   4555: dup
    //   4556: iconst_0
    //   4557: ldc_w 2530
    //   4560: aastore
    //   4561: aconst_null
    //   4562: aconst_null
    //   4563: aconst_null
    //   4564: ldc_w 6162
    //   4567: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4570: astore -126
    //   4572: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4575: dup
    //   4576: aload_0
    //   4577: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4580: iconst_0
    //   4581: iconst_1
    //   4582: anewarray 5776	java/lang/Class
    //   4585: dup
    //   4586: iconst_0
    //   4587: ldc_w 2530
    //   4590: aastore
    //   4591: aconst_null
    //   4592: aconst_null
    //   4593: aconst_null
    //   4594: ldc_w 6164
    //   4597: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4600: astore -125
    //   4602: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4605: dup
    //   4606: aload_0
    //   4607: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4610: iconst_0
    //   4611: iconst_1
    //   4612: anewarray 5776	java/lang/Class
    //   4615: dup
    //   4616: iconst_0
    //   4617: ldc_w 2530
    //   4620: aastore
    //   4621: aconst_null
    //   4622: aconst_null
    //   4623: aconst_null
    //   4624: ldc_w 6166
    //   4627: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4630: astore -124
    //   4632: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4635: dup
    //   4636: aload_0
    //   4637: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4640: iconst_0
    //   4641: iconst_1
    //   4642: anewarray 5776	java/lang/Class
    //   4645: dup
    //   4646: iconst_0
    //   4647: ldc_w 2530
    //   4650: aastore
    //   4651: aconst_null
    //   4652: aconst_null
    //   4653: aconst_null
    //   4654: ldc_w 6168
    //   4657: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4660: astore -123
    //   4662: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4665: dup
    //   4666: aload_0
    //   4667: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4670: iconst_0
    //   4671: iconst_1
    //   4672: anewarray 5776	java/lang/Class
    //   4675: dup
    //   4676: iconst_0
    //   4677: ldc_w 2530
    //   4680: aastore
    //   4681: aconst_null
    //   4682: aconst_null
    //   4683: aconst_null
    //   4684: ldc_w 6170
    //   4687: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4690: astore -122
    //   4692: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4695: dup
    //   4696: aload_0
    //   4697: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4700: iconst_0
    //   4701: iconst_1
    //   4702: anewarray 5776	java/lang/Class
    //   4705: dup
    //   4706: iconst_0
    //   4707: ldc_w 2530
    //   4710: aastore
    //   4711: aconst_null
    //   4712: aconst_null
    //   4713: aconst_null
    //   4714: ldc_w 6172
    //   4717: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4720: astore -121
    //   4722: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4725: dup
    //   4726: aload_0
    //   4727: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4730: iconst_0
    //   4731: iconst_1
    //   4732: anewarray 5776	java/lang/Class
    //   4735: dup
    //   4736: iconst_0
    //   4737: ldc_w 2530
    //   4740: aastore
    //   4741: aconst_null
    //   4742: aconst_null
    //   4743: aconst_null
    //   4744: ldc_w 6174
    //   4747: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4750: astore -120
    //   4752: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4755: dup
    //   4756: aload_0
    //   4757: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4760: iconst_0
    //   4761: iconst_1
    //   4762: anewarray 5776	java/lang/Class
    //   4765: dup
    //   4766: iconst_0
    //   4767: ldc_w 2530
    //   4770: aastore
    //   4771: aconst_null
    //   4772: aconst_null
    //   4773: aconst_null
    //   4774: ldc_w 6176
    //   4777: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4780: astore -119
    //   4782: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4785: dup
    //   4786: aload_0
    //   4787: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4790: iconst_0
    //   4791: iconst_1
    //   4792: anewarray 5776	java/lang/Class
    //   4795: dup
    //   4796: iconst_0
    //   4797: ldc_w 2530
    //   4800: aastore
    //   4801: aconst_null
    //   4802: aconst_null
    //   4803: aconst_null
    //   4804: ldc_w 6178
    //   4807: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4810: astore -118
    //   4812: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4815: dup
    //   4816: aload_0
    //   4817: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4820: iconst_0
    //   4821: iconst_1
    //   4822: anewarray 5776	java/lang/Class
    //   4825: dup
    //   4826: iconst_0
    //   4827: ldc_w 2530
    //   4830: aastore
    //   4831: aconst_null
    //   4832: aconst_null
    //   4833: aconst_null
    //   4834: ldc_w 6180
    //   4837: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4840: astore -117
    //   4842: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4845: dup
    //   4846: aload_0
    //   4847: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4850: iconst_0
    //   4851: iconst_1
    //   4852: anewarray 5776	java/lang/Class
    //   4855: dup
    //   4856: iconst_0
    //   4857: ldc_w 2530
    //   4860: aastore
    //   4861: aconst_null
    //   4862: aconst_null
    //   4863: aconst_null
    //   4864: ldc_w 6182
    //   4867: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4870: astore -116
    //   4872: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4875: dup
    //   4876: aload_0
    //   4877: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4880: iconst_0
    //   4881: iconst_1
    //   4882: anewarray 5776	java/lang/Class
    //   4885: dup
    //   4886: iconst_0
    //   4887: ldc_w 2530
    //   4890: aastore
    //   4891: aconst_null
    //   4892: aconst_null
    //   4893: aconst_null
    //   4894: ldc_w 6184
    //   4897: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4900: astore -115
    //   4902: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4905: dup
    //   4906: aload_0
    //   4907: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4910: iconst_0
    //   4911: iconst_1
    //   4912: anewarray 5776	java/lang/Class
    //   4915: dup
    //   4916: iconst_0
    //   4917: ldc_w 2530
    //   4920: aastore
    //   4921: aconst_null
    //   4922: aconst_null
    //   4923: aconst_null
    //   4924: ldc_w 6186
    //   4927: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4930: astore -114
    //   4932: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4935: dup
    //   4936: aload_0
    //   4937: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4940: iconst_0
    //   4941: iconst_1
    //   4942: anewarray 5776	java/lang/Class
    //   4945: dup
    //   4946: iconst_0
    //   4947: ldc_w 2530
    //   4950: aastore
    //   4951: aconst_null
    //   4952: aconst_null
    //   4953: aconst_null
    //   4954: ldc_w 6188
    //   4957: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4960: astore -113
    //   4962: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4965: dup
    //   4966: aload_0
    //   4967: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   4970: iconst_0
    //   4971: iconst_1
    //   4972: anewarray 5776	java/lang/Class
    //   4975: dup
    //   4976: iconst_0
    //   4977: ldc_w 2530
    //   4980: aastore
    //   4981: aconst_null
    //   4982: aconst_null
    //   4983: aconst_null
    //   4984: ldc_w 6190
    //   4987: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   4990: astore -112
    //   4992: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   4995: dup
    //   4996: aload_0
    //   4997: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5000: iconst_0
    //   5001: iconst_1
    //   5002: anewarray 5776	java/lang/Class
    //   5005: dup
    //   5006: iconst_0
    //   5007: ldc_w 2530
    //   5010: aastore
    //   5011: aconst_null
    //   5012: aconst_null
    //   5013: aconst_null
    //   5014: ldc_w 6192
    //   5017: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5020: astore -111
    //   5022: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5025: dup
    //   5026: aload_0
    //   5027: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5030: iconst_0
    //   5031: iconst_1
    //   5032: anewarray 5776	java/lang/Class
    //   5035: dup
    //   5036: iconst_0
    //   5037: ldc_w 2530
    //   5040: aastore
    //   5041: aconst_null
    //   5042: aconst_null
    //   5043: aconst_null
    //   5044: ldc_w 6194
    //   5047: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5050: astore -110
    //   5052: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5055: dup
    //   5056: aload_0
    //   5057: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5060: iconst_0
    //   5061: iconst_1
    //   5062: anewarray 5776	java/lang/Class
    //   5065: dup
    //   5066: iconst_0
    //   5067: ldc_w 2530
    //   5070: aastore
    //   5071: aconst_null
    //   5072: aconst_null
    //   5073: aconst_null
    //   5074: ldc_w 6196
    //   5077: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5080: astore -109
    //   5082: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5085: dup
    //   5086: aload_0
    //   5087: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5090: iconst_0
    //   5091: iconst_1
    //   5092: anewarray 5776	java/lang/Class
    //   5095: dup
    //   5096: iconst_0
    //   5097: ldc_w 2530
    //   5100: aastore
    //   5101: aconst_null
    //   5102: aconst_null
    //   5103: aconst_null
    //   5104: ldc_w 6198
    //   5107: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5110: astore -108
    //   5112: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5115: dup
    //   5116: aload_0
    //   5117: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5120: iconst_0
    //   5121: iconst_1
    //   5122: anewarray 5776	java/lang/Class
    //   5125: dup
    //   5126: iconst_0
    //   5127: ldc_w 2530
    //   5130: aastore
    //   5131: aconst_null
    //   5132: aconst_null
    //   5133: aconst_null
    //   5134: ldc_w 6200
    //   5137: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5140: astore -107
    //   5142: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5145: dup
    //   5146: aload_0
    //   5147: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5150: iconst_0
    //   5151: iconst_1
    //   5152: anewarray 5776	java/lang/Class
    //   5155: dup
    //   5156: iconst_0
    //   5157: ldc_w 2530
    //   5160: aastore
    //   5161: aconst_null
    //   5162: aconst_null
    //   5163: aconst_null
    //   5164: ldc_w 6202
    //   5167: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5170: astore -106
    //   5172: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5175: dup
    //   5176: aload_0
    //   5177: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5180: iconst_0
    //   5181: iconst_1
    //   5182: anewarray 5776	java/lang/Class
    //   5185: dup
    //   5186: iconst_0
    //   5187: ldc_w 2530
    //   5190: aastore
    //   5191: aconst_null
    //   5192: aconst_null
    //   5193: aconst_null
    //   5194: ldc_w 6204
    //   5197: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5200: astore -105
    //   5202: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5205: dup
    //   5206: aload_0
    //   5207: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5210: iconst_0
    //   5211: iconst_1
    //   5212: anewarray 5776	java/lang/Class
    //   5215: dup
    //   5216: iconst_0
    //   5217: ldc_w 2530
    //   5220: aastore
    //   5221: aconst_null
    //   5222: aconst_null
    //   5223: aconst_null
    //   5224: ldc_w 6206
    //   5227: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5230: astore -104
    //   5232: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5235: dup
    //   5236: aload_0
    //   5237: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5240: iconst_0
    //   5241: iconst_1
    //   5242: anewarray 5776	java/lang/Class
    //   5245: dup
    //   5246: iconst_0
    //   5247: ldc_w 2530
    //   5250: aastore
    //   5251: aconst_null
    //   5252: aconst_null
    //   5253: aconst_null
    //   5254: ldc_w 6208
    //   5257: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5260: astore -103
    //   5262: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5265: dup
    //   5266: aload_0
    //   5267: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5270: iconst_0
    //   5271: iconst_1
    //   5272: anewarray 5776	java/lang/Class
    //   5275: dup
    //   5276: iconst_0
    //   5277: ldc_w 2530
    //   5280: aastore
    //   5281: aconst_null
    //   5282: aconst_null
    //   5283: aconst_null
    //   5284: ldc_w 6210
    //   5287: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5290: astore -102
    //   5292: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5295: dup
    //   5296: aload_0
    //   5297: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5300: iconst_0
    //   5301: iconst_1
    //   5302: anewarray 5776	java/lang/Class
    //   5305: dup
    //   5306: iconst_0
    //   5307: ldc_w 2530
    //   5310: aastore
    //   5311: aconst_null
    //   5312: aconst_null
    //   5313: aconst_null
    //   5314: ldc_w 6212
    //   5317: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5320: astore -101
    //   5322: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5325: dup
    //   5326: aload_0
    //   5327: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5330: iconst_0
    //   5331: iconst_1
    //   5332: anewarray 5776	java/lang/Class
    //   5335: dup
    //   5336: iconst_0
    //   5337: ldc_w 2530
    //   5340: aastore
    //   5341: aconst_null
    //   5342: aconst_null
    //   5343: aconst_null
    //   5344: ldc_w 6214
    //   5347: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5350: astore -100
    //   5352: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5355: dup
    //   5356: aload_0
    //   5357: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5360: iconst_0
    //   5361: iconst_1
    //   5362: anewarray 5776	java/lang/Class
    //   5365: dup
    //   5366: iconst_0
    //   5367: ldc_w 2530
    //   5370: aastore
    //   5371: aconst_null
    //   5372: aconst_null
    //   5373: aconst_null
    //   5374: ldc_w 6216
    //   5377: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5380: astore -99
    //   5382: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5385: dup
    //   5386: aload_0
    //   5387: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5390: iconst_0
    //   5391: iconst_1
    //   5392: anewarray 5776	java/lang/Class
    //   5395: dup
    //   5396: iconst_0
    //   5397: ldc_w 2530
    //   5400: aastore
    //   5401: aconst_null
    //   5402: aconst_null
    //   5403: aconst_null
    //   5404: ldc_w 6218
    //   5407: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5410: astore -98
    //   5412: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5415: dup
    //   5416: aload_0
    //   5417: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5420: iconst_0
    //   5421: iconst_1
    //   5422: anewarray 5776	java/lang/Class
    //   5425: dup
    //   5426: iconst_0
    //   5427: ldc_w 2530
    //   5430: aastore
    //   5431: aconst_null
    //   5432: aconst_null
    //   5433: aconst_null
    //   5434: ldc_w 6220
    //   5437: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5440: astore -97
    //   5442: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5445: dup
    //   5446: aload_0
    //   5447: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5450: iconst_0
    //   5451: iconst_1
    //   5452: anewarray 5776	java/lang/Class
    //   5455: dup
    //   5456: iconst_0
    //   5457: ldc_w 2530
    //   5460: aastore
    //   5461: aconst_null
    //   5462: aconst_null
    //   5463: aconst_null
    //   5464: ldc_w 6222
    //   5467: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5470: astore -96
    //   5472: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5475: dup
    //   5476: aload_0
    //   5477: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5480: iconst_0
    //   5481: iconst_1
    //   5482: anewarray 5776	java/lang/Class
    //   5485: dup
    //   5486: iconst_0
    //   5487: ldc_w 2530
    //   5490: aastore
    //   5491: aconst_null
    //   5492: aconst_null
    //   5493: aconst_null
    //   5494: ldc_w 6224
    //   5497: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5500: astore -95
    //   5502: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5505: dup
    //   5506: aload_0
    //   5507: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5510: iconst_0
    //   5511: iconst_1
    //   5512: anewarray 5776	java/lang/Class
    //   5515: dup
    //   5516: iconst_0
    //   5517: ldc_w 2530
    //   5520: aastore
    //   5521: aconst_null
    //   5522: aconst_null
    //   5523: aconst_null
    //   5524: ldc_w 6226
    //   5527: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5530: astore -94
    //   5532: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5535: dup
    //   5536: aload_0
    //   5537: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5540: iconst_0
    //   5541: iconst_1
    //   5542: anewarray 5776	java/lang/Class
    //   5545: dup
    //   5546: iconst_0
    //   5547: ldc_w 2530
    //   5550: aastore
    //   5551: aconst_null
    //   5552: aconst_null
    //   5553: aconst_null
    //   5554: ldc_w 6228
    //   5557: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5560: astore -93
    //   5562: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5565: dup
    //   5566: aload_0
    //   5567: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5570: iconst_0
    //   5571: iconst_1
    //   5572: anewarray 5776	java/lang/Class
    //   5575: dup
    //   5576: iconst_0
    //   5577: ldc_w 2530
    //   5580: aastore
    //   5581: aconst_null
    //   5582: aconst_null
    //   5583: aconst_null
    //   5584: ldc_w 6230
    //   5587: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5590: astore -92
    //   5592: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5595: dup
    //   5596: aload_0
    //   5597: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5600: iconst_0
    //   5601: iconst_1
    //   5602: anewarray 5776	java/lang/Class
    //   5605: dup
    //   5606: iconst_0
    //   5607: ldc_w 2530
    //   5610: aastore
    //   5611: aconst_null
    //   5612: aconst_null
    //   5613: aconst_null
    //   5614: ldc_w 6232
    //   5617: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5620: astore -91
    //   5622: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5625: dup
    //   5626: aload_0
    //   5627: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5630: iconst_0
    //   5631: iconst_1
    //   5632: anewarray 5776	java/lang/Class
    //   5635: dup
    //   5636: iconst_0
    //   5637: ldc_w 2530
    //   5640: aastore
    //   5641: aconst_null
    //   5642: aconst_null
    //   5643: aconst_null
    //   5644: ldc_w 6234
    //   5647: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5650: astore -90
    //   5652: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5655: dup
    //   5656: aload_0
    //   5657: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5660: iconst_0
    //   5661: iconst_1
    //   5662: anewarray 5776	java/lang/Class
    //   5665: dup
    //   5666: iconst_0
    //   5667: ldc_w 2530
    //   5670: aastore
    //   5671: aconst_null
    //   5672: aconst_null
    //   5673: aconst_null
    //   5674: ldc_w 6236
    //   5677: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5680: astore -89
    //   5682: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5685: dup
    //   5686: aload_0
    //   5687: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5690: iconst_0
    //   5691: iconst_1
    //   5692: anewarray 5776	java/lang/Class
    //   5695: dup
    //   5696: iconst_0
    //   5697: ldc_w 2530
    //   5700: aastore
    //   5701: aconst_null
    //   5702: aconst_null
    //   5703: aconst_null
    //   5704: ldc_w 6238
    //   5707: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5710: astore -88
    //   5712: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5715: dup
    //   5716: aload_0
    //   5717: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5720: iconst_0
    //   5721: iconst_1
    //   5722: anewarray 5776	java/lang/Class
    //   5725: dup
    //   5726: iconst_0
    //   5727: ldc_w 2530
    //   5730: aastore
    //   5731: aconst_null
    //   5732: aconst_null
    //   5733: aconst_null
    //   5734: ldc_w 6240
    //   5737: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5740: astore -87
    //   5742: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5745: dup
    //   5746: aload_0
    //   5747: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5750: iconst_0
    //   5751: iconst_1
    //   5752: anewarray 5776	java/lang/Class
    //   5755: dup
    //   5756: iconst_0
    //   5757: ldc_w 2530
    //   5760: aastore
    //   5761: aconst_null
    //   5762: aconst_null
    //   5763: aconst_null
    //   5764: ldc_w 6242
    //   5767: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5770: astore -86
    //   5772: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5775: dup
    //   5776: aload_0
    //   5777: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5780: iconst_0
    //   5781: iconst_1
    //   5782: anewarray 5776	java/lang/Class
    //   5785: dup
    //   5786: iconst_0
    //   5787: ldc_w 2530
    //   5790: aastore
    //   5791: aconst_null
    //   5792: aconst_null
    //   5793: aconst_null
    //   5794: ldc_w 6244
    //   5797: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5800: astore -85
    //   5802: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5805: dup
    //   5806: aload_0
    //   5807: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5810: iconst_0
    //   5811: iconst_1
    //   5812: anewarray 5776	java/lang/Class
    //   5815: dup
    //   5816: iconst_0
    //   5817: ldc_w 2530
    //   5820: aastore
    //   5821: aconst_null
    //   5822: aconst_null
    //   5823: aconst_null
    //   5824: ldc_w 6246
    //   5827: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5830: astore -84
    //   5832: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5835: dup
    //   5836: aload_0
    //   5837: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5840: iconst_0
    //   5841: iconst_1
    //   5842: anewarray 5776	java/lang/Class
    //   5845: dup
    //   5846: iconst_0
    //   5847: ldc_w 2530
    //   5850: aastore
    //   5851: aconst_null
    //   5852: aconst_null
    //   5853: aconst_null
    //   5854: ldc_w 6248
    //   5857: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5860: astore -83
    //   5862: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5865: dup
    //   5866: aload_0
    //   5867: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5870: iconst_0
    //   5871: iconst_1
    //   5872: anewarray 5776	java/lang/Class
    //   5875: dup
    //   5876: iconst_0
    //   5877: ldc_w 2530
    //   5880: aastore
    //   5881: aconst_null
    //   5882: aconst_null
    //   5883: aconst_null
    //   5884: ldc_w 6250
    //   5887: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5890: astore -82
    //   5892: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5895: dup
    //   5896: aload_0
    //   5897: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5900: iconst_0
    //   5901: iconst_1
    //   5902: anewarray 5776	java/lang/Class
    //   5905: dup
    //   5906: iconst_0
    //   5907: ldc_w 2530
    //   5910: aastore
    //   5911: aconst_null
    //   5912: aconst_null
    //   5913: aconst_null
    //   5914: ldc_w 6252
    //   5917: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5920: astore -81
    //   5922: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5925: dup
    //   5926: aload_0
    //   5927: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5930: iconst_0
    //   5931: iconst_1
    //   5932: anewarray 5776	java/lang/Class
    //   5935: dup
    //   5936: iconst_0
    //   5937: ldc_w 2530
    //   5940: aastore
    //   5941: aconst_null
    //   5942: aconst_null
    //   5943: aconst_null
    //   5944: ldc_w 6254
    //   5947: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5950: astore -80
    //   5952: aload_0
    //   5953: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5956: astore_2
    //   5957: getstatic 6257	org/telegram/ui/ActionBar/Theme:chat_urlPaint	Landroid/graphics/Paint;
    //   5960: astore -79
    //   5962: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   5965: dup
    //   5966: aload_2
    //   5967: iconst_0
    //   5968: iconst_1
    //   5969: anewarray 5776	java/lang/Class
    //   5972: dup
    //   5973: iconst_0
    //   5974: ldc_w 2530
    //   5977: aastore
    //   5978: aload -79
    //   5980: aconst_null
    //   5981: aconst_null
    //   5982: ldc_w 6259
    //   5985: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   5988: astore -79
    //   5990: aload_0
    //   5991: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   5994: astore_2
    //   5995: getstatic 6262	org/telegram/ui/ActionBar/Theme:chat_textSearchSelectionPaint	Landroid/graphics/Paint;
    //   5998: astore -78
    //   6000: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6003: dup
    //   6004: aload_2
    //   6005: iconst_0
    //   6006: iconst_1
    //   6007: anewarray 5776	java/lang/Class
    //   6010: dup
    //   6011: iconst_0
    //   6012: ldc_w 2530
    //   6015: aastore
    //   6016: aload -78
    //   6018: aconst_null
    //   6019: aconst_null
    //   6020: ldc_w 6264
    //   6023: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6026: astore -78
    //   6028: aload_0
    //   6029: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6032: astore_2
    //   6033: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6036: istore_1
    //   6037: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6040: iconst_0
    //   6041: aaload
    //   6042: iconst_0
    //   6043: aaload
    //   6044: astore -77
    //   6046: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6049: iconst_1
    //   6050: aaload
    //   6051: iconst_0
    //   6052: aaload
    //   6053: astore -76
    //   6055: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6058: iconst_2
    //   6059: aaload
    //   6060: iconst_0
    //   6061: aaload
    //   6062: astore -75
    //   6064: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6067: iconst_3
    //   6068: aaload
    //   6069: iconst_0
    //   6070: aaload
    //   6071: astore -74
    //   6073: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6076: iconst_4
    //   6077: aaload
    //   6078: iconst_0
    //   6079: aaload
    //   6080: astore -73
    //   6082: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6085: dup
    //   6086: aload_2
    //   6087: iload_1
    //   6088: iconst_1
    //   6089: anewarray 5776	java/lang/Class
    //   6092: dup
    //   6093: iconst_0
    //   6094: ldc_w 2530
    //   6097: aastore
    //   6098: aconst_null
    //   6099: iconst_5
    //   6100: anewarray 4185	android/graphics/drawable/Drawable
    //   6103: dup
    //   6104: iconst_0
    //   6105: aload -77
    //   6107: aastore
    //   6108: dup
    //   6109: iconst_1
    //   6110: aload -76
    //   6112: aastore
    //   6113: dup
    //   6114: iconst_2
    //   6115: aload -75
    //   6117: aastore
    //   6118: dup
    //   6119: iconst_3
    //   6120: aload -74
    //   6122: aastore
    //   6123: dup
    //   6124: iconst_4
    //   6125: aload -73
    //   6127: aastore
    //   6128: aconst_null
    //   6129: ldc_w 6273
    //   6132: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6135: astore -77
    //   6137: aload_0
    //   6138: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6141: astore_2
    //   6142: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6145: iconst_0
    //   6146: aaload
    //   6147: iconst_0
    //   6148: aaload
    //   6149: astore -76
    //   6151: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6154: iconst_1
    //   6155: aaload
    //   6156: iconst_0
    //   6157: aaload
    //   6158: astore -75
    //   6160: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6163: iconst_2
    //   6164: aaload
    //   6165: iconst_0
    //   6166: aaload
    //   6167: astore -74
    //   6169: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6172: iconst_3
    //   6173: aaload
    //   6174: iconst_0
    //   6175: aaload
    //   6176: astore -73
    //   6178: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6181: iconst_4
    //   6182: aaload
    //   6183: iconst_0
    //   6184: aaload
    //   6185: astore -72
    //   6187: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6190: dup
    //   6191: aload_2
    //   6192: iconst_0
    //   6193: iconst_1
    //   6194: anewarray 5776	java/lang/Class
    //   6197: dup
    //   6198: iconst_0
    //   6199: ldc_w 2530
    //   6202: aastore
    //   6203: aconst_null
    //   6204: iconst_5
    //   6205: anewarray 4185	android/graphics/drawable/Drawable
    //   6208: dup
    //   6209: iconst_0
    //   6210: aload -76
    //   6212: aastore
    //   6213: dup
    //   6214: iconst_1
    //   6215: aload -75
    //   6217: aastore
    //   6218: dup
    //   6219: iconst_2
    //   6220: aload -74
    //   6222: aastore
    //   6223: dup
    //   6224: iconst_3
    //   6225: aload -73
    //   6227: aastore
    //   6228: dup
    //   6229: iconst_4
    //   6230: aload -72
    //   6232: aastore
    //   6233: aconst_null
    //   6234: ldc_w 5840
    //   6237: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6240: astore -76
    //   6242: aload_0
    //   6243: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6246: astore_2
    //   6247: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6250: istore_1
    //   6251: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6254: iconst_0
    //   6255: aaload
    //   6256: iconst_1
    //   6257: aaload
    //   6258: astore -75
    //   6260: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6263: iconst_1
    //   6264: aaload
    //   6265: iconst_1
    //   6266: aaload
    //   6267: astore -74
    //   6269: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6272: iconst_2
    //   6273: aaload
    //   6274: iconst_1
    //   6275: aaload
    //   6276: astore -73
    //   6278: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6281: iconst_3
    //   6282: aaload
    //   6283: iconst_1
    //   6284: aaload
    //   6285: astore -72
    //   6287: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6290: iconst_4
    //   6291: aaload
    //   6292: iconst_1
    //   6293: aaload
    //   6294: astore -71
    //   6296: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6299: dup
    //   6300: aload_2
    //   6301: iload_1
    //   6302: iconst_1
    //   6303: anewarray 5776	java/lang/Class
    //   6306: dup
    //   6307: iconst_0
    //   6308: ldc_w 2530
    //   6311: aastore
    //   6312: aconst_null
    //   6313: iconst_5
    //   6314: anewarray 4185	android/graphics/drawable/Drawable
    //   6317: dup
    //   6318: iconst_0
    //   6319: aload -75
    //   6321: aastore
    //   6322: dup
    //   6323: iconst_1
    //   6324: aload -74
    //   6326: aastore
    //   6327: dup
    //   6328: iconst_2
    //   6329: aload -73
    //   6331: aastore
    //   6332: dup
    //   6333: iconst_3
    //   6334: aload -72
    //   6336: aastore
    //   6337: dup
    //   6338: iconst_4
    //   6339: aload -71
    //   6341: aastore
    //   6342: aconst_null
    //   6343: ldc_w 6275
    //   6346: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6349: astore -75
    //   6351: aload_0
    //   6352: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6355: astore_2
    //   6356: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6359: iconst_0
    //   6360: aaload
    //   6361: iconst_1
    //   6362: aaload
    //   6363: astore -74
    //   6365: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6368: iconst_1
    //   6369: aaload
    //   6370: iconst_1
    //   6371: aaload
    //   6372: astore -73
    //   6374: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6377: iconst_2
    //   6378: aaload
    //   6379: iconst_1
    //   6380: aaload
    //   6381: astore -72
    //   6383: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6386: iconst_3
    //   6387: aaload
    //   6388: iconst_1
    //   6389: aaload
    //   6390: astore -71
    //   6392: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6395: iconst_4
    //   6396: aaload
    //   6397: iconst_1
    //   6398: aaload
    //   6399: astore -70
    //   6401: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6404: dup
    //   6405: aload_2
    //   6406: iconst_0
    //   6407: iconst_1
    //   6408: anewarray 5776	java/lang/Class
    //   6411: dup
    //   6412: iconst_0
    //   6413: ldc_w 2530
    //   6416: aastore
    //   6417: aconst_null
    //   6418: iconst_5
    //   6419: anewarray 4185	android/graphics/drawable/Drawable
    //   6422: dup
    //   6423: iconst_0
    //   6424: aload -74
    //   6426: aastore
    //   6427: dup
    //   6428: iconst_1
    //   6429: aload -73
    //   6431: aastore
    //   6432: dup
    //   6433: iconst_2
    //   6434: aload -72
    //   6436: aastore
    //   6437: dup
    //   6438: iconst_3
    //   6439: aload -71
    //   6441: aastore
    //   6442: dup
    //   6443: iconst_4
    //   6444: aload -70
    //   6446: aastore
    //   6447: aconst_null
    //   6448: ldc_w 5848
    //   6451: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6454: astore -74
    //   6456: aload_0
    //   6457: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6460: astore_2
    //   6461: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6464: istore_1
    //   6465: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6468: iconst_5
    //   6469: aaload
    //   6470: iconst_0
    //   6471: aaload
    //   6472: astore -73
    //   6474: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6477: bipush 6
    //   6479: aaload
    //   6480: iconst_0
    //   6481: aaload
    //   6482: astore -72
    //   6484: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6487: bipush 7
    //   6489: aaload
    //   6490: iconst_0
    //   6491: aaload
    //   6492: astore -71
    //   6494: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6497: bipush 8
    //   6499: aaload
    //   6500: iconst_0
    //   6501: aaload
    //   6502: astore -70
    //   6504: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6507: bipush 9
    //   6509: aaload
    //   6510: iconst_0
    //   6511: aaload
    //   6512: astore -69
    //   6514: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6517: dup
    //   6518: aload_2
    //   6519: iload_1
    //   6520: iconst_1
    //   6521: anewarray 5776	java/lang/Class
    //   6524: dup
    //   6525: iconst_0
    //   6526: ldc_w 2530
    //   6529: aastore
    //   6530: aconst_null
    //   6531: iconst_5
    //   6532: anewarray 4185	android/graphics/drawable/Drawable
    //   6535: dup
    //   6536: iconst_0
    //   6537: aload -73
    //   6539: aastore
    //   6540: dup
    //   6541: iconst_1
    //   6542: aload -72
    //   6544: aastore
    //   6545: dup
    //   6546: iconst_2
    //   6547: aload -71
    //   6549: aastore
    //   6550: dup
    //   6551: iconst_3
    //   6552: aload -70
    //   6554: aastore
    //   6555: dup
    //   6556: iconst_4
    //   6557: aload -69
    //   6559: aastore
    //   6560: aconst_null
    //   6561: ldc_w 6277
    //   6564: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6567: astore -73
    //   6569: aload_0
    //   6570: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6573: astore_2
    //   6574: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6577: iconst_5
    //   6578: aaload
    //   6579: iconst_0
    //   6580: aaload
    //   6581: astore -72
    //   6583: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6586: bipush 6
    //   6588: aaload
    //   6589: iconst_0
    //   6590: aaload
    //   6591: astore -71
    //   6593: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6596: bipush 7
    //   6598: aaload
    //   6599: iconst_0
    //   6600: aaload
    //   6601: astore -70
    //   6603: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6606: bipush 8
    //   6608: aaload
    //   6609: iconst_0
    //   6610: aaload
    //   6611: astore -69
    //   6613: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6616: bipush 9
    //   6618: aaload
    //   6619: iconst_0
    //   6620: aaload
    //   6621: astore -68
    //   6623: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6626: dup
    //   6627: aload_2
    //   6628: iconst_0
    //   6629: iconst_1
    //   6630: anewarray 5776	java/lang/Class
    //   6633: dup
    //   6634: iconst_0
    //   6635: ldc_w 2530
    //   6638: aastore
    //   6639: aconst_null
    //   6640: iconst_5
    //   6641: anewarray 4185	android/graphics/drawable/Drawable
    //   6644: dup
    //   6645: iconst_0
    //   6646: aload -72
    //   6648: aastore
    //   6649: dup
    //   6650: iconst_1
    //   6651: aload -71
    //   6653: aastore
    //   6654: dup
    //   6655: iconst_2
    //   6656: aload -70
    //   6658: aastore
    //   6659: dup
    //   6660: iconst_3
    //   6661: aload -69
    //   6663: aastore
    //   6664: dup
    //   6665: iconst_4
    //   6666: aload -68
    //   6668: aastore
    //   6669: aconst_null
    //   6670: ldc_w 5816
    //   6673: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6676: astore -72
    //   6678: aload_0
    //   6679: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6682: astore_2
    //   6683: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6686: istore_1
    //   6687: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6690: iconst_5
    //   6691: aaload
    //   6692: iconst_1
    //   6693: aaload
    //   6694: astore -71
    //   6696: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6699: bipush 6
    //   6701: aaload
    //   6702: iconst_1
    //   6703: aaload
    //   6704: astore -70
    //   6706: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6709: bipush 7
    //   6711: aaload
    //   6712: iconst_1
    //   6713: aaload
    //   6714: astore -69
    //   6716: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6719: bipush 8
    //   6721: aaload
    //   6722: iconst_1
    //   6723: aaload
    //   6724: astore -68
    //   6726: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6729: bipush 9
    //   6731: aaload
    //   6732: iconst_1
    //   6733: aaload
    //   6734: astore -67
    //   6736: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6739: dup
    //   6740: aload_2
    //   6741: iload_1
    //   6742: iconst_1
    //   6743: anewarray 5776	java/lang/Class
    //   6746: dup
    //   6747: iconst_0
    //   6748: ldc_w 2530
    //   6751: aastore
    //   6752: aconst_null
    //   6753: iconst_5
    //   6754: anewarray 4185	android/graphics/drawable/Drawable
    //   6757: dup
    //   6758: iconst_0
    //   6759: aload -71
    //   6761: aastore
    //   6762: dup
    //   6763: iconst_1
    //   6764: aload -70
    //   6766: aastore
    //   6767: dup
    //   6768: iconst_2
    //   6769: aload -69
    //   6771: aastore
    //   6772: dup
    //   6773: iconst_3
    //   6774: aload -68
    //   6776: aastore
    //   6777: dup
    //   6778: iconst_4
    //   6779: aload -67
    //   6781: aastore
    //   6782: aconst_null
    //   6783: ldc_w 6279
    //   6786: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6789: astore -71
    //   6791: aload_0
    //   6792: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6795: astore_2
    //   6796: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6799: iconst_5
    //   6800: aaload
    //   6801: iconst_1
    //   6802: aaload
    //   6803: astore -70
    //   6805: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6808: bipush 6
    //   6810: aaload
    //   6811: iconst_1
    //   6812: aaload
    //   6813: astore -69
    //   6815: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6818: bipush 7
    //   6820: aaload
    //   6821: iconst_1
    //   6822: aaload
    //   6823: astore -68
    //   6825: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6828: bipush 8
    //   6830: aaload
    //   6831: iconst_1
    //   6832: aaload
    //   6833: astore -67
    //   6835: getstatic 6271	org/telegram/ui/ActionBar/Theme:chat_fileStatesDrawable	[[Landroid/graphics/drawable/Drawable;
    //   6838: bipush 9
    //   6840: aaload
    //   6841: iconst_1
    //   6842: aaload
    //   6843: astore -66
    //   6845: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6848: dup
    //   6849: aload_2
    //   6850: iconst_0
    //   6851: iconst_1
    //   6852: anewarray 5776	java/lang/Class
    //   6855: dup
    //   6856: iconst_0
    //   6857: ldc_w 2530
    //   6860: aastore
    //   6861: aconst_null
    //   6862: iconst_5
    //   6863: anewarray 4185	android/graphics/drawable/Drawable
    //   6866: dup
    //   6867: iconst_0
    //   6868: aload -70
    //   6870: aastore
    //   6871: dup
    //   6872: iconst_1
    //   6873: aload -69
    //   6875: aastore
    //   6876: dup
    //   6877: iconst_2
    //   6878: aload -68
    //   6880: aastore
    //   6881: dup
    //   6882: iconst_3
    //   6883: aload -67
    //   6885: aastore
    //   6886: dup
    //   6887: iconst_4
    //   6888: aload -66
    //   6890: aastore
    //   6891: aconst_null
    //   6892: ldc_w 5824
    //   6895: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6898: astore -70
    //   6900: aload_0
    //   6901: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6904: astore_2
    //   6905: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   6908: istore_1
    //   6909: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   6912: iconst_0
    //   6913: aaload
    //   6914: iconst_0
    //   6915: aaload
    //   6916: astore -69
    //   6918: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   6921: iconst_1
    //   6922: aaload
    //   6923: iconst_0
    //   6924: aaload
    //   6925: astore -68
    //   6927: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   6930: iconst_2
    //   6931: aaload
    //   6932: iconst_0
    //   6933: aaload
    //   6934: astore -67
    //   6936: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   6939: iconst_3
    //   6940: aaload
    //   6941: iconst_0
    //   6942: aaload
    //   6943: astore -66
    //   6945: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   6948: dup
    //   6949: aload_2
    //   6950: iload_1
    //   6951: iconst_1
    //   6952: anewarray 5776	java/lang/Class
    //   6955: dup
    //   6956: iconst_0
    //   6957: ldc_w 2530
    //   6960: aastore
    //   6961: aconst_null
    //   6962: iconst_4
    //   6963: anewarray 4185	android/graphics/drawable/Drawable
    //   6966: dup
    //   6967: iconst_0
    //   6968: aload -69
    //   6970: aastore
    //   6971: dup
    //   6972: iconst_1
    //   6973: aload -68
    //   6975: aastore
    //   6976: dup
    //   6977: iconst_2
    //   6978: aload -67
    //   6980: aastore
    //   6981: dup
    //   6982: iconst_3
    //   6983: aload -66
    //   6985: aastore
    //   6986: aconst_null
    //   6987: ldc_w 6284
    //   6990: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   6993: astore -69
    //   6995: aload_0
    //   6996: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   6999: astore_2
    //   7000: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7003: iconst_0
    //   7004: aaload
    //   7005: iconst_0
    //   7006: aaload
    //   7007: astore -68
    //   7009: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7012: iconst_1
    //   7013: aaload
    //   7014: iconst_0
    //   7015: aaload
    //   7016: astore -67
    //   7018: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7021: iconst_2
    //   7022: aaload
    //   7023: iconst_0
    //   7024: aaload
    //   7025: astore -66
    //   7027: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7030: iconst_3
    //   7031: aaload
    //   7032: iconst_0
    //   7033: aaload
    //   7034: astore -65
    //   7036: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7039: dup
    //   7040: aload_2
    //   7041: iconst_0
    //   7042: iconst_1
    //   7043: anewarray 5776	java/lang/Class
    //   7046: dup
    //   7047: iconst_0
    //   7048: ldc_w 2530
    //   7051: aastore
    //   7052: aconst_null
    //   7053: iconst_4
    //   7054: anewarray 4185	android/graphics/drawable/Drawable
    //   7057: dup
    //   7058: iconst_0
    //   7059: aload -68
    //   7061: aastore
    //   7062: dup
    //   7063: iconst_1
    //   7064: aload -67
    //   7066: aastore
    //   7067: dup
    //   7068: iconst_2
    //   7069: aload -66
    //   7071: aastore
    //   7072: dup
    //   7073: iconst_3
    //   7074: aload -65
    //   7076: aastore
    //   7077: aconst_null
    //   7078: ldc_w 6286
    //   7081: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7084: astore -68
    //   7086: aload_0
    //   7087: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7090: astore_2
    //   7091: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7094: istore_1
    //   7095: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7098: iconst_0
    //   7099: aaload
    //   7100: iconst_1
    //   7101: aaload
    //   7102: astore -67
    //   7104: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7107: iconst_1
    //   7108: aaload
    //   7109: iconst_1
    //   7110: aaload
    //   7111: astore -66
    //   7113: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7116: iconst_2
    //   7117: aaload
    //   7118: iconst_1
    //   7119: aaload
    //   7120: astore -65
    //   7122: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7125: iconst_3
    //   7126: aaload
    //   7127: iconst_1
    //   7128: aaload
    //   7129: astore -64
    //   7131: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7134: dup
    //   7135: aload_2
    //   7136: iload_1
    //   7137: iconst_1
    //   7138: anewarray 5776	java/lang/Class
    //   7141: dup
    //   7142: iconst_0
    //   7143: ldc_w 2530
    //   7146: aastore
    //   7147: aconst_null
    //   7148: iconst_4
    //   7149: anewarray 4185	android/graphics/drawable/Drawable
    //   7152: dup
    //   7153: iconst_0
    //   7154: aload -67
    //   7156: aastore
    //   7157: dup
    //   7158: iconst_1
    //   7159: aload -66
    //   7161: aastore
    //   7162: dup
    //   7163: iconst_2
    //   7164: aload -65
    //   7166: aastore
    //   7167: dup
    //   7168: iconst_3
    //   7169: aload -64
    //   7171: aastore
    //   7172: aconst_null
    //   7173: ldc_w 6288
    //   7176: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7179: astore -67
    //   7181: aload_0
    //   7182: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7185: astore_2
    //   7186: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7189: iconst_0
    //   7190: aaload
    //   7191: iconst_1
    //   7192: aaload
    //   7193: astore -66
    //   7195: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7198: iconst_1
    //   7199: aaload
    //   7200: iconst_1
    //   7201: aaload
    //   7202: astore -65
    //   7204: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7207: iconst_2
    //   7208: aaload
    //   7209: iconst_1
    //   7210: aaload
    //   7211: astore -64
    //   7213: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7216: iconst_3
    //   7217: aaload
    //   7218: iconst_1
    //   7219: aaload
    //   7220: astore -63
    //   7222: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7225: dup
    //   7226: aload_2
    //   7227: iconst_0
    //   7228: iconst_1
    //   7229: anewarray 5776	java/lang/Class
    //   7232: dup
    //   7233: iconst_0
    //   7234: ldc_w 2530
    //   7237: aastore
    //   7238: aconst_null
    //   7239: iconst_4
    //   7240: anewarray 4185	android/graphics/drawable/Drawable
    //   7243: dup
    //   7244: iconst_0
    //   7245: aload -66
    //   7247: aastore
    //   7248: dup
    //   7249: iconst_1
    //   7250: aload -65
    //   7252: aastore
    //   7253: dup
    //   7254: iconst_2
    //   7255: aload -64
    //   7257: aastore
    //   7258: dup
    //   7259: iconst_3
    //   7260: aload -63
    //   7262: aastore
    //   7263: aconst_null
    //   7264: ldc_w 6290
    //   7267: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7270: astore -66
    //   7272: aload_0
    //   7273: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7276: astore_2
    //   7277: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7280: istore_1
    //   7281: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7284: bipush 7
    //   7286: aaload
    //   7287: iconst_0
    //   7288: aaload
    //   7289: astore -65
    //   7291: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7294: bipush 8
    //   7296: aaload
    //   7297: iconst_0
    //   7298: aaload
    //   7299: astore -64
    //   7301: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7304: dup
    //   7305: aload_2
    //   7306: iload_1
    //   7307: iconst_1
    //   7308: anewarray 5776	java/lang/Class
    //   7311: dup
    //   7312: iconst_0
    //   7313: ldc_w 2530
    //   7316: aastore
    //   7317: aconst_null
    //   7318: iconst_2
    //   7319: anewarray 4185	android/graphics/drawable/Drawable
    //   7322: dup
    //   7323: iconst_0
    //   7324: aload -65
    //   7326: aastore
    //   7327: dup
    //   7328: iconst_1
    //   7329: aload -64
    //   7331: aastore
    //   7332: aconst_null
    //   7333: ldc_w 6292
    //   7336: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7339: astore -65
    //   7341: aload_0
    //   7342: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7345: astore_2
    //   7346: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7349: bipush 7
    //   7351: aaload
    //   7352: iconst_0
    //   7353: aaload
    //   7354: astore -64
    //   7356: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7359: bipush 8
    //   7361: aaload
    //   7362: iconst_0
    //   7363: aaload
    //   7364: astore -63
    //   7366: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7369: dup
    //   7370: aload_2
    //   7371: iconst_0
    //   7372: iconst_1
    //   7373: anewarray 5776	java/lang/Class
    //   7376: dup
    //   7377: iconst_0
    //   7378: ldc_w 2530
    //   7381: aastore
    //   7382: aconst_null
    //   7383: iconst_2
    //   7384: anewarray 4185	android/graphics/drawable/Drawable
    //   7387: dup
    //   7388: iconst_0
    //   7389: aload -64
    //   7391: aastore
    //   7392: dup
    //   7393: iconst_1
    //   7394: aload -63
    //   7396: aastore
    //   7397: aconst_null
    //   7398: ldc_w 6294
    //   7401: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7404: astore -64
    //   7406: aload_0
    //   7407: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7410: astore_2
    //   7411: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7414: istore_1
    //   7415: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7418: bipush 7
    //   7420: aaload
    //   7421: iconst_1
    //   7422: aaload
    //   7423: astore -63
    //   7425: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7428: bipush 8
    //   7430: aaload
    //   7431: iconst_1
    //   7432: aaload
    //   7433: astore -62
    //   7435: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7438: dup
    //   7439: aload_2
    //   7440: iload_1
    //   7441: iconst_1
    //   7442: anewarray 5776	java/lang/Class
    //   7445: dup
    //   7446: iconst_0
    //   7447: ldc_w 2530
    //   7450: aastore
    //   7451: aconst_null
    //   7452: iconst_2
    //   7453: anewarray 4185	android/graphics/drawable/Drawable
    //   7456: dup
    //   7457: iconst_0
    //   7458: aload -63
    //   7460: aastore
    //   7461: dup
    //   7462: iconst_1
    //   7463: aload -62
    //   7465: aastore
    //   7466: aconst_null
    //   7467: ldc_w 6296
    //   7470: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7473: astore -63
    //   7475: aload_0
    //   7476: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7479: astore_2
    //   7480: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7483: bipush 7
    //   7485: aaload
    //   7486: iconst_1
    //   7487: aaload
    //   7488: astore -62
    //   7490: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7493: bipush 8
    //   7495: aaload
    //   7496: iconst_1
    //   7497: aaload
    //   7498: astore -61
    //   7500: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7503: dup
    //   7504: aload_2
    //   7505: iconst_0
    //   7506: iconst_1
    //   7507: anewarray 5776	java/lang/Class
    //   7510: dup
    //   7511: iconst_0
    //   7512: ldc_w 2530
    //   7515: aastore
    //   7516: aconst_null
    //   7517: iconst_2
    //   7518: anewarray 4185	android/graphics/drawable/Drawable
    //   7521: dup
    //   7522: iconst_0
    //   7523: aload -62
    //   7525: aastore
    //   7526: dup
    //   7527: iconst_1
    //   7528: aload -61
    //   7530: aastore
    //   7531: aconst_null
    //   7532: ldc_w 6298
    //   7535: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7538: astore -62
    //   7540: aload_0
    //   7541: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7544: astore_2
    //   7545: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7548: istore_1
    //   7549: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7552: bipush 10
    //   7554: aaload
    //   7555: iconst_0
    //   7556: aaload
    //   7557: astore -61
    //   7559: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7562: bipush 11
    //   7564: aaload
    //   7565: iconst_0
    //   7566: aaload
    //   7567: astore -60
    //   7569: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7572: dup
    //   7573: aload_2
    //   7574: iload_1
    //   7575: iconst_1
    //   7576: anewarray 5776	java/lang/Class
    //   7579: dup
    //   7580: iconst_0
    //   7581: ldc_w 2530
    //   7584: aastore
    //   7585: aconst_null
    //   7586: iconst_2
    //   7587: anewarray 4185	android/graphics/drawable/Drawable
    //   7590: dup
    //   7591: iconst_0
    //   7592: aload -61
    //   7594: aastore
    //   7595: dup
    //   7596: iconst_1
    //   7597: aload -60
    //   7599: aastore
    //   7600: aconst_null
    //   7601: ldc_w 6300
    //   7604: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7607: astore -61
    //   7609: aload_0
    //   7610: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7613: astore_2
    //   7614: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7617: bipush 10
    //   7619: aaload
    //   7620: iconst_0
    //   7621: aaload
    //   7622: astore -60
    //   7624: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7627: bipush 11
    //   7629: aaload
    //   7630: iconst_0
    //   7631: aaload
    //   7632: astore -59
    //   7634: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7637: dup
    //   7638: aload_2
    //   7639: iconst_0
    //   7640: iconst_1
    //   7641: anewarray 5776	java/lang/Class
    //   7644: dup
    //   7645: iconst_0
    //   7646: ldc_w 2530
    //   7649: aastore
    //   7650: aconst_null
    //   7651: iconst_2
    //   7652: anewarray 4185	android/graphics/drawable/Drawable
    //   7655: dup
    //   7656: iconst_0
    //   7657: aload -60
    //   7659: aastore
    //   7660: dup
    //   7661: iconst_1
    //   7662: aload -59
    //   7664: aastore
    //   7665: aconst_null
    //   7666: ldc_w 6302
    //   7669: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7672: astore -60
    //   7674: aload_0
    //   7675: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7678: astore_2
    //   7679: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   7682: istore_1
    //   7683: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7686: bipush 10
    //   7688: aaload
    //   7689: iconst_1
    //   7690: aaload
    //   7691: astore -59
    //   7693: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7696: bipush 11
    //   7698: aaload
    //   7699: iconst_1
    //   7700: aaload
    //   7701: astore -58
    //   7703: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7706: dup
    //   7707: aload_2
    //   7708: iload_1
    //   7709: iconst_1
    //   7710: anewarray 5776	java/lang/Class
    //   7713: dup
    //   7714: iconst_0
    //   7715: ldc_w 2530
    //   7718: aastore
    //   7719: aconst_null
    //   7720: iconst_2
    //   7721: anewarray 4185	android/graphics/drawable/Drawable
    //   7724: dup
    //   7725: iconst_0
    //   7726: aload -59
    //   7728: aastore
    //   7729: dup
    //   7730: iconst_1
    //   7731: aload -58
    //   7733: aastore
    //   7734: aconst_null
    //   7735: ldc_w 6304
    //   7738: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7741: astore -59
    //   7743: aload_0
    //   7744: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7747: astore_2
    //   7748: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7751: bipush 10
    //   7753: aaload
    //   7754: iconst_1
    //   7755: aaload
    //   7756: astore -58
    //   7758: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7761: bipush 11
    //   7763: aaload
    //   7764: iconst_1
    //   7765: aaload
    //   7766: astore -57
    //   7768: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7771: dup
    //   7772: aload_2
    //   7773: iconst_0
    //   7774: iconst_1
    //   7775: anewarray 5776	java/lang/Class
    //   7778: dup
    //   7779: iconst_0
    //   7780: ldc_w 2530
    //   7783: aastore
    //   7784: aconst_null
    //   7785: iconst_2
    //   7786: anewarray 4185	android/graphics/drawable/Drawable
    //   7789: dup
    //   7790: iconst_0
    //   7791: aload -58
    //   7793: aastore
    //   7794: dup
    //   7795: iconst_1
    //   7796: aload -57
    //   7798: aastore
    //   7799: aconst_null
    //   7800: ldc_w 6306
    //   7803: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7806: astore -58
    //   7808: aload_0
    //   7809: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7812: astore_2
    //   7813: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7816: bipush 9
    //   7818: aaload
    //   7819: iconst_0
    //   7820: aaload
    //   7821: astore -57
    //   7823: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7826: dup
    //   7827: aload_2
    //   7828: iconst_0
    //   7829: iconst_1
    //   7830: anewarray 5776	java/lang/Class
    //   7833: dup
    //   7834: iconst_0
    //   7835: ldc_w 2530
    //   7838: aastore
    //   7839: aconst_null
    //   7840: iconst_1
    //   7841: anewarray 4185	android/graphics/drawable/Drawable
    //   7844: dup
    //   7845: iconst_0
    //   7846: aload -57
    //   7848: aastore
    //   7849: aconst_null
    //   7850: ldc_w 6308
    //   7853: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7856: astore -57
    //   7858: aload_0
    //   7859: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7862: astore_2
    //   7863: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7866: bipush 9
    //   7868: aaload
    //   7869: iconst_1
    //   7870: aaload
    //   7871: astore -56
    //   7873: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7876: dup
    //   7877: aload_2
    //   7878: iconst_0
    //   7879: iconst_1
    //   7880: anewarray 5776	java/lang/Class
    //   7883: dup
    //   7884: iconst_0
    //   7885: ldc_w 2530
    //   7888: aastore
    //   7889: aconst_null
    //   7890: iconst_1
    //   7891: anewarray 4185	android/graphics/drawable/Drawable
    //   7894: dup
    //   7895: iconst_0
    //   7896: aload -56
    //   7898: aastore
    //   7899: aconst_null
    //   7900: ldc_w 6310
    //   7903: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7906: astore -56
    //   7908: aload_0
    //   7909: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7912: astore_2
    //   7913: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7916: bipush 12
    //   7918: aaload
    //   7919: iconst_0
    //   7920: aaload
    //   7921: astore -55
    //   7923: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7926: dup
    //   7927: aload_2
    //   7928: iconst_0
    //   7929: iconst_1
    //   7930: anewarray 5776	java/lang/Class
    //   7933: dup
    //   7934: iconst_0
    //   7935: ldc_w 2530
    //   7938: aastore
    //   7939: aconst_null
    //   7940: iconst_1
    //   7941: anewarray 4185	android/graphics/drawable/Drawable
    //   7944: dup
    //   7945: iconst_0
    //   7946: aload -55
    //   7948: aastore
    //   7949: aconst_null
    //   7950: ldc_w 6312
    //   7953: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   7956: astore -55
    //   7958: aload_0
    //   7959: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   7962: astore_2
    //   7963: getstatic 6282	org/telegram/ui/ActionBar/Theme:chat_photoStatesDrawables	[[Landroid/graphics/drawable/Drawable;
    //   7966: bipush 12
    //   7968: aaload
    //   7969: iconst_1
    //   7970: aaload
    //   7971: astore -54
    //   7973: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   7976: dup
    //   7977: aload_2
    //   7978: iconst_0
    //   7979: iconst_1
    //   7980: anewarray 5776	java/lang/Class
    //   7983: dup
    //   7984: iconst_0
    //   7985: ldc_w 2530
    //   7988: aastore
    //   7989: aconst_null
    //   7990: iconst_1
    //   7991: anewarray 4185	android/graphics/drawable/Drawable
    //   7994: dup
    //   7995: iconst_0
    //   7996: aload -54
    //   7998: aastore
    //   7999: aconst_null
    //   8000: ldc_w 6314
    //   8003: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8006: astore -54
    //   8008: aload_0
    //   8009: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8012: astore_2
    //   8013: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8016: istore_1
    //   8017: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8020: iconst_0
    //   8021: aaload
    //   8022: astore -53
    //   8024: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8027: dup
    //   8028: aload_2
    //   8029: iload_1
    //   8030: iconst_1
    //   8031: anewarray 5776	java/lang/Class
    //   8034: dup
    //   8035: iconst_0
    //   8036: ldc_w 2530
    //   8039: aastore
    //   8040: aconst_null
    //   8041: iconst_1
    //   8042: anewarray 4185	android/graphics/drawable/Drawable
    //   8045: dup
    //   8046: iconst_0
    //   8047: aload -53
    //   8049: aastore
    //   8050: aconst_null
    //   8051: ldc_w 6320
    //   8054: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8057: astore -53
    //   8059: aload_0
    //   8060: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8063: astore_2
    //   8064: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8067: iconst_0
    //   8068: aaload
    //   8069: astore -52
    //   8071: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8074: dup
    //   8075: aload_2
    //   8076: iconst_0
    //   8077: iconst_1
    //   8078: anewarray 5776	java/lang/Class
    //   8081: dup
    //   8082: iconst_0
    //   8083: ldc_w 2530
    //   8086: aastore
    //   8087: aconst_null
    //   8088: iconst_1
    //   8089: anewarray 4185	android/graphics/drawable/Drawable
    //   8092: dup
    //   8093: iconst_0
    //   8094: aload -52
    //   8096: aastore
    //   8097: aconst_null
    //   8098: ldc_w 6322
    //   8101: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8104: astore -52
    //   8106: aload_0
    //   8107: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8110: astore_2
    //   8111: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8114: istore_1
    //   8115: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8118: iconst_1
    //   8119: aaload
    //   8120: astore -51
    //   8122: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8125: dup
    //   8126: aload_2
    //   8127: iload_1
    //   8128: iconst_1
    //   8129: anewarray 5776	java/lang/Class
    //   8132: dup
    //   8133: iconst_0
    //   8134: ldc_w 2530
    //   8137: aastore
    //   8138: aconst_null
    //   8139: iconst_1
    //   8140: anewarray 4185	android/graphics/drawable/Drawable
    //   8143: dup
    //   8144: iconst_0
    //   8145: aload -51
    //   8147: aastore
    //   8148: aconst_null
    //   8149: ldc_w 6324
    //   8152: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8155: astore -51
    //   8157: aload_0
    //   8158: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8161: astore_2
    //   8162: getstatic 6318	org/telegram/ui/ActionBar/Theme:chat_contactDrawable	[Landroid/graphics/drawable/Drawable;
    //   8165: iconst_1
    //   8166: aaload
    //   8167: astore -50
    //   8169: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8172: dup
    //   8173: aload_2
    //   8174: iconst_0
    //   8175: iconst_1
    //   8176: anewarray 5776	java/lang/Class
    //   8179: dup
    //   8180: iconst_0
    //   8181: ldc_w 2530
    //   8184: aastore
    //   8185: aconst_null
    //   8186: iconst_1
    //   8187: anewarray 4185	android/graphics/drawable/Drawable
    //   8190: dup
    //   8191: iconst_0
    //   8192: aload -50
    //   8194: aastore
    //   8195: aconst_null
    //   8196: ldc_w 6326
    //   8199: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8202: astore -50
    //   8204: aload_0
    //   8205: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8208: astore_2
    //   8209: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8212: istore_1
    //   8213: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8216: iconst_0
    //   8217: aaload
    //   8218: astore -49
    //   8220: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8223: dup
    //   8224: aload_2
    //   8225: iload_1
    //   8226: iconst_1
    //   8227: anewarray 5776	java/lang/Class
    //   8230: dup
    //   8231: iconst_0
    //   8232: ldc_w 2530
    //   8235: aastore
    //   8236: aconst_null
    //   8237: iconst_1
    //   8238: anewarray 4185	android/graphics/drawable/Drawable
    //   8241: dup
    //   8242: iconst_0
    //   8243: aload -49
    //   8245: aastore
    //   8246: aconst_null
    //   8247: ldc_w 6331
    //   8250: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8253: astore -49
    //   8255: aload_0
    //   8256: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8259: astore_2
    //   8260: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8263: iconst_0
    //   8264: aaload
    //   8265: astore -48
    //   8267: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8270: dup
    //   8271: aload_2
    //   8272: iconst_0
    //   8273: iconst_1
    //   8274: anewarray 5776	java/lang/Class
    //   8277: dup
    //   8278: iconst_0
    //   8279: ldc_w 2530
    //   8282: aastore
    //   8283: aconst_null
    //   8284: iconst_1
    //   8285: anewarray 4185	android/graphics/drawable/Drawable
    //   8288: dup
    //   8289: iconst_0
    //   8290: aload -48
    //   8292: aastore
    //   8293: aconst_null
    //   8294: ldc_w 6333
    //   8297: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8300: astore -48
    //   8302: aload_0
    //   8303: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8306: astore_2
    //   8307: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   8310: istore_1
    //   8311: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8314: iconst_1
    //   8315: aaload
    //   8316: astore -47
    //   8318: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8321: dup
    //   8322: aload_2
    //   8323: iload_1
    //   8324: iconst_1
    //   8325: anewarray 5776	java/lang/Class
    //   8328: dup
    //   8329: iconst_0
    //   8330: ldc_w 2530
    //   8333: aastore
    //   8334: aconst_null
    //   8335: iconst_1
    //   8336: anewarray 4185	android/graphics/drawable/Drawable
    //   8339: dup
    //   8340: iconst_0
    //   8341: aload -47
    //   8343: aastore
    //   8344: aconst_null
    //   8345: ldc_w 6335
    //   8348: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8351: astore -47
    //   8353: aload_0
    //   8354: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   8357: astore_2
    //   8358: getstatic 6329	org/telegram/ui/ActionBar/Theme:chat_locationDrawable	[Landroid/graphics/drawable/Drawable;
    //   8361: iconst_1
    //   8362: aaload
    //   8363: astore -46
    //   8365: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8368: dup
    //   8369: aload_2
    //   8370: iconst_0
    //   8371: iconst_1
    //   8372: anewarray 5776	java/lang/Class
    //   8375: dup
    //   8376: iconst_0
    //   8377: ldc_w 2530
    //   8380: aastore
    //   8381: aconst_null
    //   8382: iconst_1
    //   8383: anewarray 4185	android/graphics/drawable/Drawable
    //   8386: dup
    //   8387: iconst_0
    //   8388: aload -46
    //   8390: aastore
    //   8391: aconst_null
    //   8392: ldc_w 6337
    //   8395: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8398: astore -46
    //   8400: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8403: dup
    //   8404: aload_0
    //   8405: getfield 1522	org/telegram/ui/ChatActivity:mentionContainer	Landroid/widget/FrameLayout;
    //   8408: iconst_0
    //   8409: aconst_null
    //   8410: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8413: aconst_null
    //   8414: aconst_null
    //   8415: ldc_w 6342
    //   8418: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8421: astore -45
    //   8423: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8426: dup
    //   8427: aload_0
    //   8428: getfield 1522	org/telegram/ui/ChatActivity:mentionContainer	Landroid/widget/FrameLayout;
    //   8431: iconst_0
    //   8432: aconst_null
    //   8433: aconst_null
    //   8434: iconst_1
    //   8435: anewarray 4185	android/graphics/drawable/Drawable
    //   8438: dup
    //   8439: iconst_0
    //   8440: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8443: aastore
    //   8444: aconst_null
    //   8445: ldc_w 6347
    //   8448: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8451: astore -44
    //   8453: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8456: dup
    //   8457: aload_0
    //   8458: getfield 991	org/telegram/ui/ChatActivity:searchContainer	Landroid/widget/FrameLayout;
    //   8461: iconst_0
    //   8462: aconst_null
    //   8463: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8466: aconst_null
    //   8467: aconst_null
    //   8468: ldc_w 6342
    //   8471: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8474: astore -43
    //   8476: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8479: dup
    //   8480: aload_0
    //   8481: getfield 991	org/telegram/ui/ChatActivity:searchContainer	Landroid/widget/FrameLayout;
    //   8484: iconst_0
    //   8485: aconst_null
    //   8486: aconst_null
    //   8487: iconst_1
    //   8488: anewarray 4185	android/graphics/drawable/Drawable
    //   8491: dup
    //   8492: iconst_0
    //   8493: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8496: aastore
    //   8497: aconst_null
    //   8498: ldc_w 6347
    //   8501: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8504: astore -42
    //   8506: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8509: dup
    //   8510: aload_0
    //   8511: getfield 974	org/telegram/ui/ChatActivity:bottomOverlay	Landroid/widget/FrameLayout;
    //   8514: iconst_0
    //   8515: aconst_null
    //   8516: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8519: aconst_null
    //   8520: aconst_null
    //   8521: ldc_w 6342
    //   8524: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8527: astore -41
    //   8529: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8532: dup
    //   8533: aload_0
    //   8534: getfield 974	org/telegram/ui/ChatActivity:bottomOverlay	Landroid/widget/FrameLayout;
    //   8537: iconst_0
    //   8538: aconst_null
    //   8539: aconst_null
    //   8540: iconst_1
    //   8541: anewarray 4185	android/graphics/drawable/Drawable
    //   8544: dup
    //   8545: iconst_0
    //   8546: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8549: aastore
    //   8550: aconst_null
    //   8551: ldc_w 6347
    //   8554: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8557: astore -40
    //   8559: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8562: dup
    //   8563: aload_0
    //   8564: getfield 816	org/telegram/ui/ChatActivity:bottomOverlayChat	Landroid/widget/FrameLayout;
    //   8567: iconst_0
    //   8568: aconst_null
    //   8569: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8572: aconst_null
    //   8573: aconst_null
    //   8574: ldc_w 6342
    //   8577: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8580: astore -39
    //   8582: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8585: dup
    //   8586: aload_0
    //   8587: getfield 816	org/telegram/ui/ChatActivity:bottomOverlayChat	Landroid/widget/FrameLayout;
    //   8590: iconst_0
    //   8591: aconst_null
    //   8592: aconst_null
    //   8593: iconst_1
    //   8594: anewarray 4185	android/graphics/drawable/Drawable
    //   8597: dup
    //   8598: iconst_0
    //   8599: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8602: aastore
    //   8603: aconst_null
    //   8604: ldc_w 6347
    //   8607: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8610: astore -38
    //   8612: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8615: dup
    //   8616: aload_0
    //   8617: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8620: iconst_0
    //   8621: aconst_null
    //   8622: getstatic 6340	org/telegram/ui/ActionBar/Theme:chat_composeBackgroundPaint	Landroid/graphics/Paint;
    //   8625: aconst_null
    //   8626: aconst_null
    //   8627: ldc_w 6342
    //   8630: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8633: astore -37
    //   8635: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8638: dup
    //   8639: aload_0
    //   8640: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8643: iconst_0
    //   8644: aconst_null
    //   8645: aconst_null
    //   8646: iconst_1
    //   8647: anewarray 4185	android/graphics/drawable/Drawable
    //   8650: dup
    //   8651: iconst_0
    //   8652: getstatic 6345	org/telegram/ui/ActionBar/Theme:chat_composeShadowDrawable	Landroid/graphics/drawable/Drawable;
    //   8655: aastore
    //   8656: aconst_null
    //   8657: ldc_w 6347
    //   8660: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8663: astore -36
    //   8665: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8668: dup
    //   8669: aload_0
    //   8670: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8673: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   8676: iconst_1
    //   8677: anewarray 5776	java/lang/Class
    //   8680: dup
    //   8681: iconst_0
    //   8682: ldc_w 1717
    //   8685: aastore
    //   8686: iconst_1
    //   8687: anewarray 1974	java/lang/String
    //   8690: dup
    //   8691: iconst_0
    //   8692: ldc_w 6349
    //   8695: aastore
    //   8696: aconst_null
    //   8697: aconst_null
    //   8698: aconst_null
    //   8699: ldc_w 6342
    //   8702: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8705: astore -35
    //   8707: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8710: dup
    //   8711: aload_0
    //   8712: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8715: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   8718: iconst_1
    //   8719: anewarray 5776	java/lang/Class
    //   8722: dup
    //   8723: iconst_0
    //   8724: ldc_w 1717
    //   8727: aastore
    //   8728: iconst_1
    //   8729: anewarray 1974	java/lang/String
    //   8732: dup
    //   8733: iconst_0
    //   8734: ldc_w 6354
    //   8737: aastore
    //   8738: aconst_null
    //   8739: aconst_null
    //   8740: aconst_null
    //   8741: ldc_w 6356
    //   8744: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8747: astore -34
    //   8749: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8752: dup
    //   8753: aload_0
    //   8754: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8757: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   8760: iconst_1
    //   8761: anewarray 5776	java/lang/Class
    //   8764: dup
    //   8765: iconst_0
    //   8766: ldc_w 1717
    //   8769: aastore
    //   8770: iconst_1
    //   8771: anewarray 1974	java/lang/String
    //   8774: dup
    //   8775: iconst_0
    //   8776: ldc_w 6358
    //   8779: aastore
    //   8780: aconst_null
    //   8781: aconst_null
    //   8782: aconst_null
    //   8783: ldc_w 4963
    //   8786: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8789: astore -33
    //   8791: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8794: dup
    //   8795: aload_0
    //   8796: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8799: getstatic 6361	org/telegram/ui/ActionBar/ThemeDescription:FLAG_HINTTEXTCOLOR	I
    //   8802: iconst_1
    //   8803: anewarray 5776	java/lang/Class
    //   8806: dup
    //   8807: iconst_0
    //   8808: ldc_w 1717
    //   8811: aastore
    //   8812: iconst_1
    //   8813: anewarray 1974	java/lang/String
    //   8816: dup
    //   8817: iconst_0
    //   8818: ldc_w 6354
    //   8821: aastore
    //   8822: aconst_null
    //   8823: aconst_null
    //   8824: aconst_null
    //   8825: ldc_w 6363
    //   8828: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8831: astore -32
    //   8833: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8836: dup
    //   8837: aload_0
    //   8838: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8841: iconst_0
    //   8842: iconst_1
    //   8843: anewarray 5776	java/lang/Class
    //   8846: dup
    //   8847: iconst_0
    //   8848: ldc_w 1717
    //   8851: aastore
    //   8852: iconst_1
    //   8853: anewarray 1974	java/lang/String
    //   8856: dup
    //   8857: iconst_0
    //   8858: ldc_w 6365
    //   8861: aastore
    //   8862: aconst_null
    //   8863: aconst_null
    //   8864: aconst_null
    //   8865: ldc_w 6367
    //   8868: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8871: astore -31
    //   8873: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8876: dup
    //   8877: aload_0
    //   8878: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8881: iconst_0
    //   8882: iconst_1
    //   8883: anewarray 5776	java/lang/Class
    //   8886: dup
    //   8887: iconst_0
    //   8888: ldc_w 1717
    //   8891: aastore
    //   8892: iconst_1
    //   8893: anewarray 1974	java/lang/String
    //   8896: dup
    //   8897: iconst_0
    //   8898: ldc_w 6369
    //   8901: aastore
    //   8902: aconst_null
    //   8903: aconst_null
    //   8904: aconst_null
    //   8905: ldc_w 6371
    //   8908: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8911: astore -30
    //   8913: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8916: dup
    //   8917: aload_0
    //   8918: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8921: iconst_0
    //   8922: iconst_1
    //   8923: anewarray 5776	java/lang/Class
    //   8926: dup
    //   8927: iconst_0
    //   8928: ldc_w 1717
    //   8931: aastore
    //   8932: iconst_1
    //   8933: anewarray 1974	java/lang/String
    //   8936: dup
    //   8937: iconst_0
    //   8938: ldc_w 6373
    //   8941: aastore
    //   8942: aconst_null
    //   8943: aconst_null
    //   8944: aconst_null
    //   8945: ldc_w 6371
    //   8948: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8951: astore -29
    //   8953: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8956: dup
    //   8957: aload_0
    //   8958: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   8961: iconst_0
    //   8962: iconst_1
    //   8963: anewarray 5776	java/lang/Class
    //   8966: dup
    //   8967: iconst_0
    //   8968: ldc_w 1717
    //   8971: aastore
    //   8972: iconst_1
    //   8973: anewarray 1974	java/lang/String
    //   8976: dup
    //   8977: iconst_0
    //   8978: ldc_w 6375
    //   8981: aastore
    //   8982: aconst_null
    //   8983: aconst_null
    //   8984: aconst_null
    //   8985: ldc_w 6371
    //   8988: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   8991: astore -28
    //   8993: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   8996: dup
    //   8997: aload_0
    //   8998: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9001: iconst_0
    //   9002: iconst_1
    //   9003: anewarray 5776	java/lang/Class
    //   9006: dup
    //   9007: iconst_0
    //   9008: ldc_w 1717
    //   9011: aastore
    //   9012: iconst_1
    //   9013: anewarray 1974	java/lang/String
    //   9016: dup
    //   9017: iconst_0
    //   9018: ldc_w 6377
    //   9021: aastore
    //   9022: aconst_null
    //   9023: aconst_null
    //   9024: aconst_null
    //   9025: ldc_w 6371
    //   9028: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9031: astore -27
    //   9033: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9036: dup
    //   9037: aload_0
    //   9038: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9041: iconst_0
    //   9042: iconst_1
    //   9043: anewarray 5776	java/lang/Class
    //   9046: dup
    //   9047: iconst_0
    //   9048: ldc_w 1717
    //   9051: aastore
    //   9052: iconst_1
    //   9053: anewarray 1974	java/lang/String
    //   9056: dup
    //   9057: iconst_0
    //   9058: ldc_w 6379
    //   9061: aastore
    //   9062: aconst_null
    //   9063: aconst_null
    //   9064: aconst_null
    //   9065: ldc_w 6371
    //   9068: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9071: astore -26
    //   9073: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9076: dup
    //   9077: aload_0
    //   9078: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9081: iconst_0
    //   9082: iconst_1
    //   9083: anewarray 5776	java/lang/Class
    //   9086: dup
    //   9087: iconst_0
    //   9088: ldc_w 1717
    //   9091: aastore
    //   9092: iconst_1
    //   9093: anewarray 1974	java/lang/String
    //   9096: dup
    //   9097: iconst_0
    //   9098: ldc_w 6381
    //   9101: aastore
    //   9102: aconst_null
    //   9103: aconst_null
    //   9104: aconst_null
    //   9105: ldc_w 6371
    //   9108: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9111: astore -25
    //   9113: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9116: dup
    //   9117: aload_0
    //   9118: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9121: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9124: iconst_1
    //   9125: anewarray 5776	java/lang/Class
    //   9128: dup
    //   9129: iconst_0
    //   9130: ldc_w 1717
    //   9133: aastore
    //   9134: iconst_1
    //   9135: anewarray 1974	java/lang/String
    //   9138: dup
    //   9139: iconst_0
    //   9140: ldc_w 6386
    //   9143: aastore
    //   9144: aconst_null
    //   9145: aconst_null
    //   9146: aconst_null
    //   9147: ldc_w 6388
    //   9150: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9153: astore -24
    //   9155: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9158: dup
    //   9159: aload_0
    //   9160: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9163: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9166: iconst_1
    //   9167: anewarray 5776	java/lang/Class
    //   9170: dup
    //   9171: iconst_0
    //   9172: ldc_w 1717
    //   9175: aastore
    //   9176: iconst_1
    //   9177: anewarray 1974	java/lang/String
    //   9180: dup
    //   9181: iconst_0
    //   9182: ldc_w 6390
    //   9185: aastore
    //   9186: aconst_null
    //   9187: aconst_null
    //   9188: aconst_null
    //   9189: ldc_w 6342
    //   9192: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9195: astore -23
    //   9197: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9200: dup
    //   9201: aload_0
    //   9202: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9205: iconst_0
    //   9206: iconst_1
    //   9207: anewarray 5776	java/lang/Class
    //   9210: dup
    //   9211: iconst_0
    //   9212: ldc_w 1717
    //   9215: aastore
    //   9216: iconst_1
    //   9217: anewarray 1974	java/lang/String
    //   9220: dup
    //   9221: iconst_0
    //   9222: ldc_w 6392
    //   9225: aastore
    //   9226: aconst_null
    //   9227: aconst_null
    //   9228: aconst_null
    //   9229: ldc_w 6394
    //   9232: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9235: astore -22
    //   9237: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9240: dup
    //   9241: aload_0
    //   9242: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9245: iconst_0
    //   9246: iconst_1
    //   9247: anewarray 5776	java/lang/Class
    //   9250: dup
    //   9251: iconst_0
    //   9252: ldc_w 1717
    //   9255: aastore
    //   9256: iconst_1
    //   9257: anewarray 1974	java/lang/String
    //   9260: dup
    //   9261: iconst_0
    //   9262: ldc_w 6396
    //   9265: aastore
    //   9266: aconst_null
    //   9267: aconst_null
    //   9268: aconst_null
    //   9269: ldc_w 6394
    //   9272: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9275: astore -21
    //   9277: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9280: dup
    //   9281: aload_0
    //   9282: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9285: iconst_0
    //   9286: iconst_1
    //   9287: anewarray 5776	java/lang/Class
    //   9290: dup
    //   9291: iconst_0
    //   9292: ldc_w 1717
    //   9295: aastore
    //   9296: iconst_1
    //   9297: anewarray 1974	java/lang/String
    //   9300: dup
    //   9301: iconst_0
    //   9302: ldc_w 6398
    //   9305: aastore
    //   9306: aconst_null
    //   9307: aconst_null
    //   9308: aconst_null
    //   9309: ldc_w 6394
    //   9312: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9315: astore -20
    //   9317: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9320: dup
    //   9321: aload_0
    //   9322: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9325: iconst_0
    //   9326: iconst_1
    //   9327: anewarray 5776	java/lang/Class
    //   9330: dup
    //   9331: iconst_0
    //   9332: ldc_w 1717
    //   9335: aastore
    //   9336: iconst_1
    //   9337: anewarray 1974	java/lang/String
    //   9340: dup
    //   9341: iconst_0
    //   9342: ldc_w 6400
    //   9345: aastore
    //   9346: aconst_null
    //   9347: aconst_null
    //   9348: aconst_null
    //   9349: ldc_w 6402
    //   9352: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9355: astore -19
    //   9357: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9360: dup
    //   9361: aload_0
    //   9362: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9365: iconst_0
    //   9366: iconst_1
    //   9367: anewarray 5776	java/lang/Class
    //   9370: dup
    //   9371: iconst_0
    //   9372: ldc_w 1717
    //   9375: aastore
    //   9376: iconst_1
    //   9377: anewarray 1974	java/lang/String
    //   9380: dup
    //   9381: iconst_0
    //   9382: ldc_w 6404
    //   9385: aastore
    //   9386: aconst_null
    //   9387: aconst_null
    //   9388: aconst_null
    //   9389: ldc_w 6402
    //   9392: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9395: astore -18
    //   9397: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9400: dup
    //   9401: aload_0
    //   9402: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9405: iconst_0
    //   9406: iconst_1
    //   9407: anewarray 5776	java/lang/Class
    //   9410: dup
    //   9411: iconst_0
    //   9412: ldc_w 1717
    //   9415: aastore
    //   9416: iconst_1
    //   9417: anewarray 1974	java/lang/String
    //   9420: dup
    //   9421: iconst_0
    //   9422: ldc_w 6406
    //   9425: aastore
    //   9426: aconst_null
    //   9427: aconst_null
    //   9428: aconst_null
    //   9429: ldc_w 6402
    //   9432: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9435: astore -17
    //   9437: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9440: dup
    //   9441: aload_0
    //   9442: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9445: iconst_0
    //   9446: iconst_1
    //   9447: anewarray 5776	java/lang/Class
    //   9450: dup
    //   9451: iconst_0
    //   9452: ldc_w 1717
    //   9455: aastore
    //   9456: iconst_1
    //   9457: anewarray 1974	java/lang/String
    //   9460: dup
    //   9461: iconst_0
    //   9462: ldc_w 6408
    //   9465: aastore
    //   9466: aconst_null
    //   9467: aconst_null
    //   9468: aconst_null
    //   9469: ldc_w 6410
    //   9472: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9475: astore -16
    //   9477: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9480: dup
    //   9481: aload_0
    //   9482: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9485: iconst_0
    //   9486: iconst_1
    //   9487: anewarray 5776	java/lang/Class
    //   9490: dup
    //   9491: iconst_0
    //   9492: ldc_w 1717
    //   9495: aastore
    //   9496: iconst_1
    //   9497: anewarray 1974	java/lang/String
    //   9500: dup
    //   9501: iconst_0
    //   9502: ldc_w 6412
    //   9505: aastore
    //   9506: aconst_null
    //   9507: aconst_null
    //   9508: aconst_null
    //   9509: ldc_w 6414
    //   9512: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9515: astore -15
    //   9517: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9520: dup
    //   9521: aload_0
    //   9522: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9525: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9528: iconst_1
    //   9529: anewarray 5776	java/lang/Class
    //   9532: dup
    //   9533: iconst_0
    //   9534: ldc_w 1717
    //   9537: aastore
    //   9538: iconst_1
    //   9539: anewarray 1974	java/lang/String
    //   9542: dup
    //   9543: iconst_0
    //   9544: ldc_w 6416
    //   9547: aastore
    //   9548: aconst_null
    //   9549: aconst_null
    //   9550: aconst_null
    //   9551: ldc_w 6418
    //   9554: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9557: astore -14
    //   9559: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9562: dup
    //   9563: aload_0
    //   9564: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9567: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   9570: iconst_1
    //   9571: anewarray 5776	java/lang/Class
    //   9574: dup
    //   9575: iconst_0
    //   9576: ldc_w 1717
    //   9579: aastore
    //   9580: iconst_1
    //   9581: anewarray 1974	java/lang/String
    //   9584: dup
    //   9585: iconst_0
    //   9586: ldc_w 6420
    //   9589: aastore
    //   9590: aconst_null
    //   9591: aconst_null
    //   9592: aconst_null
    //   9593: ldc_w 6422
    //   9596: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9599: astore -13
    //   9601: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9604: dup
    //   9605: aload_0
    //   9606: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9609: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9612: iconst_1
    //   9613: anewarray 5776	java/lang/Class
    //   9616: dup
    //   9617: iconst_0
    //   9618: ldc_w 1717
    //   9621: aastore
    //   9622: iconst_1
    //   9623: anewarray 1974	java/lang/String
    //   9626: dup
    //   9627: iconst_0
    //   9628: ldc_w 6424
    //   9631: aastore
    //   9632: aconst_null
    //   9633: aconst_null
    //   9634: aconst_null
    //   9635: ldc_w 6426
    //   9638: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9641: astore -12
    //   9643: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9646: dup
    //   9647: aload_0
    //   9648: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9651: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9654: iconst_1
    //   9655: anewarray 5776	java/lang/Class
    //   9658: dup
    //   9659: iconst_0
    //   9660: ldc_w 1717
    //   9663: aastore
    //   9664: iconst_1
    //   9665: anewarray 1974	java/lang/String
    //   9668: dup
    //   9669: iconst_0
    //   9670: ldc_w 6428
    //   9673: aastore
    //   9674: aconst_null
    //   9675: aconst_null
    //   9676: aconst_null
    //   9677: ldc_w 6342
    //   9680: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9683: astore -11
    //   9685: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9688: dup
    //   9689: aload_0
    //   9690: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9693: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9696: iconst_1
    //   9697: anewarray 5776	java/lang/Class
    //   9700: dup
    //   9701: iconst_0
    //   9702: ldc_w 1717
    //   9705: aastore
    //   9706: iconst_1
    //   9707: anewarray 1974	java/lang/String
    //   9710: dup
    //   9711: iconst_0
    //   9712: ldc_w 6430
    //   9715: aastore
    //   9716: aconst_null
    //   9717: aconst_null
    //   9718: aconst_null
    //   9719: ldc_w 6432
    //   9722: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9725: astore -10
    //   9727: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9730: dup
    //   9731: aload_0
    //   9732: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9735: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   9738: iconst_1
    //   9739: anewarray 5776	java/lang/Class
    //   9742: dup
    //   9743: iconst_0
    //   9744: ldc_w 1717
    //   9747: aastore
    //   9748: iconst_1
    //   9749: anewarray 1974	java/lang/String
    //   9752: dup
    //   9753: iconst_0
    //   9754: ldc_w 6434
    //   9757: aastore
    //   9758: aconst_null
    //   9759: aconst_null
    //   9760: aconst_null
    //   9761: ldc_w 6342
    //   9764: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9767: astore -9
    //   9769: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9772: dup
    //   9773: aload_0
    //   9774: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9777: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   9780: iconst_1
    //   9781: anewarray 5776	java/lang/Class
    //   9784: dup
    //   9785: iconst_0
    //   9786: ldc_w 1717
    //   9789: aastore
    //   9790: iconst_1
    //   9791: anewarray 1974	java/lang/String
    //   9794: dup
    //   9795: iconst_0
    //   9796: ldc_w 6436
    //   9799: aastore
    //   9800: aconst_null
    //   9801: aconst_null
    //   9802: aconst_null
    //   9803: ldc_w 6438
    //   9806: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9809: astore -8
    //   9811: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9814: dup
    //   9815: aload_0
    //   9816: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9819: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9822: iconst_1
    //   9823: anewarray 5776	java/lang/Class
    //   9826: dup
    //   9827: iconst_0
    //   9828: ldc_w 1717
    //   9831: aastore
    //   9832: iconst_1
    //   9833: anewarray 1974	java/lang/String
    //   9836: dup
    //   9837: iconst_0
    //   9838: ldc_w 6440
    //   9841: aastore
    //   9842: aconst_null
    //   9843: aconst_null
    //   9844: aconst_null
    //   9845: ldc_w 6432
    //   9848: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9851: astore -7
    //   9853: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9856: dup
    //   9857: aload_0
    //   9858: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9861: iconst_0
    //   9862: iconst_1
    //   9863: anewarray 5776	java/lang/Class
    //   9866: dup
    //   9867: iconst_0
    //   9868: ldc_w 1717
    //   9871: aastore
    //   9872: iconst_1
    //   9873: anewarray 1974	java/lang/String
    //   9876: dup
    //   9877: iconst_0
    //   9878: ldc_w 6442
    //   9881: aastore
    //   9882: aconst_null
    //   9883: aconst_null
    //   9884: aconst_null
    //   9885: ldc_w 6444
    //   9888: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9891: astore -6
    //   9893: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9896: dup
    //   9897: aload_0
    //   9898: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9901: iconst_0
    //   9902: iconst_1
    //   9903: anewarray 5776	java/lang/Class
    //   9906: dup
    //   9907: iconst_0
    //   9908: ldc_w 1717
    //   9911: aastore
    //   9912: iconst_1
    //   9913: anewarray 1974	java/lang/String
    //   9916: dup
    //   9917: iconst_0
    //   9918: ldc_w 6442
    //   9921: aastore
    //   9922: aconst_null
    //   9923: aconst_null
    //   9924: aconst_null
    //   9925: ldc_w 6446
    //   9928: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9931: astore -5
    //   9933: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9936: dup
    //   9937: aload_0
    //   9938: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9941: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   9944: iconst_1
    //   9945: anewarray 5776	java/lang/Class
    //   9948: dup
    //   9949: iconst_0
    //   9950: ldc_w 1717
    //   9953: aastore
    //   9954: iconst_1
    //   9955: anewarray 1974	java/lang/String
    //   9958: dup
    //   9959: iconst_0
    //   9960: ldc_w 6448
    //   9963: aastore
    //   9964: aconst_null
    //   9965: aconst_null
    //   9966: aconst_null
    //   9967: ldc_w 6450
    //   9970: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   9973: astore -4
    //   9975: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   9978: dup
    //   9979: aload_0
    //   9980: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   9983: iconst_0
    //   9984: iconst_1
    //   9985: anewarray 5776	java/lang/Class
    //   9988: dup
    //   9989: iconst_0
    //   9990: ldc_w 1717
    //   9993: aastore
    //   9994: iconst_1
    //   9995: anewarray 1974	java/lang/String
    //   9998: dup
    //   9999: iconst_0
    //   10000: ldc_w 6452
    //   10003: aastore
    //   10004: aconst_null
    //   10005: aconst_null
    //   10006: aconst_null
    //   10007: ldc_w 6454
    //   10010: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10013: astore -3
    //   10015: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10018: dup
    //   10019: aload_0
    //   10020: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10023: iconst_0
    //   10024: iconst_1
    //   10025: anewarray 5776	java/lang/Class
    //   10028: dup
    //   10029: iconst_0
    //   10030: ldc_w 1717
    //   10033: aastore
    //   10034: iconst_1
    //   10035: anewarray 1974	java/lang/String
    //   10038: dup
    //   10039: iconst_0
    //   10040: ldc_w 6456
    //   10043: aastore
    //   10044: aconst_null
    //   10045: aconst_null
    //   10046: aconst_null
    //   10047: ldc_w 6458
    //   10050: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10053: astore -2
    //   10055: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10058: dup
    //   10059: aload_0
    //   10060: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10063: iconst_0
    //   10064: iconst_1
    //   10065: anewarray 5776	java/lang/Class
    //   10068: dup
    //   10069: iconst_0
    //   10070: ldc_w 1717
    //   10073: aastore
    //   10074: iconst_1
    //   10075: anewarray 1974	java/lang/String
    //   10078: dup
    //   10079: iconst_0
    //   10080: ldc_w 6460
    //   10083: aastore
    //   10084: aconst_null
    //   10085: aconst_null
    //   10086: aconst_null
    //   10087: ldc_w 6462
    //   10090: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10093: astore -1
    //   10095: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10098: dup
    //   10099: aload_0
    //   10100: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10103: iconst_0
    //   10104: iconst_1
    //   10105: anewarray 5776	java/lang/Class
    //   10108: dup
    //   10109: iconst_0
    //   10110: ldc_w 1717
    //   10113: aastore
    //   10114: iconst_1
    //   10115: anewarray 1974	java/lang/String
    //   10118: dup
    //   10119: iconst_0
    //   10120: ldc_w 6464
    //   10123: aastore
    //   10124: aconst_null
    //   10125: aconst_null
    //   10126: aconst_null
    //   10127: ldc_w 6466
    //   10130: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10133: wide
    //   10137: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10140: dup
    //   10141: aload_0
    //   10142: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10145: iconst_0
    //   10146: iconst_1
    //   10147: anewarray 5776	java/lang/Class
    //   10150: dup
    //   10151: iconst_0
    //   10152: ldc_w 1717
    //   10155: aastore
    //   10156: iconst_1
    //   10157: anewarray 1974	java/lang/String
    //   10160: dup
    //   10161: iconst_0
    //   10162: ldc_w 6464
    //   10165: aastore
    //   10166: aconst_null
    //   10167: aconst_null
    //   10168: aconst_null
    //   10169: ldc_w 6468
    //   10172: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10175: wide
    //   10179: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10182: dup
    //   10183: aload_0
    //   10184: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10187: iconst_0
    //   10188: iconst_1
    //   10189: anewarray 5776	java/lang/Class
    //   10192: dup
    //   10193: iconst_0
    //   10194: ldc_w 1717
    //   10197: aastore
    //   10198: iconst_1
    //   10199: anewarray 1974	java/lang/String
    //   10202: dup
    //   10203: iconst_0
    //   10204: ldc_w 6470
    //   10207: aastore
    //   10208: aconst_null
    //   10209: aconst_null
    //   10210: aconst_null
    //   10211: ldc_w 6472
    //   10214: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10217: wide
    //   10221: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10224: dup
    //   10225: aload_0
    //   10226: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10229: iconst_0
    //   10230: iconst_1
    //   10231: anewarray 5776	java/lang/Class
    //   10234: dup
    //   10235: iconst_0
    //   10236: ldc_w 1717
    //   10239: aastore
    //   10240: iconst_1
    //   10241: anewarray 1974	java/lang/String
    //   10244: dup
    //   10245: iconst_0
    //   10246: ldc_w 6474
    //   10249: aastore
    //   10250: aconst_null
    //   10251: aconst_null
    //   10252: aconst_null
    //   10253: ldc_w 6472
    //   10256: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10259: wide
    //   10263: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10266: dup
    //   10267: aload_0
    //   10268: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10271: iconst_0
    //   10272: iconst_1
    //   10273: anewarray 5776	java/lang/Class
    //   10276: dup
    //   10277: iconst_0
    //   10278: ldc_w 1717
    //   10281: aastore
    //   10282: iconst_1
    //   10283: anewarray 1974	java/lang/String
    //   10286: dup
    //   10287: iconst_0
    //   10288: ldc_w 6476
    //   10291: aastore
    //   10292: aconst_null
    //   10293: aconst_null
    //   10294: aconst_null
    //   10295: ldc_w 6478
    //   10298: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10301: wide
    //   10305: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10308: dup
    //   10309: aload_0
    //   10310: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10313: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   10316: iconst_1
    //   10317: anewarray 5776	java/lang/Class
    //   10320: dup
    //   10321: iconst_0
    //   10322: ldc_w 1717
    //   10325: aastore
    //   10326: iconst_1
    //   10327: anewarray 1974	java/lang/String
    //   10330: dup
    //   10331: iconst_0
    //   10332: ldc_w 6470
    //   10335: aastore
    //   10336: aconst_null
    //   10337: aconst_null
    //   10338: aconst_null
    //   10339: ldc_w 6483
    //   10342: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10345: wide
    //   10349: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10352: dup
    //   10353: aload_0
    //   10354: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10357: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   10360: iconst_1
    //   10361: anewarray 5776	java/lang/Class
    //   10364: dup
    //   10365: iconst_0
    //   10366: ldc_w 1717
    //   10369: aastore
    //   10370: iconst_1
    //   10371: anewarray 1974	java/lang/String
    //   10374: dup
    //   10375: iconst_0
    //   10376: ldc_w 6474
    //   10379: aastore
    //   10380: aconst_null
    //   10381: aconst_null
    //   10382: aconst_null
    //   10383: ldc_w 6483
    //   10386: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10389: wide
    //   10393: aload_0
    //   10394: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10397: ifnull +5090 -> 15487
    //   10400: aload_0
    //   10401: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10404: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10407: astore_2
    //   10408: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10411: dup
    //   10412: aload_2
    //   10413: iconst_0
    //   10414: iconst_1
    //   10415: anewarray 5776	java/lang/Class
    //   10418: dup
    //   10419: iconst_0
    //   10420: ldc_w 6489
    //   10423: aastore
    //   10424: aconst_null
    //   10425: aconst_null
    //   10426: aconst_null
    //   10427: aload 72
    //   10429: ldc_w 6491
    //   10432: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10435: wide
    //   10439: aload_0
    //   10440: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10443: ifnull +5052 -> 15495
    //   10446: aload_0
    //   10447: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10450: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10453: astore_2
    //   10454: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10457: dup
    //   10458: aload_2
    //   10459: iconst_0
    //   10460: iconst_1
    //   10461: anewarray 5776	java/lang/Class
    //   10464: dup
    //   10465: iconst_0
    //   10466: ldc_w 6489
    //   10469: aastore
    //   10470: aconst_null
    //   10471: aconst_null
    //   10472: aconst_null
    //   10473: aload 72
    //   10475: ldc_w 6493
    //   10478: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10481: wide
    //   10485: aload_0
    //   10486: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10489: ifnull +5014 -> 15503
    //   10492: aload_0
    //   10493: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10496: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10499: astore_2
    //   10500: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10503: dup
    //   10504: aload_2
    //   10505: iconst_0
    //   10506: iconst_1
    //   10507: anewarray 5776	java/lang/Class
    //   10510: dup
    //   10511: iconst_0
    //   10512: ldc_w 6489
    //   10515: aastore
    //   10516: aconst_null
    //   10517: aconst_null
    //   10518: aconst_null
    //   10519: aload 72
    //   10521: ldc_w 6495
    //   10524: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10527: wide
    //   10531: aload_0
    //   10532: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10535: ifnull +4976 -> 15511
    //   10538: aload_0
    //   10539: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10542: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10545: astore_2
    //   10546: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10549: dup
    //   10550: aload_2
    //   10551: iconst_0
    //   10552: iconst_1
    //   10553: anewarray 5776	java/lang/Class
    //   10556: dup
    //   10557: iconst_0
    //   10558: ldc_w 6489
    //   10561: aastore
    //   10562: aconst_null
    //   10563: aconst_null
    //   10564: aconst_null
    //   10565: aload 72
    //   10567: ldc_w 6497
    //   10570: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10573: wide
    //   10577: aload_0
    //   10578: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10581: ifnull +4938 -> 15519
    //   10584: aload_0
    //   10585: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10588: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10591: astore_2
    //   10592: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10595: dup
    //   10596: aload_2
    //   10597: iconst_0
    //   10598: iconst_1
    //   10599: anewarray 5776	java/lang/Class
    //   10602: dup
    //   10603: iconst_0
    //   10604: ldc_w 6489
    //   10607: aastore
    //   10608: aconst_null
    //   10609: aconst_null
    //   10610: aconst_null
    //   10611: aload 72
    //   10613: ldc_w 6499
    //   10616: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10619: wide
    //   10623: aload_0
    //   10624: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10627: ifnull +4900 -> 15527
    //   10630: aload_0
    //   10631: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10634: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10637: astore_2
    //   10638: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10641: dup
    //   10642: aload_2
    //   10643: iconst_0
    //   10644: iconst_1
    //   10645: anewarray 5776	java/lang/Class
    //   10648: dup
    //   10649: iconst_0
    //   10650: ldc_w 6489
    //   10653: aastore
    //   10654: aconst_null
    //   10655: aconst_null
    //   10656: aconst_null
    //   10657: aload 72
    //   10659: ldc_w 6501
    //   10662: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10665: wide
    //   10669: aload_0
    //   10670: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10673: ifnull +4862 -> 15535
    //   10676: aload_0
    //   10677: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10680: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10683: astore_2
    //   10684: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10687: dup
    //   10688: aload_2
    //   10689: iconst_0
    //   10690: iconst_1
    //   10691: anewarray 5776	java/lang/Class
    //   10694: dup
    //   10695: iconst_0
    //   10696: ldc_w 6489
    //   10699: aastore
    //   10700: aconst_null
    //   10701: aconst_null
    //   10702: aconst_null
    //   10703: aload 72
    //   10705: ldc_w 6503
    //   10708: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10711: wide
    //   10715: aload_0
    //   10716: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10719: ifnull +4824 -> 15543
    //   10722: aload_0
    //   10723: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10726: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10729: astore_2
    //   10730: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10733: dup
    //   10734: aload_2
    //   10735: iconst_0
    //   10736: iconst_1
    //   10737: anewarray 5776	java/lang/Class
    //   10740: dup
    //   10741: iconst_0
    //   10742: ldc_w 6489
    //   10745: aastore
    //   10746: aconst_null
    //   10747: aconst_null
    //   10748: aconst_null
    //   10749: aload 72
    //   10751: ldc_w 6505
    //   10754: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10757: wide
    //   10761: aload_0
    //   10762: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10765: ifnull +4786 -> 15551
    //   10768: aload_0
    //   10769: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10772: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10775: astore_2
    //   10776: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10779: dup
    //   10780: aload_2
    //   10781: iconst_0
    //   10782: iconst_1
    //   10783: anewarray 5776	java/lang/Class
    //   10786: dup
    //   10787: iconst_0
    //   10788: ldc_w 6489
    //   10791: aastore
    //   10792: aconst_null
    //   10793: aconst_null
    //   10794: aconst_null
    //   10795: aload 72
    //   10797: ldc_w 6507
    //   10800: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10803: wide
    //   10807: aload_0
    //   10808: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10811: ifnull +4748 -> 15559
    //   10814: aload_0
    //   10815: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   10818: invokevirtual 6487	org/telegram/ui/Components/ChatActivityEnterView:getEmojiView	()Lorg/telegram/ui/Components/EmojiView;
    //   10821: astore_2
    //   10822: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10825: dup
    //   10826: aload_2
    //   10827: iconst_0
    //   10828: iconst_1
    //   10829: anewarray 5776	java/lang/Class
    //   10832: dup
    //   10833: iconst_0
    //   10834: ldc_w 6489
    //   10837: aastore
    //   10838: aconst_null
    //   10839: aconst_null
    //   10840: aconst_null
    //   10841: aload 72
    //   10843: ldc_w 6509
    //   10846: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10849: astore 72
    //   10851: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10854: dup
    //   10855: aconst_null
    //   10856: iconst_0
    //   10857: aconst_null
    //   10858: aconst_null
    //   10859: aconst_null
    //   10860: aconst_null
    //   10861: ldc_w 6511
    //   10864: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10867: wide
    //   10871: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10874: dup
    //   10875: aconst_null
    //   10876: iconst_0
    //   10877: aconst_null
    //   10878: aconst_null
    //   10879: aconst_null
    //   10880: aconst_null
    //   10881: ldc_w 6513
    //   10884: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10887: wide
    //   10891: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10894: dup
    //   10895: aconst_null
    //   10896: iconst_0
    //   10897: aconst_null
    //   10898: aconst_null
    //   10899: aconst_null
    //   10900: aconst_null
    //   10901: ldc_w 6515
    //   10904: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10907: wide
    //   10911: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10914: dup
    //   10915: aload_0
    //   10916: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   10919: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   10922: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   10925: ior
    //   10926: iconst_1
    //   10927: anewarray 5776	java/lang/Class
    //   10930: dup
    //   10931: iconst_0
    //   10932: ldc_w 2958
    //   10935: aastore
    //   10936: iconst_1
    //   10937: anewarray 1974	java/lang/String
    //   10940: dup
    //   10941: iconst_0
    //   10942: ldc_w 6520
    //   10945: aastore
    //   10946: aconst_null
    //   10947: aconst_null
    //   10948: aconst_null
    //   10949: ldc_w 6522
    //   10952: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10955: wide
    //   10959: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   10962: dup
    //   10963: aload_0
    //   10964: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   10967: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   10970: iconst_1
    //   10971: anewarray 5776	java/lang/Class
    //   10974: dup
    //   10975: iconst_0
    //   10976: ldc_w 2958
    //   10979: aastore
    //   10980: iconst_1
    //   10981: anewarray 1974	java/lang/String
    //   10984: dup
    //   10985: iconst_0
    //   10986: ldc_w 6524
    //   10989: aastore
    //   10990: aconst_null
    //   10991: aconst_null
    //   10992: aconst_null
    //   10993: ldc_w 6526
    //   10996: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   10999: wide
    //   11003: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11006: dup
    //   11007: aload_0
    //   11008: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11011: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11014: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11017: ior
    //   11018: iconst_1
    //   11019: anewarray 5776	java/lang/Class
    //   11022: dup
    //   11023: iconst_0
    //   11024: ldc_w 2958
    //   11027: aastore
    //   11028: iconst_1
    //   11029: anewarray 1974	java/lang/String
    //   11032: dup
    //   11033: iconst_0
    //   11034: ldc_w 6528
    //   11037: aastore
    //   11038: aconst_null
    //   11039: aconst_null
    //   11040: aconst_null
    //   11041: ldc_w 6530
    //   11044: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11047: wide
    //   11051: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11054: dup
    //   11055: aload_0
    //   11056: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11059: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11062: getstatic 6533	org/telegram/ui/ActionBar/ThemeDescription:FLAG_FASTSCROLL	I
    //   11065: ior
    //   11066: iconst_1
    //   11067: anewarray 5776	java/lang/Class
    //   11070: dup
    //   11071: iconst_0
    //   11072: ldc_w 2958
    //   11075: aastore
    //   11076: iconst_1
    //   11077: anewarray 1974	java/lang/String
    //   11080: dup
    //   11081: iconst_0
    //   11082: ldc_w 6528
    //   11085: aastore
    //   11086: aconst_null
    //   11087: aconst_null
    //   11088: aconst_null
    //   11089: ldc_w 6535
    //   11092: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11095: wide
    //   11099: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11102: dup
    //   11103: aload_0
    //   11104: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11107: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11110: iconst_1
    //   11111: anewarray 5776	java/lang/Class
    //   11114: dup
    //   11115: iconst_0
    //   11116: ldc_w 2958
    //   11119: aastore
    //   11120: iconst_1
    //   11121: anewarray 1974	java/lang/String
    //   11124: dup
    //   11125: iconst_0
    //   11126: ldc_w 6537
    //   11129: aastore
    //   11130: aconst_null
    //   11131: aconst_null
    //   11132: aconst_null
    //   11133: ldc_w 6539
    //   11136: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11139: wide
    //   11143: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11146: dup
    //   11147: aload_0
    //   11148: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11151: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11154: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11157: ior
    //   11158: iconst_1
    //   11159: anewarray 5776	java/lang/Class
    //   11162: dup
    //   11163: iconst_0
    //   11164: ldc_w 2958
    //   11167: aastore
    //   11168: iconst_1
    //   11169: anewarray 1974	java/lang/String
    //   11172: dup
    //   11173: iconst_0
    //   11174: ldc_w 6520
    //   11177: aastore
    //   11178: aconst_null
    //   11179: aconst_null
    //   11180: aconst_null
    //   11181: ldc_w 6541
    //   11184: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11187: wide
    //   11191: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11194: dup
    //   11195: aload_0
    //   11196: getfield 833	org/telegram/ui/ChatActivity:fragmentView	Landroid/view/View;
    //   11199: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11202: getstatic 6518	org/telegram/ui/ActionBar/ThemeDescription:FLAG_CHECKTAG	I
    //   11205: ior
    //   11206: iconst_1
    //   11207: anewarray 5776	java/lang/Class
    //   11210: dup
    //   11211: iconst_0
    //   11212: ldc_w 2958
    //   11215: aastore
    //   11216: iconst_1
    //   11217: anewarray 1974	java/lang/String
    //   11220: dup
    //   11221: iconst_0
    //   11222: ldc_w 6528
    //   11225: aastore
    //   11226: aconst_null
    //   11227: aconst_null
    //   11228: aconst_null
    //   11229: ldc_w 6543
    //   11232: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11235: wide
    //   11239: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11242: dup
    //   11243: aload_0
    //   11244: getfield 4661	org/telegram/ui/ChatActivity:pinnedLineView	Landroid/view/View;
    //   11247: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11250: aconst_null
    //   11251: aconst_null
    //   11252: aconst_null
    //   11253: aconst_null
    //   11254: ldc_w 4663
    //   11257: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11260: wide
    //   11264: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11267: dup
    //   11268: aload_0
    //   11269: getfield 4130	org/telegram/ui/ChatActivity:pinnedMessageNameTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11272: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11275: aconst_null
    //   11276: aconst_null
    //   11277: aconst_null
    //   11278: aconst_null
    //   11279: ldc_w 4669
    //   11282: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11285: wide
    //   11289: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11292: dup
    //   11293: aload_0
    //   11294: getfield 4133	org/telegram/ui/ChatActivity:pinnedMessageTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11297: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11300: aconst_null
    //   11301: aconst_null
    //   11302: aconst_null
    //   11303: aconst_null
    //   11304: ldc_w 4672
    //   11307: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11310: wide
    //   11314: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11317: dup
    //   11318: aload_0
    //   11319: getfield 4725	org/telegram/ui/ChatActivity:alertNameTextView	Landroid/widget/TextView;
    //   11322: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11325: aconst_null
    //   11326: aconst_null
    //   11327: aconst_null
    //   11328: aconst_null
    //   11329: ldc_w 4669
    //   11332: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11335: wide
    //   11339: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11342: dup
    //   11343: aload_0
    //   11344: getfield 4737	org/telegram/ui/ChatActivity:alertTextView	Landroid/widget/TextView;
    //   11347: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11350: aconst_null
    //   11351: aconst_null
    //   11352: aconst_null
    //   11353: aconst_null
    //   11354: ldc_w 4672
    //   11357: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11360: wide
    //   11364: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11367: dup
    //   11368: aload_0
    //   11369: getfield 4676	org/telegram/ui/ChatActivity:closePinned	Landroid/widget/ImageView;
    //   11372: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11375: aconst_null
    //   11376: aconst_null
    //   11377: aconst_null
    //   11378: aconst_null
    //   11379: ldc_w 4682
    //   11382: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11385: wide
    //   11389: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11392: dup
    //   11393: aload_0
    //   11394: getfield 4722	org/telegram/ui/ChatActivity:closeReportSpam	Landroid/widget/ImageView;
    //   11397: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11400: aconst_null
    //   11401: aconst_null
    //   11402: aconst_null
    //   11403: aconst_null
    //   11404: ldc_w 4682
    //   11407: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11410: wide
    //   11414: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11417: dup
    //   11418: aload_0
    //   11419: getfield 1090	org/telegram/ui/ChatActivity:reportSpamView	Landroid/widget/LinearLayout;
    //   11422: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11425: aconst_null
    //   11426: aconst_null
    //   11427: aconst_null
    //   11428: aconst_null
    //   11429: ldc_w 4651
    //   11432: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11435: wide
    //   11439: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11442: dup
    //   11443: aload_0
    //   11444: getfield 1229	org/telegram/ui/ChatActivity:alertView	Landroid/widget/FrameLayout;
    //   11447: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11450: aconst_null
    //   11451: aconst_null
    //   11452: aconst_null
    //   11453: aconst_null
    //   11454: ldc_w 4651
    //   11457: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11460: wide
    //   11464: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11467: dup
    //   11468: aload_0
    //   11469: getfield 775	org/telegram/ui/ChatActivity:pinnedMessageView	Landroid/widget/FrameLayout;
    //   11472: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11475: aconst_null
    //   11476: aconst_null
    //   11477: aconst_null
    //   11478: aconst_null
    //   11479: ldc_w 4651
    //   11482: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11485: wide
    //   11489: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11492: dup
    //   11493: aload_0
    //   11494: getfield 4021	org/telegram/ui/ChatActivity:addToContactsButton	Landroid/widget/TextView;
    //   11497: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11500: aconst_null
    //   11501: aconst_null
    //   11502: aconst_null
    //   11503: aconst_null
    //   11504: ldc_w 4701
    //   11507: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11510: wide
    //   11514: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11517: dup
    //   11518: aload_0
    //   11519: getfield 4019	org/telegram/ui/ChatActivity:reportSpamButton	Landroid/widget/TextView;
    //   11522: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11525: aconst_null
    //   11526: aconst_null
    //   11527: aconst_null
    //   11528: aconst_null
    //   11529: ldc_w 4716
    //   11532: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11535: wide
    //   11539: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11542: dup
    //   11543: aload_0
    //   11544: getfield 4880	org/telegram/ui/ChatActivity:replyLineView	Landroid/view/View;
    //   11547: getstatic 5685	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUND	I
    //   11550: aconst_null
    //   11551: aconst_null
    //   11552: aconst_null
    //   11553: aconst_null
    //   11554: ldc_w 4882
    //   11557: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11560: wide
    //   11564: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11567: dup
    //   11568: aload_0
    //   11569: getfield 4895	org/telegram/ui/ChatActivity:replyNameTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11572: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11575: aconst_null
    //   11576: aconst_null
    //   11577: aconst_null
    //   11578: aconst_null
    //   11579: ldc_w 4897
    //   11582: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11585: wide
    //   11589: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11592: dup
    //   11593: aload_0
    //   11594: getfield 4900	org/telegram/ui/ChatActivity:replyObjectTextView	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11597: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11600: aconst_null
    //   11601: aconst_null
    //   11602: aconst_null
    //   11603: aconst_null
    //   11604: ldc_w 4902
    //   11607: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11610: wide
    //   11614: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11617: dup
    //   11618: aload_0
    //   11619: getfield 4884	org/telegram/ui/ChatActivity:replyIconImageView	Landroid/widget/ImageView;
    //   11622: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11625: aconst_null
    //   11626: aconst_null
    //   11627: aconst_null
    //   11628: aconst_null
    //   11629: ldc_w 4886
    //   11632: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11635: wide
    //   11639: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11642: dup
    //   11643: aload_0
    //   11644: getfield 4888	org/telegram/ui/ChatActivity:replyCloseImageView	Landroid/widget/ImageView;
    //   11647: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11650: aconst_null
    //   11651: aconst_null
    //   11652: aconst_null
    //   11653: aconst_null
    //   11654: ldc_w 4890
    //   11657: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11660: wide
    //   11664: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11667: dup
    //   11668: aload_0
    //   11669: getfield 4226	org/telegram/ui/ChatActivity:searchUpButton	Landroid/widget/ImageView;
    //   11672: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11675: aconst_null
    //   11676: aconst_null
    //   11677: aconst_null
    //   11678: aconst_null
    //   11679: ldc_w 4941
    //   11682: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11685: wide
    //   11689: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11692: dup
    //   11693: aload_0
    //   11694: getfield 4233	org/telegram/ui/ChatActivity:searchDownButton	Landroid/widget/ImageView;
    //   11697: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11700: aconst_null
    //   11701: aconst_null
    //   11702: aconst_null
    //   11703: aconst_null
    //   11704: ldc_w 4941
    //   11707: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11710: wide
    //   11714: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11717: dup
    //   11718: aload_0
    //   11719: getfield 1395	org/telegram/ui/ChatActivity:searchCalendarButton	Landroid/widget/ImageView;
    //   11722: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11725: aconst_null
    //   11726: aconst_null
    //   11727: aconst_null
    //   11728: aconst_null
    //   11729: ldc_w 4941
    //   11732: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11735: wide
    //   11739: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11742: dup
    //   11743: aload_0
    //   11744: getfield 1398	org/telegram/ui/ChatActivity:searchUserButton	Landroid/widget/ImageView;
    //   11747: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11750: aconst_null
    //   11751: aconst_null
    //   11752: aconst_null
    //   11753: aconst_null
    //   11754: ldc_w 4941
    //   11757: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11760: wide
    //   11764: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11767: dup
    //   11768: aload_0
    //   11769: getfield 4239	org/telegram/ui/ChatActivity:searchCountText	Lorg/telegram/ui/ActionBar/SimpleTextView;
    //   11772: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11775: aconst_null
    //   11776: aconst_null
    //   11777: aconst_null
    //   11778: aconst_null
    //   11779: ldc_w 4950
    //   11782: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11785: wide
    //   11789: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11792: dup
    //   11793: aload_0
    //   11794: getfield 4251	org/telegram/ui/ChatActivity:bottomOverlayText	Landroid/widget/TextView;
    //   11797: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11800: aconst_null
    //   11801: aconst_null
    //   11802: aconst_null
    //   11803: aconst_null
    //   11804: ldc_w 4958
    //   11807: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11810: wide
    //   11814: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11817: dup
    //   11818: aload_0
    //   11819: getfield 3939	org/telegram/ui/ChatActivity:bottomOverlayChatText	Landroid/widget/TextView;
    //   11822: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11825: aconst_null
    //   11826: aconst_null
    //   11827: aconst_null
    //   11828: aconst_null
    //   11829: ldc_w 4963
    //   11832: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11835: wide
    //   11839: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11842: dup
    //   11843: aload_0
    //   11844: getfield 4259	org/telegram/ui/ChatActivity:bigEmptyView	Lorg/telegram/ui/Components/ChatBigEmptyView;
    //   11847: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11850: aconst_null
    //   11851: aconst_null
    //   11852: aconst_null
    //   11853: aconst_null
    //   11854: ldc_w 4638
    //   11857: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11860: wide
    //   11864: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11867: dup
    //   11868: aload_0
    //   11869: getfield 4992	org/telegram/ui/ChatActivity:emptyView	Landroid/widget/TextView;
    //   11872: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   11875: aconst_null
    //   11876: aconst_null
    //   11877: aconst_null
    //   11878: aconst_null
    //   11879: ldc_w 4638
    //   11882: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11885: wide
    //   11889: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11892: dup
    //   11893: aload_0
    //   11894: getfield 4632	org/telegram/ui/ChatActivity:progressBar	Lorg/telegram/ui/Components/RadialProgressView;
    //   11897: getstatic 6546	org/telegram/ui/ActionBar/ThemeDescription:FLAG_PROGRESSBAR	I
    //   11900: aconst_null
    //   11901: aconst_null
    //   11902: aconst_null
    //   11903: aconst_null
    //   11904: ldc_w 4638
    //   11907: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11910: wide
    //   11914: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11917: dup
    //   11918: aload_0
    //   11919: getfield 4924	org/telegram/ui/ChatActivity:stickersPanelArrow	Landroid/widget/ImageView;
    //   11922: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   11925: aconst_null
    //   11926: aconst_null
    //   11927: aconst_null
    //   11928: aconst_null
    //   11929: ldc_w 4927
    //   11932: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11935: wide
    //   11939: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11942: dup
    //   11943: aload_0
    //   11944: getfield 1081	org/telegram/ui/ChatActivity:stickersListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   11947: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   11950: iconst_1
    //   11951: anewarray 5776	java/lang/Class
    //   11954: dup
    //   11955: iconst_0
    //   11956: ldc_w 6548
    //   11959: aastore
    //   11960: aconst_null
    //   11961: aconst_null
    //   11962: aconst_null
    //   11963: ldc_w 4927
    //   11966: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   11969: wide
    //   11973: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   11976: dup
    //   11977: aload_0
    //   11978: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   11981: getstatic 6551	org/telegram/ui/ActionBar/ThemeDescription:FLAG_USEBACKGROUNDDRAWABLE	I
    //   11984: iconst_1
    //   11985: anewarray 5776	java/lang/Class
    //   11988: dup
    //   11989: iconst_0
    //   11990: ldc_w 6553
    //   11993: aastore
    //   11994: iconst_1
    //   11995: anewarray 1974	java/lang/String
    //   11998: dup
    //   11999: iconst_0
    //   12000: ldc_w 6555
    //   12003: aastore
    //   12004: aconst_null
    //   12005: aconst_null
    //   12006: aconst_null
    //   12007: ldc_w 6557
    //   12010: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12013: wide
    //   12017: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12020: dup
    //   12021: aload_0
    //   12022: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12025: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   12028: iconst_1
    //   12029: anewarray 5776	java/lang/Class
    //   12032: dup
    //   12033: iconst_0
    //   12034: ldc_w 6553
    //   12037: aastore
    //   12038: iconst_1
    //   12039: anewarray 1974	java/lang/String
    //   12042: dup
    //   12043: iconst_0
    //   12044: ldc_w 6559
    //   12047: aastore
    //   12048: aconst_null
    //   12049: aconst_null
    //   12050: aconst_null
    //   12051: ldc_w 6561
    //   12054: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12057: wide
    //   12061: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12064: dup
    //   12065: aload_0
    //   12066: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12069: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12072: iconst_1
    //   12073: anewarray 5776	java/lang/Class
    //   12076: dup
    //   12077: iconst_0
    //   12078: ldc_w 6553
    //   12081: aastore
    //   12082: iconst_1
    //   12083: anewarray 1974	java/lang/String
    //   12086: dup
    //   12087: iconst_0
    //   12088: ldc_w 6563
    //   12091: aastore
    //   12092: aconst_null
    //   12093: aconst_null
    //   12094: aconst_null
    //   12095: ldc_w 6565
    //   12098: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12101: wide
    //   12105: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12108: dup
    //   12109: aload_0
    //   12110: getfield 4615	org/telegram/ui/ChatActivity:progressView2	Landroid/view/View;
    //   12113: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12116: aconst_null
    //   12117: aconst_null
    //   12118: aconst_null
    //   12119: aconst_null
    //   12120: ldc_w 5884
    //   12123: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12126: wide
    //   12130: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12133: dup
    //   12134: aload_0
    //   12135: getfield 4992	org/telegram/ui/ChatActivity:emptyView	Landroid/widget/TextView;
    //   12138: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12141: aconst_null
    //   12142: aconst_null
    //   12143: aconst_null
    //   12144: aconst_null
    //   12145: ldc_w 5884
    //   12148: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12151: wide
    //   12155: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12158: dup
    //   12159: aload_0
    //   12160: getfield 4259	org/telegram/ui/ChatActivity:bigEmptyView	Lorg/telegram/ui/Components/ChatBigEmptyView;
    //   12163: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12166: aconst_null
    //   12167: aconst_null
    //   12168: aconst_null
    //   12169: aconst_null
    //   12170: ldc_w 5884
    //   12173: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12176: wide
    //   12180: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12183: dup
    //   12184: aload_0
    //   12185: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12188: getstatic 6568	org/telegram/ui/ActionBar/ThemeDescription:FLAG_SERVICEBACKGROUND	I
    //   12191: iconst_1
    //   12192: anewarray 5776	java/lang/Class
    //   12195: dup
    //   12196: iconst_0
    //   12197: ldc_w 6570
    //   12200: aastore
    //   12201: iconst_1
    //   12202: anewarray 1974	java/lang/String
    //   12205: dup
    //   12206: iconst_0
    //   12207: ldc_w 6563
    //   12210: aastore
    //   12211: aconst_null
    //   12212: aconst_null
    //   12213: aconst_null
    //   12214: ldc_w 5884
    //   12217: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12220: wide
    //   12224: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12227: dup
    //   12228: aload_0
    //   12229: getfield 771	org/telegram/ui/ChatActivity:chatListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12232: getstatic 6546	org/telegram/ui/ActionBar/ThemeDescription:FLAG_PROGRESSBAR	I
    //   12235: iconst_1
    //   12236: anewarray 5776	java/lang/Class
    //   12239: dup
    //   12240: iconst_0
    //   12241: ldc_w 6570
    //   12244: aastore
    //   12245: iconst_1
    //   12246: anewarray 1974	java/lang/String
    //   12249: dup
    //   12250: iconst_0
    //   12251: ldc_w 6563
    //   12254: aastore
    //   12255: aconst_null
    //   12256: aconst_null
    //   12257: aconst_null
    //   12258: ldc_w 4638
    //   12261: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12264: wide
    //   12268: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12271: dup
    //   12272: aload_0
    //   12273: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12276: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12279: iconst_1
    //   12280: anewarray 5776	java/lang/Class
    //   12283: dup
    //   12284: iconst_0
    //   12285: ldc_w 6572
    //   12288: aastore
    //   12289: iconst_1
    //   12290: anewarray 1974	java/lang/String
    //   12293: dup
    //   12294: iconst_0
    //   12295: ldc_w 6563
    //   12298: aastore
    //   12299: aconst_null
    //   12300: aconst_null
    //   12301: aconst_null
    //   12302: ldc_w 6574
    //   12305: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12308: wide
    //   12312: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12315: dup
    //   12316: aload_0
    //   12317: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12320: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12323: iconst_1
    //   12324: anewarray 5776	java/lang/Class
    //   12327: dup
    //   12328: iconst_0
    //   12329: ldc_w 6576
    //   12332: aastore
    //   12333: iconst_1
    //   12334: anewarray 1974	java/lang/String
    //   12337: dup
    //   12338: iconst_0
    //   12339: ldc_w 6578
    //   12342: aastore
    //   12343: aconst_null
    //   12344: aconst_null
    //   12345: aconst_null
    //   12346: ldc_w 6580
    //   12349: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12352: wide
    //   12356: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12359: dup
    //   12360: aload_0
    //   12361: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12364: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12367: iconst_1
    //   12368: anewarray 5776	java/lang/Class
    //   12371: dup
    //   12372: iconst_0
    //   12373: ldc_w 6576
    //   12376: aastore
    //   12377: iconst_1
    //   12378: anewarray 1974	java/lang/String
    //   12381: dup
    //   12382: iconst_0
    //   12383: ldc_w 6582
    //   12386: aastore
    //   12387: aconst_null
    //   12388: aconst_null
    //   12389: aconst_null
    //   12390: ldc_w 6584
    //   12393: invokespecial 6352	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;[Ljava/lang/String;[Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12396: wide
    //   12400: aload_0
    //   12401: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12404: astore_2
    //   12405: getstatic 6587	org/telegram/ui/ActionBar/Theme:chat_inlineResultFile	Landroid/graphics/drawable/Drawable;
    //   12408: wide
    //   12412: getstatic 6590	org/telegram/ui/ActionBar/Theme:chat_inlineResultAudio	Landroid/graphics/drawable/Drawable;
    //   12415: wide
    //   12419: getstatic 6593	org/telegram/ui/ActionBar/Theme:chat_inlineResultLocation	Landroid/graphics/drawable/Drawable;
    //   12422: wide
    //   12426: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12429: dup
    //   12430: aload_2
    //   12431: iconst_0
    //   12432: iconst_1
    //   12433: anewarray 5776	java/lang/Class
    //   12436: dup
    //   12437: iconst_0
    //   12438: ldc_w 5443
    //   12441: aastore
    //   12442: aconst_null
    //   12443: iconst_3
    //   12444: anewarray 4185	android/graphics/drawable/Drawable
    //   12447: dup
    //   12448: iconst_0
    //   12449: wide
    //   12453: aastore
    //   12454: dup
    //   12455: iconst_1
    //   12456: wide
    //   12460: aastore
    //   12461: dup
    //   12462: iconst_2
    //   12463: wide
    //   12467: aastore
    //   12468: aconst_null
    //   12469: ldc_w 6595
    //   12472: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12475: wide
    //   12479: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12482: dup
    //   12483: aload_0
    //   12484: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12487: iconst_0
    //   12488: iconst_1
    //   12489: anewarray 5776	java/lang/Class
    //   12492: dup
    //   12493: iconst_0
    //   12494: ldc_w 5443
    //   12497: aastore
    //   12498: aconst_null
    //   12499: aconst_null
    //   12500: aconst_null
    //   12501: ldc_w 6597
    //   12504: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12507: wide
    //   12511: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12514: dup
    //   12515: aload_0
    //   12516: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12519: iconst_0
    //   12520: iconst_1
    //   12521: anewarray 5776	java/lang/Class
    //   12524: dup
    //   12525: iconst_0
    //   12526: ldc_w 5443
    //   12529: aastore
    //   12530: aconst_null
    //   12531: aconst_null
    //   12532: aconst_null
    //   12533: ldc_w 6599
    //   12536: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12539: wide
    //   12543: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12546: dup
    //   12547: aload_0
    //   12548: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12551: iconst_0
    //   12552: iconst_1
    //   12553: anewarray 5776	java/lang/Class
    //   12556: dup
    //   12557: iconst_0
    //   12558: ldc_w 5443
    //   12561: aastore
    //   12562: aconst_null
    //   12563: aconst_null
    //   12564: aconst_null
    //   12565: ldc_w 6580
    //   12568: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12571: wide
    //   12575: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12578: dup
    //   12579: aload_0
    //   12580: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12583: iconst_0
    //   12584: iconst_1
    //   12585: anewarray 5776	java/lang/Class
    //   12588: dup
    //   12589: iconst_0
    //   12590: ldc_w 5443
    //   12593: aastore
    //   12594: aconst_null
    //   12595: aconst_null
    //   12596: aconst_null
    //   12597: ldc_w 6148
    //   12600: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12603: wide
    //   12607: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12610: dup
    //   12611: aload_0
    //   12612: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12615: iconst_0
    //   12616: iconst_1
    //   12617: anewarray 5776	java/lang/Class
    //   12620: dup
    //   12621: iconst_0
    //   12622: ldc_w 5443
    //   12625: aastore
    //   12626: aconst_null
    //   12627: aconst_null
    //   12628: aconst_null
    //   12629: ldc_w 6152
    //   12632: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12635: wide
    //   12639: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12642: dup
    //   12643: aload_0
    //   12644: getfield 1374	org/telegram/ui/ChatActivity:mentionListView	Lorg/telegram/ui/Components/RecyclerListView;
    //   12647: iconst_0
    //   12648: iconst_1
    //   12649: anewarray 5776	java/lang/Class
    //   12652: dup
    //   12653: iconst_0
    //   12654: ldc_w 5443
    //   12657: aastore
    //   12658: aconst_null
    //   12659: aconst_null
    //   12660: aconst_null
    //   12661: ldc_w 6601
    //   12664: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12667: wide
    //   12671: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12674: dup
    //   12675: aload_0
    //   12676: getfield 785	org/telegram/ui/ChatActivity:gifHintTextView	Landroid/widget/TextView;
    //   12679: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12682: aconst_null
    //   12683: aconst_null
    //   12684: aconst_null
    //   12685: aconst_null
    //   12686: ldc_w 3733
    //   12689: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12692: wide
    //   12696: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12699: dup
    //   12700: aload_0
    //   12701: getfield 785	org/telegram/ui/ChatActivity:gifHintTextView	Landroid/widget/TextView;
    //   12704: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12707: aconst_null
    //   12708: aconst_null
    //   12709: aconst_null
    //   12710: aconst_null
    //   12711: ldc_w 3740
    //   12714: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12717: wide
    //   12721: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12724: dup
    //   12725: aload_0
    //   12726: getfield 1199	org/telegram/ui/ChatActivity:pagedownButtonCounter	Landroid/widget/TextView;
    //   12729: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12732: aconst_null
    //   12733: aconst_null
    //   12734: aconst_null
    //   12735: aconst_null
    //   12736: ldc_w 4832
    //   12739: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12742: wide
    //   12746: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12749: dup
    //   12750: aload_0
    //   12751: getfield 1199	org/telegram/ui/ChatActivity:pagedownButtonCounter	Landroid/widget/TextView;
    //   12754: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12757: aconst_null
    //   12758: aconst_null
    //   12759: aconst_null
    //   12760: aconst_null
    //   12761: ldc_w 4829
    //   12764: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12767: wide
    //   12771: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12774: dup
    //   12775: aload_0
    //   12776: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   12779: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12782: aconst_null
    //   12783: aconst_null
    //   12784: aconst_null
    //   12785: aconst_null
    //   12786: ldc_w 4804
    //   12789: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12792: wide
    //   12796: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12799: dup
    //   12800: aload_0
    //   12801: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   12804: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12807: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   12810: ior
    //   12811: aconst_null
    //   12812: aconst_null
    //   12813: aconst_null
    //   12814: aconst_null
    //   12815: ldc_w 4817
    //   12818: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12821: wide
    //   12825: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12828: dup
    //   12829: aload_0
    //   12830: getfield 4797	org/telegram/ui/ChatActivity:pagedownButtonImage	Landroid/widget/ImageView;
    //   12833: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   12836: aconst_null
    //   12837: aconst_null
    //   12838: aconst_null
    //   12839: aconst_null
    //   12840: ldc_w 4800
    //   12843: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12846: wide
    //   12850: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12853: dup
    //   12854: aload_0
    //   12855: getfield 943	org/telegram/ui/ChatActivity:mentiondownButtonCounter	Landroid/widget/TextView;
    //   12858: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12861: aconst_null
    //   12862: aconst_null
    //   12863: aconst_null
    //   12864: aconst_null
    //   12865: ldc_w 4832
    //   12868: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12871: wide
    //   12875: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12878: dup
    //   12879: aload_0
    //   12880: getfield 943	org/telegram/ui/ChatActivity:mentiondownButtonCounter	Landroid/widget/TextView;
    //   12883: getstatic 5717	org/telegram/ui/ActionBar/ThemeDescription:FLAG_TEXTCOLOR	I
    //   12886: aconst_null
    //   12887: aconst_null
    //   12888: aconst_null
    //   12889: aconst_null
    //   12890: ldc_w 4829
    //   12893: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12896: wide
    //   12900: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12903: dup
    //   12904: aload_0
    //   12905: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   12908: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12911: aconst_null
    //   12912: aconst_null
    //   12913: aconst_null
    //   12914: aconst_null
    //   12915: ldc_w 4804
    //   12918: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12921: wide
    //   12925: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12928: dup
    //   12929: aload_0
    //   12930: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   12933: getstatic 6267	org/telegram/ui/ActionBar/ThemeDescription:FLAG_BACKGROUNDFILTER	I
    //   12936: getstatic 6481	org/telegram/ui/ActionBar/ThemeDescription:FLAG_DRAWABLESELECTEDSTATE	I
    //   12939: ior
    //   12940: aconst_null
    //   12941: aconst_null
    //   12942: aconst_null
    //   12943: aconst_null
    //   12944: ldc_w 4817
    //   12947: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12950: wide
    //   12954: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12957: dup
    //   12958: aload_0
    //   12959: getfield 4837	org/telegram/ui/ChatActivity:mentiondownButtonImage	Landroid/widget/ImageView;
    //   12962: getstatic 6384	org/telegram/ui/ActionBar/ThemeDescription:FLAG_IMAGECOLOR	I
    //   12965: aconst_null
    //   12966: aconst_null
    //   12967: aconst_null
    //   12968: aconst_null
    //   12969: ldc_w 4800
    //   12972: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   12975: wide
    //   12979: aload_0
    //   12980: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   12983: ifnull +2584 -> 15567
    //   12986: aload_0
    //   12987: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   12990: invokevirtual 6605	org/telegram/ui/Components/ChatAvatarContainer:getTimeItem	()Landroid/widget/ImageView;
    //   12993: astore_2
    //   12994: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   12997: dup
    //   12998: aload_2
    //   12999: iconst_0
    //   13000: aconst_null
    //   13001: aconst_null
    //   13002: aconst_null
    //   13003: aconst_null
    //   13004: ldc_w 6607
    //   13007: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   13010: wide
    //   13014: aload_0
    //   13015: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13018: ifnull +2554 -> 15572
    //   13021: aload_0
    //   13022: getfield 1430	org/telegram/ui/ChatActivity:avatarContainer	Lorg/telegram/ui/Components/ChatAvatarContainer;
    //   13025: invokevirtual 6605	org/telegram/ui/Components/ChatAvatarContainer:getTimeItem	()Landroid/widget/ImageView;
    //   13028: astore_2
    //   13029: sipush 340
    //   13032: anewarray 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   13035: dup
    //   13036: iconst_0
    //   13037: aload_3
    //   13038: aastore
    //   13039: dup
    //   13040: iconst_1
    //   13041: aload 4
    //   13043: aastore
    //   13044: dup
    //   13045: iconst_2
    //   13046: aload 5
    //   13048: aastore
    //   13049: dup
    //   13050: iconst_3
    //   13051: aload 6
    //   13053: aastore
    //   13054: dup
    //   13055: iconst_4
    //   13056: aload 7
    //   13058: aastore
    //   13059: dup
    //   13060: iconst_5
    //   13061: aload 8
    //   13063: aastore
    //   13064: dup
    //   13065: bipush 6
    //   13067: aload 9
    //   13069: aastore
    //   13070: dup
    //   13071: bipush 7
    //   13073: aload 10
    //   13075: aastore
    //   13076: dup
    //   13077: bipush 8
    //   13079: aload 11
    //   13081: aastore
    //   13082: dup
    //   13083: bipush 9
    //   13085: aload 12
    //   13087: aastore
    //   13088: dup
    //   13089: bipush 10
    //   13091: aload 13
    //   13093: aastore
    //   13094: dup
    //   13095: bipush 11
    //   13097: aload 14
    //   13099: aastore
    //   13100: dup
    //   13101: bipush 12
    //   13103: aload 15
    //   13105: aastore
    //   13106: dup
    //   13107: bipush 13
    //   13109: aload 16
    //   13111: aastore
    //   13112: dup
    //   13113: bipush 14
    //   13115: aload 17
    //   13117: aastore
    //   13118: dup
    //   13119: bipush 15
    //   13121: aload 18
    //   13123: aastore
    //   13124: dup
    //   13125: bipush 16
    //   13127: aload 19
    //   13129: aastore
    //   13130: dup
    //   13131: bipush 17
    //   13133: aload 20
    //   13135: aastore
    //   13136: dup
    //   13137: bipush 18
    //   13139: aload 21
    //   13141: aastore
    //   13142: dup
    //   13143: bipush 19
    //   13145: aload 22
    //   13147: aastore
    //   13148: dup
    //   13149: bipush 20
    //   13151: aload 23
    //   13153: aastore
    //   13154: dup
    //   13155: bipush 21
    //   13157: aload 24
    //   13159: aastore
    //   13160: dup
    //   13161: bipush 22
    //   13163: aload 25
    //   13165: aastore
    //   13166: dup
    //   13167: bipush 23
    //   13169: aload 26
    //   13171: aastore
    //   13172: dup
    //   13173: bipush 24
    //   13175: aload 27
    //   13177: aastore
    //   13178: dup
    //   13179: bipush 25
    //   13181: aload 28
    //   13183: aastore
    //   13184: dup
    //   13185: bipush 26
    //   13187: aload 29
    //   13189: aastore
    //   13190: dup
    //   13191: bipush 27
    //   13193: aload 30
    //   13195: aastore
    //   13196: dup
    //   13197: bipush 28
    //   13199: aload 31
    //   13201: aastore
    //   13202: dup
    //   13203: bipush 29
    //   13205: aload 32
    //   13207: aastore
    //   13208: dup
    //   13209: bipush 30
    //   13211: aload 33
    //   13213: aastore
    //   13214: dup
    //   13215: bipush 31
    //   13217: aload 34
    //   13219: aastore
    //   13220: dup
    //   13221: bipush 32
    //   13223: aload 35
    //   13225: aastore
    //   13226: dup
    //   13227: bipush 33
    //   13229: aload 36
    //   13231: aastore
    //   13232: dup
    //   13233: bipush 34
    //   13235: aload 37
    //   13237: aastore
    //   13238: dup
    //   13239: bipush 35
    //   13241: aload 38
    //   13243: aastore
    //   13244: dup
    //   13245: bipush 36
    //   13247: aload 39
    //   13249: aastore
    //   13250: dup
    //   13251: bipush 37
    //   13253: aload 40
    //   13255: aastore
    //   13256: dup
    //   13257: bipush 38
    //   13259: aload 41
    //   13261: aastore
    //   13262: dup
    //   13263: bipush 39
    //   13265: aload 42
    //   13267: aastore
    //   13268: dup
    //   13269: bipush 40
    //   13271: aload 43
    //   13273: aastore
    //   13274: dup
    //   13275: bipush 41
    //   13277: aload 44
    //   13279: aastore
    //   13280: dup
    //   13281: bipush 42
    //   13283: aload 45
    //   13285: aastore
    //   13286: dup
    //   13287: bipush 43
    //   13289: aload 46
    //   13291: aastore
    //   13292: dup
    //   13293: bipush 44
    //   13295: aload 47
    //   13297: aastore
    //   13298: dup
    //   13299: bipush 45
    //   13301: aload 48
    //   13303: aastore
    //   13304: dup
    //   13305: bipush 46
    //   13307: aload 49
    //   13309: aastore
    //   13310: dup
    //   13311: bipush 47
    //   13313: aload 50
    //   13315: aastore
    //   13316: dup
    //   13317: bipush 48
    //   13319: aload 51
    //   13321: aastore
    //   13322: dup
    //   13323: bipush 49
    //   13325: aload 52
    //   13327: aastore
    //   13328: dup
    //   13329: bipush 50
    //   13331: aload 53
    //   13333: aastore
    //   13334: dup
    //   13335: bipush 51
    //   13337: aload 54
    //   13339: aastore
    //   13340: dup
    //   13341: bipush 52
    //   13343: aload 55
    //   13345: aastore
    //   13346: dup
    //   13347: bipush 53
    //   13349: aload 56
    //   13351: aastore
    //   13352: dup
    //   13353: bipush 54
    //   13355: aload 57
    //   13357: aastore
    //   13358: dup
    //   13359: bipush 55
    //   13361: aload 58
    //   13363: aastore
    //   13364: dup
    //   13365: bipush 56
    //   13367: aload 59
    //   13369: aastore
    //   13370: dup
    //   13371: bipush 57
    //   13373: aload 60
    //   13375: aastore
    //   13376: dup
    //   13377: bipush 58
    //   13379: aload 61
    //   13381: aastore
    //   13382: dup
    //   13383: bipush 59
    //   13385: aload 62
    //   13387: aastore
    //   13388: dup
    //   13389: bipush 60
    //   13391: aload 63
    //   13393: aastore
    //   13394: dup
    //   13395: bipush 61
    //   13397: aload 64
    //   13399: aastore
    //   13400: dup
    //   13401: bipush 62
    //   13403: aload 65
    //   13405: aastore
    //   13406: dup
    //   13407: bipush 63
    //   13409: aload 66
    //   13411: aastore
    //   13412: dup
    //   13413: bipush 64
    //   13415: aload 67
    //   13417: aastore
    //   13418: dup
    //   13419: bipush 65
    //   13421: aload 68
    //   13423: aastore
    //   13424: dup
    //   13425: bipush 66
    //   13427: aload 69
    //   13429: aastore
    //   13430: dup
    //   13431: bipush 67
    //   13433: aload 70
    //   13435: aastore
    //   13436: dup
    //   13437: bipush 68
    //   13439: aload 71
    //   13441: aastore
    //   13442: dup
    //   13443: bipush 69
    //   13445: aload 73
    //   13447: aastore
    //   13448: dup
    //   13449: bipush 70
    //   13451: aload 74
    //   13453: aastore
    //   13454: dup
    //   13455: bipush 71
    //   13457: aload 75
    //   13459: aastore
    //   13460: dup
    //   13461: bipush 72
    //   13463: aload 76
    //   13465: aastore
    //   13466: dup
    //   13467: bipush 73
    //   13469: aload 77
    //   13471: aastore
    //   13472: dup
    //   13473: bipush 74
    //   13475: aload 78
    //   13477: aastore
    //   13478: dup
    //   13479: bipush 75
    //   13481: aload 79
    //   13483: aastore
    //   13484: dup
    //   13485: bipush 76
    //   13487: aload 80
    //   13489: aastore
    //   13490: dup
    //   13491: bipush 77
    //   13493: aload 81
    //   13495: aastore
    //   13496: dup
    //   13497: bipush 78
    //   13499: aload 82
    //   13501: aastore
    //   13502: dup
    //   13503: bipush 79
    //   13505: aload 83
    //   13507: aastore
    //   13508: dup
    //   13509: bipush 80
    //   13511: aload 84
    //   13513: aastore
    //   13514: dup
    //   13515: bipush 81
    //   13517: aload 85
    //   13519: aastore
    //   13520: dup
    //   13521: bipush 82
    //   13523: aload 86
    //   13525: aastore
    //   13526: dup
    //   13527: bipush 83
    //   13529: aload 87
    //   13531: aastore
    //   13532: dup
    //   13533: bipush 84
    //   13535: aload 88
    //   13537: aastore
    //   13538: dup
    //   13539: bipush 85
    //   13541: aload 89
    //   13543: aastore
    //   13544: dup
    //   13545: bipush 86
    //   13547: aload 90
    //   13549: aastore
    //   13550: dup
    //   13551: bipush 87
    //   13553: aload 91
    //   13555: aastore
    //   13556: dup
    //   13557: bipush 88
    //   13559: aload 92
    //   13561: aastore
    //   13562: dup
    //   13563: bipush 89
    //   13565: aload 93
    //   13567: aastore
    //   13568: dup
    //   13569: bipush 90
    //   13571: aload 94
    //   13573: aastore
    //   13574: dup
    //   13575: bipush 91
    //   13577: aload 95
    //   13579: aastore
    //   13580: dup
    //   13581: bipush 92
    //   13583: aload 96
    //   13585: aastore
    //   13586: dup
    //   13587: bipush 93
    //   13589: aload 97
    //   13591: aastore
    //   13592: dup
    //   13593: bipush 94
    //   13595: aload 98
    //   13597: aastore
    //   13598: dup
    //   13599: bipush 95
    //   13601: aload 99
    //   13603: aastore
    //   13604: dup
    //   13605: bipush 96
    //   13607: aload 100
    //   13609: aastore
    //   13610: dup
    //   13611: bipush 97
    //   13613: aload 101
    //   13615: aastore
    //   13616: dup
    //   13617: bipush 98
    //   13619: aload 102
    //   13621: aastore
    //   13622: dup
    //   13623: bipush 99
    //   13625: aload 103
    //   13627: aastore
    //   13628: dup
    //   13629: bipush 100
    //   13631: aload 104
    //   13633: aastore
    //   13634: dup
    //   13635: bipush 101
    //   13637: aload 105
    //   13639: aastore
    //   13640: dup
    //   13641: bipush 102
    //   13643: aload 106
    //   13645: aastore
    //   13646: dup
    //   13647: bipush 103
    //   13649: aload 107
    //   13651: aastore
    //   13652: dup
    //   13653: bipush 104
    //   13655: aload 108
    //   13657: aastore
    //   13658: dup
    //   13659: bipush 105
    //   13661: aload 109
    //   13663: aastore
    //   13664: dup
    //   13665: bipush 106
    //   13667: aload 110
    //   13669: aastore
    //   13670: dup
    //   13671: bipush 107
    //   13673: aload 111
    //   13675: aastore
    //   13676: dup
    //   13677: bipush 108
    //   13679: aload 112
    //   13681: aastore
    //   13682: dup
    //   13683: bipush 109
    //   13685: aload 113
    //   13687: aastore
    //   13688: dup
    //   13689: bipush 110
    //   13691: aload 114
    //   13693: aastore
    //   13694: dup
    //   13695: bipush 111
    //   13697: aload 115
    //   13699: aastore
    //   13700: dup
    //   13701: bipush 112
    //   13703: aload 116
    //   13705: aastore
    //   13706: dup
    //   13707: bipush 113
    //   13709: aload 117
    //   13711: aastore
    //   13712: dup
    //   13713: bipush 114
    //   13715: aload 118
    //   13717: aastore
    //   13718: dup
    //   13719: bipush 115
    //   13721: aload 119
    //   13723: aastore
    //   13724: dup
    //   13725: bipush 116
    //   13727: aload 120
    //   13729: aastore
    //   13730: dup
    //   13731: bipush 117
    //   13733: aload 121
    //   13735: aastore
    //   13736: dup
    //   13737: bipush 118
    //   13739: aload 122
    //   13741: aastore
    //   13742: dup
    //   13743: bipush 119
    //   13745: aload 123
    //   13747: aastore
    //   13748: dup
    //   13749: bipush 120
    //   13751: aload 124
    //   13753: aastore
    //   13754: dup
    //   13755: bipush 121
    //   13757: aload 125
    //   13759: aastore
    //   13760: dup
    //   13761: bipush 122
    //   13763: aload 126
    //   13765: aastore
    //   13766: dup
    //   13767: bipush 123
    //   13769: aload 127
    //   13771: aastore
    //   13772: dup
    //   13773: bipush 124
    //   13775: aload -128
    //   13777: aastore
    //   13778: dup
    //   13779: bipush 125
    //   13781: aload -127
    //   13783: aastore
    //   13784: dup
    //   13785: bipush 126
    //   13787: aload -126
    //   13789: aastore
    //   13790: dup
    //   13791: bipush 127
    //   13793: aload -125
    //   13795: aastore
    //   13796: dup
    //   13797: sipush 128
    //   13800: aload -124
    //   13802: aastore
    //   13803: dup
    //   13804: sipush 129
    //   13807: aload -123
    //   13809: aastore
    //   13810: dup
    //   13811: sipush 130
    //   13814: aload -122
    //   13816: aastore
    //   13817: dup
    //   13818: sipush 131
    //   13821: aload -121
    //   13823: aastore
    //   13824: dup
    //   13825: sipush 132
    //   13828: aload -120
    //   13830: aastore
    //   13831: dup
    //   13832: sipush 133
    //   13835: aload -119
    //   13837: aastore
    //   13838: dup
    //   13839: sipush 134
    //   13842: aload -118
    //   13844: aastore
    //   13845: dup
    //   13846: sipush 135
    //   13849: aload -117
    //   13851: aastore
    //   13852: dup
    //   13853: sipush 136
    //   13856: aload -116
    //   13858: aastore
    //   13859: dup
    //   13860: sipush 137
    //   13863: aload -115
    //   13865: aastore
    //   13866: dup
    //   13867: sipush 138
    //   13870: aload -114
    //   13872: aastore
    //   13873: dup
    //   13874: sipush 139
    //   13877: aload -113
    //   13879: aastore
    //   13880: dup
    //   13881: sipush 140
    //   13884: aload -112
    //   13886: aastore
    //   13887: dup
    //   13888: sipush 141
    //   13891: aload -111
    //   13893: aastore
    //   13894: dup
    //   13895: sipush 142
    //   13898: aload -110
    //   13900: aastore
    //   13901: dup
    //   13902: sipush 143
    //   13905: aload -109
    //   13907: aastore
    //   13908: dup
    //   13909: sipush 144
    //   13912: aload -108
    //   13914: aastore
    //   13915: dup
    //   13916: sipush 145
    //   13919: aload -107
    //   13921: aastore
    //   13922: dup
    //   13923: sipush 146
    //   13926: aload -106
    //   13928: aastore
    //   13929: dup
    //   13930: sipush 147
    //   13933: aload -105
    //   13935: aastore
    //   13936: dup
    //   13937: sipush 148
    //   13940: aload -104
    //   13942: aastore
    //   13943: dup
    //   13944: sipush 149
    //   13947: aload -103
    //   13949: aastore
    //   13950: dup
    //   13951: sipush 150
    //   13954: aload -102
    //   13956: aastore
    //   13957: dup
    //   13958: sipush 151
    //   13961: aload -101
    //   13963: aastore
    //   13964: dup
    //   13965: sipush 152
    //   13968: aload -100
    //   13970: aastore
    //   13971: dup
    //   13972: sipush 153
    //   13975: aload -99
    //   13977: aastore
    //   13978: dup
    //   13979: sipush 154
    //   13982: aload -98
    //   13984: aastore
    //   13985: dup
    //   13986: sipush 155
    //   13989: aload -97
    //   13991: aastore
    //   13992: dup
    //   13993: sipush 156
    //   13996: aload -96
    //   13998: aastore
    //   13999: dup
    //   14000: sipush 157
    //   14003: aload -95
    //   14005: aastore
    //   14006: dup
    //   14007: sipush 158
    //   14010: aload -94
    //   14012: aastore
    //   14013: dup
    //   14014: sipush 159
    //   14017: aload -93
    //   14019: aastore
    //   14020: dup
    //   14021: sipush 160
    //   14024: aload -92
    //   14026: aastore
    //   14027: dup
    //   14028: sipush 161
    //   14031: aload -91
    //   14033: aastore
    //   14034: dup
    //   14035: sipush 162
    //   14038: aload -90
    //   14040: aastore
    //   14041: dup
    //   14042: sipush 163
    //   14045: aload -89
    //   14047: aastore
    //   14048: dup
    //   14049: sipush 164
    //   14052: aload -88
    //   14054: aastore
    //   14055: dup
    //   14056: sipush 165
    //   14059: aload -87
    //   14061: aastore
    //   14062: dup
    //   14063: sipush 166
    //   14066: aload -86
    //   14068: aastore
    //   14069: dup
    //   14070: sipush 167
    //   14073: aload -85
    //   14075: aastore
    //   14076: dup
    //   14077: sipush 168
    //   14080: aload -84
    //   14082: aastore
    //   14083: dup
    //   14084: sipush 169
    //   14087: aload -83
    //   14089: aastore
    //   14090: dup
    //   14091: sipush 170
    //   14094: aload -82
    //   14096: aastore
    //   14097: dup
    //   14098: sipush 171
    //   14101: aload -81
    //   14103: aastore
    //   14104: dup
    //   14105: sipush 172
    //   14108: aload -80
    //   14110: aastore
    //   14111: dup
    //   14112: sipush 173
    //   14115: aload -79
    //   14117: aastore
    //   14118: dup
    //   14119: sipush 174
    //   14122: aload -78
    //   14124: aastore
    //   14125: dup
    //   14126: sipush 175
    //   14129: aload -77
    //   14131: aastore
    //   14132: dup
    //   14133: sipush 176
    //   14136: aload -76
    //   14138: aastore
    //   14139: dup
    //   14140: sipush 177
    //   14143: aload -75
    //   14145: aastore
    //   14146: dup
    //   14147: sipush 178
    //   14150: aload -74
    //   14152: aastore
    //   14153: dup
    //   14154: sipush 179
    //   14157: aload -73
    //   14159: aastore
    //   14160: dup
    //   14161: sipush 180
    //   14164: aload -72
    //   14166: aastore
    //   14167: dup
    //   14168: sipush 181
    //   14171: aload -71
    //   14173: aastore
    //   14174: dup
    //   14175: sipush 182
    //   14178: aload -70
    //   14180: aastore
    //   14181: dup
    //   14182: sipush 183
    //   14185: aload -69
    //   14187: aastore
    //   14188: dup
    //   14189: sipush 184
    //   14192: aload -68
    //   14194: aastore
    //   14195: dup
    //   14196: sipush 185
    //   14199: aload -67
    //   14201: aastore
    //   14202: dup
    //   14203: sipush 186
    //   14206: aload -66
    //   14208: aastore
    //   14209: dup
    //   14210: sipush 187
    //   14213: aload -65
    //   14215: aastore
    //   14216: dup
    //   14217: sipush 188
    //   14220: aload -64
    //   14222: aastore
    //   14223: dup
    //   14224: sipush 189
    //   14227: aload -63
    //   14229: aastore
    //   14230: dup
    //   14231: sipush 190
    //   14234: aload -62
    //   14236: aastore
    //   14237: dup
    //   14238: sipush 191
    //   14241: aload -61
    //   14243: aastore
    //   14244: dup
    //   14245: sipush 192
    //   14248: aload -60
    //   14250: aastore
    //   14251: dup
    //   14252: sipush 193
    //   14255: aload -59
    //   14257: aastore
    //   14258: dup
    //   14259: sipush 194
    //   14262: aload -58
    //   14264: aastore
    //   14265: dup
    //   14266: sipush 195
    //   14269: aload -57
    //   14271: aastore
    //   14272: dup
    //   14273: sipush 196
    //   14276: aload -56
    //   14278: aastore
    //   14279: dup
    //   14280: sipush 197
    //   14283: aload -55
    //   14285: aastore
    //   14286: dup
    //   14287: sipush 198
    //   14290: aload -54
    //   14292: aastore
    //   14293: dup
    //   14294: sipush 199
    //   14297: aload -53
    //   14299: aastore
    //   14300: dup
    //   14301: sipush 200
    //   14304: aload -52
    //   14306: aastore
    //   14307: dup
    //   14308: sipush 201
    //   14311: aload -51
    //   14313: aastore
    //   14314: dup
    //   14315: sipush 202
    //   14318: aload -50
    //   14320: aastore
    //   14321: dup
    //   14322: sipush 203
    //   14325: aload -49
    //   14327: aastore
    //   14328: dup
    //   14329: sipush 204
    //   14332: aload -48
    //   14334: aastore
    //   14335: dup
    //   14336: sipush 205
    //   14339: aload -47
    //   14341: aastore
    //   14342: dup
    //   14343: sipush 206
    //   14346: aload -46
    //   14348: aastore
    //   14349: dup
    //   14350: sipush 207
    //   14353: aload -45
    //   14355: aastore
    //   14356: dup
    //   14357: sipush 208
    //   14360: aload -44
    //   14362: aastore
    //   14363: dup
    //   14364: sipush 209
    //   14367: aload -43
    //   14369: aastore
    //   14370: dup
    //   14371: sipush 210
    //   14374: aload -42
    //   14376: aastore
    //   14377: dup
    //   14378: sipush 211
    //   14381: aload -41
    //   14383: aastore
    //   14384: dup
    //   14385: sipush 212
    //   14388: aload -40
    //   14390: aastore
    //   14391: dup
    //   14392: sipush 213
    //   14395: aload -39
    //   14397: aastore
    //   14398: dup
    //   14399: sipush 214
    //   14402: aload -38
    //   14404: aastore
    //   14405: dup
    //   14406: sipush 215
    //   14409: aload -37
    //   14411: aastore
    //   14412: dup
    //   14413: sipush 216
    //   14416: aload -36
    //   14418: aastore
    //   14419: dup
    //   14420: sipush 217
    //   14423: aload -35
    //   14425: aastore
    //   14426: dup
    //   14427: sipush 218
    //   14430: aload -34
    //   14432: aastore
    //   14433: dup
    //   14434: sipush 219
    //   14437: aload -33
    //   14439: aastore
    //   14440: dup
    //   14441: sipush 220
    //   14444: aload -32
    //   14446: aastore
    //   14447: dup
    //   14448: sipush 221
    //   14451: aload -31
    //   14453: aastore
    //   14454: dup
    //   14455: sipush 222
    //   14458: aload -30
    //   14460: aastore
    //   14461: dup
    //   14462: sipush 223
    //   14465: aload -29
    //   14467: aastore
    //   14468: dup
    //   14469: sipush 224
    //   14472: aload -28
    //   14474: aastore
    //   14475: dup
    //   14476: sipush 225
    //   14479: aload -27
    //   14481: aastore
    //   14482: dup
    //   14483: sipush 226
    //   14486: aload -26
    //   14488: aastore
    //   14489: dup
    //   14490: sipush 227
    //   14493: aload -25
    //   14495: aastore
    //   14496: dup
    //   14497: sipush 228
    //   14500: aload -24
    //   14502: aastore
    //   14503: dup
    //   14504: sipush 229
    //   14507: aload -23
    //   14509: aastore
    //   14510: dup
    //   14511: sipush 230
    //   14514: aload -22
    //   14516: aastore
    //   14517: dup
    //   14518: sipush 231
    //   14521: aload -21
    //   14523: aastore
    //   14524: dup
    //   14525: sipush 232
    //   14528: aload -20
    //   14530: aastore
    //   14531: dup
    //   14532: sipush 233
    //   14535: aload -19
    //   14537: aastore
    //   14538: dup
    //   14539: sipush 234
    //   14542: aload -18
    //   14544: aastore
    //   14545: dup
    //   14546: sipush 235
    //   14549: aload -17
    //   14551: aastore
    //   14552: dup
    //   14553: sipush 236
    //   14556: aload -16
    //   14558: aastore
    //   14559: dup
    //   14560: sipush 237
    //   14563: aload -15
    //   14565: aastore
    //   14566: dup
    //   14567: sipush 238
    //   14570: aload -14
    //   14572: aastore
    //   14573: dup
    //   14574: sipush 239
    //   14577: aload -13
    //   14579: aastore
    //   14580: dup
    //   14581: sipush 240
    //   14584: aload -12
    //   14586: aastore
    //   14587: dup
    //   14588: sipush 241
    //   14591: aload -11
    //   14593: aastore
    //   14594: dup
    //   14595: sipush 242
    //   14598: aload -10
    //   14600: aastore
    //   14601: dup
    //   14602: sipush 243
    //   14605: aload -9
    //   14607: aastore
    //   14608: dup
    //   14609: sipush 244
    //   14612: aload -8
    //   14614: aastore
    //   14615: dup
    //   14616: sipush 245
    //   14619: aload -7
    //   14621: aastore
    //   14622: dup
    //   14623: sipush 246
    //   14626: aload -6
    //   14628: aastore
    //   14629: dup
    //   14630: sipush 247
    //   14633: aload -5
    //   14635: aastore
    //   14636: dup
    //   14637: sipush 248
    //   14640: aload -4
    //   14642: aastore
    //   14643: dup
    //   14644: sipush 249
    //   14647: aload -3
    //   14649: aastore
    //   14650: dup
    //   14651: sipush 250
    //   14654: aload -2
    //   14656: aastore
    //   14657: dup
    //   14658: sipush 251
    //   14661: aload -1
    //   14663: aastore
    //   14664: dup
    //   14665: sipush 252
    //   14668: wide
    //   14672: aastore
    //   14673: dup
    //   14674: sipush 253
    //   14677: wide
    //   14681: aastore
    //   14682: dup
    //   14683: sipush 254
    //   14686: wide
    //   14690: aastore
    //   14691: dup
    //   14692: sipush 255
    //   14695: wide
    //   14699: aastore
    //   14700: dup
    //   14701: sipush 256
    //   14704: wide
    //   14708: aastore
    //   14709: dup
    //   14710: sipush 257
    //   14713: wide
    //   14717: aastore
    //   14718: dup
    //   14719: sipush 258
    //   14722: wide
    //   14726: aastore
    //   14727: dup
    //   14728: sipush 259
    //   14731: wide
    //   14735: aastore
    //   14736: dup
    //   14737: sipush 260
    //   14740: wide
    //   14744: aastore
    //   14745: dup
    //   14746: sipush 261
    //   14749: wide
    //   14753: aastore
    //   14754: dup
    //   14755: sipush 262
    //   14758: wide
    //   14762: aastore
    //   14763: dup
    //   14764: sipush 263
    //   14767: wide
    //   14771: aastore
    //   14772: dup
    //   14773: sipush 264
    //   14776: wide
    //   14780: aastore
    //   14781: dup
    //   14782: sipush 265
    //   14785: wide
    //   14789: aastore
    //   14790: dup
    //   14791: sipush 266
    //   14794: wide
    //   14798: aastore
    //   14799: dup
    //   14800: sipush 267
    //   14803: wide
    //   14807: aastore
    //   14808: dup
    //   14809: sipush 268
    //   14812: aload 72
    //   14814: aastore
    //   14815: dup
    //   14816: sipush 269
    //   14819: wide
    //   14823: aastore
    //   14824: dup
    //   14825: sipush 270
    //   14828: wide
    //   14832: aastore
    //   14833: dup
    //   14834: sipush 271
    //   14837: wide
    //   14841: aastore
    //   14842: dup
    //   14843: sipush 272
    //   14846: wide
    //   14850: aastore
    //   14851: dup
    //   14852: sipush 273
    //   14855: wide
    //   14859: aastore
    //   14860: dup
    //   14861: sipush 274
    //   14864: wide
    //   14868: aastore
    //   14869: dup
    //   14870: sipush 275
    //   14873: wide
    //   14877: aastore
    //   14878: dup
    //   14879: sipush 276
    //   14882: wide
    //   14886: aastore
    //   14887: dup
    //   14888: sipush 277
    //   14891: wide
    //   14895: aastore
    //   14896: dup
    //   14897: sipush 278
    //   14900: wide
    //   14904: aastore
    //   14905: dup
    //   14906: sipush 279
    //   14909: wide
    //   14913: aastore
    //   14914: dup
    //   14915: sipush 280
    //   14918: wide
    //   14922: aastore
    //   14923: dup
    //   14924: sipush 281
    //   14927: wide
    //   14931: aastore
    //   14932: dup
    //   14933: sipush 282
    //   14936: wide
    //   14940: aastore
    //   14941: dup
    //   14942: sipush 283
    //   14945: wide
    //   14949: aastore
    //   14950: dup
    //   14951: sipush 284
    //   14954: wide
    //   14958: aastore
    //   14959: dup
    //   14960: sipush 285
    //   14963: wide
    //   14967: aastore
    //   14968: dup
    //   14969: sipush 286
    //   14972: wide
    //   14976: aastore
    //   14977: dup
    //   14978: sipush 287
    //   14981: wide
    //   14985: aastore
    //   14986: dup
    //   14987: sipush 288
    //   14990: wide
    //   14994: aastore
    //   14995: dup
    //   14996: sipush 289
    //   14999: wide
    //   15003: aastore
    //   15004: dup
    //   15005: sipush 290
    //   15008: wide
    //   15012: aastore
    //   15013: dup
    //   15014: sipush 291
    //   15017: wide
    //   15021: aastore
    //   15022: dup
    //   15023: sipush 292
    //   15026: wide
    //   15030: aastore
    //   15031: dup
    //   15032: sipush 293
    //   15035: wide
    //   15039: aastore
    //   15040: dup
    //   15041: sipush 294
    //   15044: wide
    //   15048: aastore
    //   15049: dup
    //   15050: sipush 295
    //   15053: wide
    //   15057: aastore
    //   15058: dup
    //   15059: sipush 296
    //   15062: wide
    //   15066: aastore
    //   15067: dup
    //   15068: sipush 297
    //   15071: wide
    //   15075: aastore
    //   15076: dup
    //   15077: sipush 298
    //   15080: wide
    //   15084: aastore
    //   15085: dup
    //   15086: sipush 299
    //   15089: wide
    //   15093: aastore
    //   15094: dup
    //   15095: sipush 300
    //   15098: wide
    //   15102: aastore
    //   15103: dup
    //   15104: sipush 301
    //   15107: wide
    //   15111: aastore
    //   15112: dup
    //   15113: sipush 302
    //   15116: wide
    //   15120: aastore
    //   15121: dup
    //   15122: sipush 303
    //   15125: wide
    //   15129: aastore
    //   15130: dup
    //   15131: sipush 304
    //   15134: wide
    //   15138: aastore
    //   15139: dup
    //   15140: sipush 305
    //   15143: wide
    //   15147: aastore
    //   15148: dup
    //   15149: sipush 306
    //   15152: wide
    //   15156: aastore
    //   15157: dup
    //   15158: sipush 307
    //   15161: wide
    //   15165: aastore
    //   15166: dup
    //   15167: sipush 308
    //   15170: wide
    //   15174: aastore
    //   15175: dup
    //   15176: sipush 309
    //   15179: wide
    //   15183: aastore
    //   15184: dup
    //   15185: sipush 310
    //   15188: wide
    //   15192: aastore
    //   15193: dup
    //   15194: sipush 311
    //   15197: wide
    //   15201: aastore
    //   15202: dup
    //   15203: sipush 312
    //   15206: wide
    //   15210: aastore
    //   15211: dup
    //   15212: sipush 313
    //   15215: wide
    //   15219: aastore
    //   15220: dup
    //   15221: sipush 314
    //   15224: wide
    //   15228: aastore
    //   15229: dup
    //   15230: sipush 315
    //   15233: wide
    //   15237: aastore
    //   15238: dup
    //   15239: sipush 316
    //   15242: wide
    //   15246: aastore
    //   15247: dup
    //   15248: sipush 317
    //   15251: wide
    //   15255: aastore
    //   15256: dup
    //   15257: sipush 318
    //   15260: wide
    //   15264: aastore
    //   15265: dup
    //   15266: sipush 319
    //   15269: wide
    //   15273: aastore
    //   15274: dup
    //   15275: sipush 320
    //   15278: wide
    //   15282: aastore
    //   15283: dup
    //   15284: sipush 321
    //   15287: wide
    //   15291: aastore
    //   15292: dup
    //   15293: sipush 322
    //   15296: wide
    //   15300: aastore
    //   15301: dup
    //   15302: sipush 323
    //   15305: wide
    //   15309: aastore
    //   15310: dup
    //   15311: sipush 324
    //   15314: wide
    //   15318: aastore
    //   15319: dup
    //   15320: sipush 325
    //   15323: wide
    //   15327: aastore
    //   15328: dup
    //   15329: sipush 326
    //   15332: wide
    //   15336: aastore
    //   15337: dup
    //   15338: sipush 327
    //   15341: wide
    //   15345: aastore
    //   15346: dup
    //   15347: sipush 328
    //   15350: wide
    //   15354: aastore
    //   15355: dup
    //   15356: sipush 329
    //   15359: wide
    //   15363: aastore
    //   15364: dup
    //   15365: sipush 330
    //   15368: wide
    //   15372: aastore
    //   15373: dup
    //   15374: sipush 331
    //   15377: wide
    //   15381: aastore
    //   15382: dup
    //   15383: sipush 332
    //   15386: wide
    //   15390: aastore
    //   15391: dup
    //   15392: sipush 333
    //   15395: wide
    //   15399: aastore
    //   15400: dup
    //   15401: sipush 334
    //   15404: wide
    //   15408: aastore
    //   15409: dup
    //   15410: sipush 335
    //   15413: wide
    //   15417: aastore
    //   15418: dup
    //   15419: sipush 336
    //   15422: wide
    //   15426: aastore
    //   15427: dup
    //   15428: sipush 337
    //   15431: wide
    //   15435: aastore
    //   15436: dup
    //   15437: sipush 338
    //   15440: wide
    //   15444: aastore
    //   15445: dup
    //   15446: sipush 339
    //   15449: new 5677	org/telegram/ui/ActionBar/ThemeDescription
    //   15452: dup
    //   15453: aload_2
    //   15454: iconst_0
    //   15455: aconst_null
    //   15456: aconst_null
    //   15457: aconst_null
    //   15458: aconst_null
    //   15459: ldc_w 6609
    //   15462: invokespecial 5682	org/telegram/ui/ActionBar/ThemeDescription:<init>	(Landroid/view/View;I[Ljava/lang/Class;Landroid/graphics/Paint;[Landroid/graphics/drawable/Drawable;Lorg/telegram/ui/ActionBar/ThemeDescription$ThemeDescriptionDelegate;Ljava/lang/String;)V
    //   15465: aastore
    //   15466: areturn
    //   15467: aconst_null
    //   15468: astore_2
    //   15469: goto -15217 -> 252
    //   15472: aconst_null
    //   15473: astore_2
    //   15474: goto -15187 -> 287
    //   15477: aconst_null
    //   15478: astore_2
    //   15479: goto -14911 -> 568
    //   15482: aconst_null
    //   15483: astore_2
    //   15484: goto -14874 -> 610
    //   15487: aload_0
    //   15488: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15491: astore_2
    //   15492: goto -5084 -> 10408
    //   15495: aload_0
    //   15496: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15499: astore_2
    //   15500: goto -5046 -> 10454
    //   15503: aload_0
    //   15504: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15507: astore_2
    //   15508: goto -5008 -> 10500
    //   15511: aload_0
    //   15512: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15515: astore_2
    //   15516: goto -4970 -> 10546
    //   15519: aload_0
    //   15520: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15523: astore_2
    //   15524: goto -4932 -> 10592
    //   15527: aload_0
    //   15528: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15531: astore_2
    //   15532: goto -4894 -> 10638
    //   15535: aload_0
    //   15536: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15539: astore_2
    //   15540: goto -4856 -> 10684
    //   15543: aload_0
    //   15544: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15547: astore_2
    //   15548: goto -4818 -> 10730
    //   15551: aload_0
    //   15552: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15555: astore_2
    //   15556: goto -4780 -> 10776
    //   15559: aload_0
    //   15560: getfield 1715	org/telegram/ui/ChatActivity:chatActivityEnterView	Lorg/telegram/ui/Components/ChatActivityEnterView;
    //   15563: astore_2
    //   15564: goto -4742 -> 10822
    //   15567: aconst_null
    //   15568: astore_2
    //   15569: goto -2575 -> 12994
    //   15572: aconst_null
    //   15573: astore_2
    //   15574: goto -2545 -> 13029
  }
  
  public boolean isSecretChat()
  {
    return this.currentEncryptedChat != null;
  }
  
  public boolean needDelayOpenAnimation()
  {
    return this.firstLoading;
  }
  
  public void onActivityResultFragment(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (paramInt2 == -1)
    {
      if ((paramInt1 != 0) && (paramInt1 != 2)) {
        break label44;
      }
      createChatAttachView();
      if (this.chatAttachAlert != null) {
        this.chatAttachAlert.onActivityResultFragment(paramInt1, paramIntent, this.currentPicturePath);
      }
      this.currentPicturePath = null;
    }
    for (;;)
    {
      return;
      label44:
      if (paramInt1 == 1)
      {
        if ((paramIntent == null) || (paramIntent.getData() == null))
        {
          showAttachmentError();
          return;
        }
        Object localObject1 = paramIntent.getData();
        if (((Uri)localObject1).toString().contains("video"))
        {
          paramIntent = null;
          try
          {
            localObject1 = AndroidUtilities.getPath((Uri)localObject1);
            paramIntent = (Intent)localObject1;
          }
          catch (Exception localException)
          {
            for (;;)
            {
              FileLog.e(localException);
              continue;
              openVideoEditor(paramIntent, null);
            }
          }
          if (paramIntent == null) {
            showAttachmentError();
          }
          if (this.paused) {
            this.startVideoEdit = paramIntent;
          }
        }
        for (;;)
        {
          showReplyPanel(false, null, null, null, false);
          DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          return;
          SendMessagesHelper.prepareSendingPhoto(null, localException, this.dialog_id, this.replyingMessageObject, null, null, null, null, 0);
        }
      }
      if (paramInt1 == 21)
      {
        if (paramIntent == null)
        {
          showAttachmentError();
          return;
        }
        if (paramIntent.getData() != null) {
          sendUriAsDocument(paramIntent.getData());
        }
        for (;;)
        {
          showReplyPanel(false, null, null, null, false);
          DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          return;
          if (paramIntent.getClipData() != null)
          {
            paramIntent = paramIntent.getClipData();
            paramInt1 = 0;
            while (paramInt1 < paramIntent.getItemCount())
            {
              sendUriAsDocument(paramIntent.getItemAt(paramInt1).getUri());
              paramInt1 += 1;
            }
          }
          else
          {
            showAttachmentError();
          }
        }
      }
      if (paramInt1 != 31) {
        continue;
      }
      if ((paramIntent == null) || (paramIntent.getData() == null))
      {
        showAttachmentError();
        return;
      }
      Object localObject2 = paramIntent.getData();
      paramIntent = null;
      try
      {
        localObject2 = getParentActivity().getContentResolver().query((Uri)localObject2, new String[] { "display_name", "data1" }, null, null, null);
        if (localObject2 != null)
        {
          paramInt1 = 0;
          for (;;)
          {
            paramIntent = (Intent)localObject2;
            if (!((Cursor)localObject2).moveToNext()) {
              break;
            }
            paramInt1 = 1;
            paramIntent = (Intent)localObject2;
            String str1 = ((Cursor)localObject2).getString(0);
            paramIntent = (Intent)localObject2;
            String str2 = ((Cursor)localObject2).getString(1);
            paramIntent = (Intent)localObject2;
            TLRPC.TL_user localTL_user = new TLRPC.TL_user();
            paramIntent = (Intent)localObject2;
            localTL_user.first_name = str1;
            paramIntent = (Intent)localObject2;
            localTL_user.last_name = "";
            paramIntent = (Intent)localObject2;
            localTL_user.phone = str2;
            paramIntent = (Intent)localObject2;
            SendMessagesHelper.getInstance(this.currentAccount).sendMessage(localTL_user, this.dialog_id, this.replyingMessageObject, null, null);
          }
        }
        try
        {
          if (!paramIntent.isClosed()) {
            paramIntent.close();
          }
          throw ((Throwable)localObject3);
          if (paramInt1 != 0)
          {
            paramIntent = (Intent)localObject3;
            showReplyPanel(false, null, null, null, false);
            paramIntent = (Intent)localObject3;
            DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
          }
          if (localObject3 == null) {
            continue;
          }
          try
          {
            if (((Cursor)localObject3).isClosed()) {
              continue;
            }
            ((Cursor)localObject3).close();
            return;
          }
          catch (Exception paramIntent)
          {
            FileLog.e(paramIntent);
            return;
          }
        }
        catch (Exception paramIntent)
        {
          for (;;)
          {
            FileLog.e(paramIntent);
          }
        }
      }
      finally
      {
        if (paramIntent == null) {}
      }
    }
  }
  
  public boolean onBackPressed()
  {
    if (checkRecordLocked()) {
      return false;
    }
    if ((this.actionBar != null) && (this.actionBar.isActionModeShowed()))
    {
      int i = 1;
      while (i >= 0)
      {
        this.selectedMessagesIds[i].clear();
        this.selectedMessagesCanCopyIds[i].clear();
        this.selectedMessagesCanStarIds[i].clear();
        i -= 1;
      }
      this.chatActivityEnterView.setEditingMessageObject(null, false);
      this.actionBar.hideActionMode();
      updatePinnedMessageView(true);
      this.cantDeleteMessagesCount = 0;
      this.canEditMessagesCount = 0;
      updateVisibleRows();
      return false;
    }
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isPopupShowing()))
    {
      this.chatActivityEnterView.hidePopup(true);
      return false;
    }
    return true;
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    fixLayout();
    if ((this.visibleDialog instanceof DatePickerDialog)) {
      this.visibleDialog.dismiss();
    }
  }
  
  protected void onDialogDismiss(Dialog paramDialog)
  {
    if ((this.closeChatDialog != null) && (paramDialog == this.closeChatDialog))
    {
      MessagesController.getInstance(this.currentAccount).deleteDialog(this.dialog_id, 0);
      if ((this.parentLayout != null) && (!this.parentLayout.fragmentsStack.isEmpty()) && (this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) != this))
      {
        paramDialog = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1);
        removeSelfFromStack();
        paramDialog.finishFragment();
      }
    }
    else
    {
      return;
    }
    finishFragment();
  }
  
  /* Error */
  public boolean onFragmentCreate()
  {
    // Byte code:
    //   0: aload_0
    //   1: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   4: ldc_w 5241
    //   7: iconst_0
    //   8: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   11: istore_3
    //   12: aload_0
    //   13: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   16: ldc_w 3495
    //   19: iconst_0
    //   20: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   23: istore_2
    //   24: aload_0
    //   25: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   28: ldc_w 5591
    //   31: iconst_0
    //   32: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   35: istore 4
    //   37: aload_0
    //   38: aload_0
    //   39: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   42: ldc_w 6710
    //   45: lconst_0
    //   46: invokevirtual 6714	android/os/Bundle:getLong	(Ljava/lang/String;J)J
    //   49: putfield 1279	org/telegram/ui/ChatActivity:inlineReturn	J
    //   52: aload_0
    //   53: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   56: ldc_w 6716
    //   59: invokevirtual 6718	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   62: astore 9
    //   64: aload_0
    //   65: aload_0
    //   66: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   69: ldc_w 6720
    //   72: iconst_0
    //   73: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   76: putfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   79: aload_0
    //   80: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   83: ldc_w 6722
    //   86: iconst_0
    //   87: invokevirtual 6708	android/os/Bundle:getInt	(Ljava/lang/String;I)I
    //   90: istore_1
    //   91: aload_0
    //   92: aload_0
    //   93: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   96: ldc_w 5581
    //   99: iconst_0
    //   100: invokevirtual 1972	android/os/Bundle:getBoolean	(Ljava/lang/String;Z)Z
    //   103: putfield 5142	org/telegram/ui/ChatActivity:scrollToTopOnResume	Z
    //   106: iload_3
    //   107: ifeq +1274 -> 1381
    //   110: aload_0
    //   111: aload_0
    //   112: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   115: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   118: iload_3
    //   119: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   122: invokevirtual 2056	org/telegram/messenger/MessagesController:getChat	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$Chat;
    //   125: putfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   128: aload_0
    //   129: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   132: ifnonnull +70 -> 202
    //   135: new 6724	java/util/concurrent/CountDownLatch
    //   138: dup
    //   139: iconst_1
    //   140: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   143: astore 9
    //   145: aload_0
    //   146: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   149: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   152: astore 10
    //   154: aload 10
    //   156: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   159: new 160	org/telegram/ui/ChatActivity$5
    //   162: dup
    //   163: aload_0
    //   164: aload 10
    //   166: iload_3
    //   167: aload 9
    //   169: invokespecial 6732	org/telegram/ui/ChatActivity$5:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   172: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   175: aload 9
    //   177: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   180: aload_0
    //   181: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   184: ifnull +1179 -> 1363
    //   187: aload_0
    //   188: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   191: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   194: aload_0
    //   195: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   198: iconst_1
    //   199: invokevirtual 6739	org/telegram/messenger/MessagesController:putChat	(Lorg/telegram/tgnet/TLRPC$Chat;Z)V
    //   202: iload_3
    //   203: ifle +1162 -> 1365
    //   206: aload_0
    //   207: iload_3
    //   208: ineg
    //   209: i2l
    //   210: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   213: aload_0
    //   214: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   217: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   220: ifeq +15 -> 235
    //   223: aload_0
    //   224: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   227: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   230: iload_3
    //   231: iconst_0
    //   232: invokevirtual 6742	org/telegram/messenger/MessagesController:startShortPoll	(IZ)V
    //   235: aload_0
    //   236: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   239: ifnull +9 -> 248
    //   242: invokestatic 2282	org/telegram/messenger/MediaController:getInstance	()Lorg/telegram/messenger/MediaController;
    //   245: invokevirtual 6745	org/telegram/messenger/MediaController:startMediaObserver	()V
    //   248: aload_0
    //   249: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   252: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   255: aload_0
    //   256: getstatic 5023	org/telegram/messenger/NotificationCenter:messagesDidLoaded	I
    //   259: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   262: invokestatic 6753	org/telegram/messenger/NotificationCenter:getGlobalInstance	()Lorg/telegram/messenger/NotificationCenter;
    //   265: aload_0
    //   266: getstatic 5162	org/telegram/messenger/NotificationCenter:emojiDidLoaded	I
    //   269: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   272: aload_0
    //   273: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   276: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   279: aload_0
    //   280: getstatic 5170	org/telegram/messenger/NotificationCenter:updateInterfaces	I
    //   283: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   286: aload_0
    //   287: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   290: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   293: aload_0
    //   294: getstatic 5173	org/telegram/messenger/NotificationCenter:didReceivedNewMessages	I
    //   297: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   300: aload_0
    //   301: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   304: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   307: aload_0
    //   308: getstatic 5040	org/telegram/messenger/NotificationCenter:closeChats	I
    //   311: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   314: aload_0
    //   315: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   318: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   321: aload_0
    //   322: getstatic 5284	org/telegram/messenger/NotificationCenter:messagesRead	I
    //   325: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   328: aload_0
    //   329: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   332: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   335: aload_0
    //   336: getstatic 5305	org/telegram/messenger/NotificationCenter:messagesDeleted	I
    //   339: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   342: aload_0
    //   343: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   346: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   349: aload_0
    //   350: getstatic 5294	org/telegram/messenger/NotificationCenter:historyCleared	I
    //   353: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   356: aload_0
    //   357: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   360: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   363: aload_0
    //   364: getstatic 5310	org/telegram/messenger/NotificationCenter:messageReceivedByServer	I
    //   367: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   370: aload_0
    //   371: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   374: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   377: aload_0
    //   378: getstatic 5345	org/telegram/messenger/NotificationCenter:messageReceivedByAck	I
    //   381: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   384: aload_0
    //   385: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   388: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   391: aload_0
    //   392: getstatic 5348	org/telegram/messenger/NotificationCenter:messageSendError	I
    //   395: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   398: aload_0
    //   399: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   402: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   405: aload_0
    //   406: getstatic 5034	org/telegram/messenger/NotificationCenter:chatInfoDidLoaded	I
    //   409: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   412: aload_0
    //   413: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   416: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   419: aload_0
    //   420: getstatic 5390	org/telegram/messenger/NotificationCenter:contactsDidLoaded	I
    //   423: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   426: aload_0
    //   427: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   430: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   433: aload_0
    //   434: getstatic 5393	org/telegram/messenger/NotificationCenter:encryptedChatUpdated	I
    //   437: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   440: aload_0
    //   441: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   444: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   447: aload_0
    //   448: getstatic 5400	org/telegram/messenger/NotificationCenter:messagesReadEncrypted	I
    //   451: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   454: aload_0
    //   455: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   458: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   461: aload_0
    //   462: getstatic 5403	org/telegram/messenger/NotificationCenter:removeAllMessagesFromDialog	I
    //   465: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   468: aload_0
    //   469: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   472: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   475: aload_0
    //   476: getstatic 5456	org/telegram/messenger/NotificationCenter:messagePlayingProgressDidChanged	I
    //   479: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   482: aload_0
    //   483: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   486: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   489: aload_0
    //   490: getstatic 5448	org/telegram/messenger/NotificationCenter:messagePlayingDidReset	I
    //   493: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   496: aload_0
    //   497: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   500: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   503: aload_0
    //   504: getstatic 5451	org/telegram/messenger/NotificationCenter:messagePlayingPlayStateChanged	I
    //   507: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   510: aload_0
    //   511: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   514: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   517: aload_0
    //   518: getstatic 5406	org/telegram/messenger/NotificationCenter:screenshotTook	I
    //   521: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   524: aload_0
    //   525: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   528: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   531: aload_0
    //   532: getstatic 5411	org/telegram/messenger/NotificationCenter:blockedUsersDidLoaded	I
    //   535: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   538: aload_0
    //   539: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   542: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   545: aload_0
    //   546: getstatic 5417	org/telegram/messenger/NotificationCenter:FileNewChunkAvailable	I
    //   549: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   552: aload_0
    //   553: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   556: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   559: aload_0
    //   560: getstatic 5423	org/telegram/messenger/NotificationCenter:didCreatedNewDeleteTask	I
    //   563: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   566: aload_0
    //   567: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   570: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   573: aload_0
    //   574: getstatic 5427	org/telegram/messenger/NotificationCenter:messagePlayingDidStarted	I
    //   577: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   580: aload_0
    //   581: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   584: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   587: aload_0
    //   588: getstatic 5462	org/telegram/messenger/NotificationCenter:updateMessageMedia	I
    //   591: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   594: aload_0
    //   595: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   598: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   601: aload_0
    //   602: getstatic 5482	org/telegram/messenger/NotificationCenter:replaceMessagesObjects	I
    //   605: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   608: aload_0
    //   609: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   612: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   615: aload_0
    //   616: getstatic 5498	org/telegram/messenger/NotificationCenter:notificationsSettingsUpdated	I
    //   619: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   622: aload_0
    //   623: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   626: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   629: aload_0
    //   630: getstatic 5501	org/telegram/messenger/NotificationCenter:didLoadedReplyMessages	I
    //   633: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   636: aload_0
    //   637: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   640: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   643: aload_0
    //   644: getstatic 5507	org/telegram/messenger/NotificationCenter:didReceivedWebpages	I
    //   647: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   650: aload_0
    //   651: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   654: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   657: aload_0
    //   658: getstatic 5514	org/telegram/messenger/NotificationCenter:didReceivedWebpagesInUpdates	I
    //   661: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   664: aload_0
    //   665: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   668: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   671: aload_0
    //   672: getstatic 5520	org/telegram/messenger/NotificationCenter:messagesReadContent	I
    //   675: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   678: aload_0
    //   679: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   682: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   685: aload_0
    //   686: getstatic 5526	org/telegram/messenger/NotificationCenter:botInfoDidLoaded	I
    //   689: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   692: aload_0
    //   693: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   696: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   699: aload_0
    //   700: getstatic 5043	org/telegram/messenger/NotificationCenter:botKeyboardDidLoaded	I
    //   703: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   706: aload_0
    //   707: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   710: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   713: aload_0
    //   714: getstatic 5529	org/telegram/messenger/NotificationCenter:chatSearchResultsAvailable	I
    //   717: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   720: aload_0
    //   721: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   724: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   727: aload_0
    //   728: getstatic 5535	org/telegram/messenger/NotificationCenter:chatSearchResultsLoading	I
    //   731: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   734: aload_0
    //   735: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   738: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   741: aload_0
    //   742: getstatic 5538	org/telegram/messenger/NotificationCenter:didUpdatedMessagesViews	I
    //   745: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   748: aload_0
    //   749: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   752: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   755: aload_0
    //   756: getstatic 5376	org/telegram/messenger/NotificationCenter:chatInfoCantLoad	I
    //   759: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   762: aload_0
    //   763: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   766: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   769: aload_0
    //   770: getstatic 5504	org/telegram/messenger/NotificationCenter:didLoadedPinnedMessage	I
    //   773: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   776: aload_0
    //   777: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   780: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   783: aload_0
    //   784: getstatic 5550	org/telegram/messenger/NotificationCenter:peerSettingsDidLoaded	I
    //   787: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   790: aload_0
    //   791: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   794: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   797: aload_0
    //   798: getstatic 5553	org/telegram/messenger/NotificationCenter:newDraftReceived	I
    //   801: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   804: aload_0
    //   805: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   808: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   811: aload_0
    //   812: getstatic 5558	org/telegram/messenger/NotificationCenter:userInfoDidLoaded	I
    //   815: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   818: invokestatic 6753	org/telegram/messenger/NotificationCenter:getGlobalInstance	()Lorg/telegram/messenger/NotificationCenter;
    //   821: aload_0
    //   822: getstatic 5561	org/telegram/messenger/NotificationCenter:didSetNewWallpapper	I
    //   825: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   828: aload_0
    //   829: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   832: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   835: aload_0
    //   836: getstatic 5565	org/telegram/messenger/NotificationCenter:channelRightsUpdated	I
    //   839: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   842: aload_0
    //   843: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   846: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   849: aload_0
    //   850: getstatic 5571	org/telegram/messenger/NotificationCenter:updateMentionsCount	I
    //   853: invokevirtual 6749	org/telegram/messenger/NotificationCenter:addObserver	(Ljava/lang/Object;I)V
    //   856: aload_0
    //   857: invokespecial 6755	org/telegram/ui/ActionBar/BaseFragment:onFragmentCreate	()Z
    //   860: pop
    //   861: aload_0
    //   862: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   865: ifnonnull +24 -> 889
    //   868: aload_0
    //   869: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   872: ifne +17 -> 889
    //   875: aload_0
    //   876: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   879: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   882: aload_0
    //   883: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   886: invokevirtual 6758	org/telegram/messenger/DataQuery:loadBotKeyboard	(J)V
    //   889: aload_0
    //   890: iconst_1
    //   891: putfield 2304	org/telegram/ui/ChatActivity:loading	Z
    //   894: aload_0
    //   895: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   898: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   901: aload_0
    //   902: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   905: aload_0
    //   906: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   909: invokevirtual 6761	org/telegram/messenger/MessagesController:loadPeerSettings	(Lorg/telegram/tgnet/TLRPC$User;Lorg/telegram/tgnet/TLRPC$Chat;)V
    //   912: aload_0
    //   913: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   916: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   919: aload_0
    //   920: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   923: iconst_1
    //   924: invokevirtual 6764	org/telegram/messenger/MessagesController:setLastCreatedDialogId	(JZ)V
    //   927: aload_0
    //   928: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   931: ifne +874 -> 1805
    //   934: aload_0
    //   935: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   938: invokestatic 3867	org/telegram/messenger/MessagesController:getNotificationsSettings	(I)Landroid/content/SharedPreferences;
    //   941: astore 9
    //   943: aload 9
    //   945: new 1905	java/lang/StringBuilder
    //   948: dup
    //   949: invokespecial 1906	java/lang/StringBuilder:<init>	()V
    //   952: ldc_w 6766
    //   955: invokevirtual 1912	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   958: aload_0
    //   959: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   962: invokevirtual 2111	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   965: invokevirtual 1919	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   968: iconst_0
    //   969: invokeinterface 2117 3 0
    //   974: istore_3
    //   975: iload_3
    //   976: ifeq +53 -> 1029
    //   979: aload_0
    //   980: iconst_1
    //   981: putfield 1452	org/telegram/ui/ChatActivity:wasManualScroll	Z
    //   984: aload_0
    //   985: iconst_1
    //   986: putfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   989: aload_0
    //   990: aload 9
    //   992: new 1905	java/lang/StringBuilder
    //   995: dup
    //   996: invokespecial 1906	java/lang/StringBuilder:<init>	()V
    //   999: ldc_w 6768
    //   1002: invokevirtual 1912	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1005: aload_0
    //   1006: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1009: invokevirtual 2111	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   1012: invokevirtual 1919	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1015: iconst_0
    //   1016: invokeinterface 2117 3 0
    //   1021: putfield 744	org/telegram/ui/ChatActivity:startLoadFromMessageOffset	I
    //   1024: aload_0
    //   1025: iload_3
    //   1026: putfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1029: aload_0
    //   1030: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1033: ifeq +898 -> 1931
    //   1036: aload_0
    //   1037: getfield 706	org/telegram/ui/ChatActivity:waitingForLoad	Ljava/util/ArrayList;
    //   1040: aload_0
    //   1041: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1044: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1047: invokevirtual 2308	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   1050: pop
    //   1051: iload_1
    //   1052: ifeq +779 -> 1831
    //   1055: aload_0
    //   1056: iload_1
    //   1057: i2l
    //   1058: putfield 1462	org/telegram/ui/ChatActivity:mergeDialogId	J
    //   1061: aload_0
    //   1062: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1065: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1068: astore 9
    //   1070: aload_0
    //   1071: getfield 1462	org/telegram/ui/ChatActivity:mergeDialogId	J
    //   1074: lstore 6
    //   1076: aload_0
    //   1077: getfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   1080: ifeq +733 -> 1813
    //   1083: bipush 50
    //   1085: istore_1
    //   1086: aload_0
    //   1087: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1090: istore_3
    //   1091: aload_0
    //   1092: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1095: istore 4
    //   1097: aload_0
    //   1098: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1101: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1104: istore 8
    //   1106: aload_0
    //   1107: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1110: istore 5
    //   1112: aload_0
    //   1113: iload 5
    //   1115: iconst_1
    //   1116: iadd
    //   1117: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1120: aload 9
    //   1122: lload 6
    //   1124: iload_1
    //   1125: iload_3
    //   1126: iconst_0
    //   1127: iconst_1
    //   1128: iconst_0
    //   1129: iload 4
    //   1131: iconst_3
    //   1132: iconst_0
    //   1133: iload 8
    //   1135: iload 5
    //   1137: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   1140: aload_0
    //   1141: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1144: ifnull +66 -> 1210
    //   1147: aconst_null
    //   1148: astore 9
    //   1150: aload_0
    //   1151: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1154: ifeq +13 -> 1167
    //   1157: new 6724	java/util/concurrent/CountDownLatch
    //   1160: dup
    //   1161: iconst_1
    //   1162: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1165: astore 9
    //   1167: aload_0
    //   1168: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1171: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1174: aload_0
    //   1175: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1178: getfield 2052	org/telegram/tgnet/TLRPC$Chat:id	I
    //   1181: aload 9
    //   1183: aload_0
    //   1184: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1187: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1190: invokevirtual 6772	org/telegram/messenger/MessagesController:loadChatInfo	(ILjava/util/concurrent/CountDownLatch;Z)V
    //   1193: aload_0
    //   1194: getfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1197: ifeq +13 -> 1210
    //   1200: aload 9
    //   1202: ifnull +8 -> 1210
    //   1205: aload 9
    //   1207: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1210: iload_2
    //   1211: ifeq +825 -> 2036
    //   1214: aload_0
    //   1215: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1218: getfield 2065	org/telegram/tgnet/TLRPC$User:bot	Z
    //   1221: ifeq +815 -> 2036
    //   1224: aload_0
    //   1225: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1228: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   1231: iload_2
    //   1232: iconst_1
    //   1233: aload_0
    //   1234: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1237: invokevirtual 5366	org/telegram/messenger/DataQuery:loadBotInfo	(IZI)V
    //   1240: aload_0
    //   1241: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1244: ifnull +30 -> 1274
    //   1247: aload_0
    //   1248: aload_0
    //   1249: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1252: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1255: getfield 5414	org/telegram/messenger/MessagesController:blockedUsers	Ljava/util/ArrayList;
    //   1258: aload_0
    //   1259: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1262: getfield 2041	org/telegram/tgnet/TLRPC$User:id	I
    //   1265: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1268: invokevirtual 5194	java/util/ArrayList:contains	(Ljava/lang/Object;)Z
    //   1271: putfield 676	org/telegram/ui/ChatActivity:userBlocked	Z
    //   1274: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1277: ifeq +37 -> 1314
    //   1280: aload_0
    //   1281: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1284: invokestatic 5031	org/telegram/messenger/NotificationCenter:getInstance	(I)Lorg/telegram/messenger/NotificationCenter;
    //   1287: getstatic 6775	org/telegram/messenger/NotificationCenter:openedChatChanged	I
    //   1290: iconst_2
    //   1291: anewarray 1822	java/lang/Object
    //   1294: dup
    //   1295: iconst_0
    //   1296: aload_0
    //   1297: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1300: invokestatic 2935	java/lang/Long:valueOf	(J)Ljava/lang/Long;
    //   1303: aastore
    //   1304: dup
    //   1305: iconst_1
    //   1306: iconst_0
    //   1307: invokestatic 6778	java/lang/Boolean:valueOf	(Z)Ljava/lang/Boolean;
    //   1310: aastore
    //   1311: invokevirtual 6782	org/telegram/messenger/NotificationCenter:postNotificationName	(I[Ljava/lang/Object;)V
    //   1314: aload_0
    //   1315: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1318: ifnull +33 -> 1351
    //   1321: aload_0
    //   1322: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1325: getfield 1686	org/telegram/tgnet/TLRPC$EncryptedChat:layer	I
    //   1328: invokestatic 6785	org/telegram/messenger/AndroidUtilities:getMyLayerVersion	(I)I
    //   1331: bipush 73
    //   1333: if_icmpeq +18 -> 1351
    //   1336: aload_0
    //   1337: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1340: invokestatic 6790	org/telegram/messenger/SecretChatHelper:getInstance	(I)Lorg/telegram/messenger/SecretChatHelper;
    //   1343: aload_0
    //   1344: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1347: aconst_null
    //   1348: invokevirtual 6794	org/telegram/messenger/SecretChatHelper:sendNotifyLayerMessage	(Lorg/telegram/tgnet/TLRPC$EncryptedChat;Lorg/telegram/tgnet/TLRPC$Message;)V
    //   1351: iconst_1
    //   1352: ireturn
    //   1353: astore 9
    //   1355: aload 9
    //   1357: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1360: goto -1180 -> 180
    //   1363: iconst_0
    //   1364: ireturn
    //   1365: aload_0
    //   1366: iconst_1
    //   1367: putfield 820	org/telegram/ui/ChatActivity:isBroadcast	Z
    //   1370: aload_0
    //   1371: iload_3
    //   1372: invokestatic 6797	org/telegram/messenger/AndroidUtilities:makeBroadcastId	(I)J
    //   1375: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1378: goto -1165 -> 213
    //   1381: iload_2
    //   1382: ifeq +152 -> 1534
    //   1385: aload_0
    //   1386: aload_0
    //   1387: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1390: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1393: iload_2
    //   1394: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1397: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   1400: putfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1403: aload_0
    //   1404: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1407: ifnonnull +71 -> 1478
    //   1410: aload_0
    //   1411: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1414: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   1417: astore 10
    //   1419: new 6724	java/util/concurrent/CountDownLatch
    //   1422: dup
    //   1423: iconst_1
    //   1424: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1427: astore 11
    //   1429: aload 10
    //   1431: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1434: new 192	org/telegram/ui/ChatActivity$6
    //   1437: dup
    //   1438: aload_0
    //   1439: aload 10
    //   1441: iload_2
    //   1442: aload 11
    //   1444: invokespecial 6798	org/telegram/ui/ChatActivity$6:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   1447: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1450: aload 11
    //   1452: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1455: aload_0
    //   1456: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1459: ifnull +73 -> 1532
    //   1462: aload_0
    //   1463: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1466: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1469: aload_0
    //   1470: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1473: iconst_1
    //   1474: invokevirtual 6802	org/telegram/messenger/MessagesController:putUser	(Lorg/telegram/tgnet/TLRPC$User;Z)Z
    //   1477: pop
    //   1478: aload_0
    //   1479: iload_2
    //   1480: i2l
    //   1481: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1484: aload_0
    //   1485: aload_0
    //   1486: getfield 6707	org/telegram/ui/ChatActivity:arguments	Landroid/os/Bundle;
    //   1489: ldc_w 6803
    //   1492: invokevirtual 6718	android/os/Bundle:getString	(Ljava/lang/String;)Ljava/lang/String;
    //   1495: putfield 1114	org/telegram/ui/ChatActivity:botUser	Ljava/lang/String;
    //   1498: aload 9
    //   1500: ifnull -1265 -> 235
    //   1503: aload_0
    //   1504: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1507: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1510: aload_0
    //   1511: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1514: aload 9
    //   1516: invokevirtual 6807	org/telegram/messenger/MessagesController:sendBotStart	(Lorg/telegram/tgnet/TLRPC$User;Ljava/lang/String;)V
    //   1519: goto -1284 -> 235
    //   1522: astore 10
    //   1524: aload 10
    //   1526: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1529: goto -74 -> 1455
    //   1532: iconst_0
    //   1533: ireturn
    //   1534: iload 4
    //   1536: ifeq +267 -> 1803
    //   1539: aload_0
    //   1540: aload_0
    //   1541: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1544: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1547: iload 4
    //   1549: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1552: invokevirtual 6811	org/telegram/messenger/MessagesController:getEncryptedChat	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1555: putfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1558: aload_0
    //   1559: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1562: invokestatic 3877	org/telegram/messenger/MessagesStorage:getInstance	(I)Lorg/telegram/messenger/MessagesStorage;
    //   1565: astore 9
    //   1567: aload_0
    //   1568: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1571: ifnonnull +62 -> 1633
    //   1574: new 6724	java/util/concurrent/CountDownLatch
    //   1577: dup
    //   1578: iconst_1
    //   1579: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1582: astore 10
    //   1584: aload 9
    //   1586: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1589: new 226	org/telegram/ui/ChatActivity$7
    //   1592: dup
    //   1593: aload_0
    //   1594: aload 9
    //   1596: iload 4
    //   1598: aload 10
    //   1600: invokespecial 6812	org/telegram/ui/ChatActivity$7:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;ILjava/util/concurrent/CountDownLatch;)V
    //   1603: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1606: aload 10
    //   1608: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1611: aload_0
    //   1612: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1615: ifnull +174 -> 1789
    //   1618: aload_0
    //   1619: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1622: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1625: aload_0
    //   1626: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1629: iconst_1
    //   1630: invokevirtual 6816	org/telegram/messenger/MessagesController:putEncryptedChat	(Lorg/telegram/tgnet/TLRPC$EncryptedChat;Z)V
    //   1633: aload_0
    //   1634: aload_0
    //   1635: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1638: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1641: aload_0
    //   1642: getfield 1681	org/telegram/ui/ChatActivity:currentEncryptedChat	Lorg/telegram/tgnet/TLRPC$EncryptedChat;
    //   1645: getfield 6817	org/telegram/tgnet/TLRPC$EncryptedChat:user_id	I
    //   1648: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1651: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   1654: putfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1657: aload_0
    //   1658: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1661: ifnonnull +61 -> 1722
    //   1664: new 6724	java/util/concurrent/CountDownLatch
    //   1667: dup
    //   1668: iconst_1
    //   1669: invokespecial 6725	java/util/concurrent/CountDownLatch:<init>	(I)V
    //   1672: astore 10
    //   1674: aload 9
    //   1676: invokevirtual 6729	org/telegram/messenger/MessagesStorage:getStorageQueue	()Lorg/telegram/messenger/DispatchQueue;
    //   1679: new 260	org/telegram/ui/ChatActivity$8
    //   1682: dup
    //   1683: aload_0
    //   1684: aload 9
    //   1686: aload 10
    //   1688: invokespecial 6820	org/telegram/ui/ChatActivity$8:<init>	(Lorg/telegram/ui/ChatActivity;Lorg/telegram/messenger/MessagesStorage;Ljava/util/concurrent/CountDownLatch;)V
    //   1691: invokevirtual 3588	org/telegram/messenger/DispatchQueue:postRunnable	(Ljava/lang/Runnable;)V
    //   1694: aload 10
    //   1696: invokevirtual 6735	java/util/concurrent/CountDownLatch:await	()V
    //   1699: aload_0
    //   1700: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1703: ifnull +98 -> 1801
    //   1706: aload_0
    //   1707: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1710: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1713: aload_0
    //   1714: getfield 2008	org/telegram/ui/ChatActivity:currentUser	Lorg/telegram/tgnet/TLRPC$User;
    //   1717: iconst_1
    //   1718: invokevirtual 6802	org/telegram/messenger/MessagesController:putUser	(Lorg/telegram/tgnet/TLRPC$User;Z)Z
    //   1721: pop
    //   1722: aload_0
    //   1723: iload 4
    //   1725: i2l
    //   1726: bipush 32
    //   1728: lshl
    //   1729: putfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1732: aload_0
    //   1733: getfield 723	org/telegram/ui/ChatActivity:maxMessageId	[I
    //   1736: astore 9
    //   1738: aload_0
    //   1739: getfield 723	org/telegram/ui/ChatActivity:maxMessageId	[I
    //   1742: iconst_1
    //   1743: ldc_w 724
    //   1746: iastore
    //   1747: aload 9
    //   1749: iconst_0
    //   1750: ldc_w 724
    //   1753: iastore
    //   1754: aload_0
    //   1755: getfield 726	org/telegram/ui/ChatActivity:minMessageId	[I
    //   1758: astore 9
    //   1760: aload_0
    //   1761: getfield 726	org/telegram/ui/ChatActivity:minMessageId	[I
    //   1764: iconst_1
    //   1765: ldc_w 721
    //   1768: iastore
    //   1769: aload 9
    //   1771: iconst_0
    //   1772: ldc_w 721
    //   1775: iastore
    //   1776: goto -1541 -> 235
    //   1779: astore 10
    //   1781: aload 10
    //   1783: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1786: goto -175 -> 1611
    //   1789: iconst_0
    //   1790: ireturn
    //   1791: astore 9
    //   1793: aload 9
    //   1795: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   1798: goto -99 -> 1699
    //   1801: iconst_0
    //   1802: ireturn
    //   1803: iconst_0
    //   1804: ireturn
    //   1805: aload_0
    //   1806: iconst_1
    //   1807: putfield 2339	org/telegram/ui/ChatActivity:needSelectFromMessageId	Z
    //   1810: goto -781 -> 1029
    //   1813: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1816: ifeq +9 -> 1825
    //   1819: bipush 30
    //   1821: istore_1
    //   1822: goto -736 -> 1086
    //   1825: bipush 20
    //   1827: istore_1
    //   1828: goto -742 -> 1086
    //   1831: aload_0
    //   1832: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1835: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1838: astore 9
    //   1840: aload_0
    //   1841: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1844: lstore 6
    //   1846: aload_0
    //   1847: getfield 5057	org/telegram/ui/ChatActivity:loadingFromOldPosition	Z
    //   1850: ifeq +63 -> 1913
    //   1853: bipush 50
    //   1855: istore_1
    //   1856: aload_0
    //   1857: getfield 2335	org/telegram/ui/ChatActivity:startLoadFromMessageId	I
    //   1860: istore_3
    //   1861: aload_0
    //   1862: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1865: istore 4
    //   1867: aload_0
    //   1868: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1871: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1874: istore 8
    //   1876: aload_0
    //   1877: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1880: istore 5
    //   1882: aload_0
    //   1883: iload 5
    //   1885: iconst_1
    //   1886: iadd
    //   1887: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1890: aload 9
    //   1892: lload 6
    //   1894: iload_1
    //   1895: iload_3
    //   1896: iconst_0
    //   1897: iconst_1
    //   1898: iconst_0
    //   1899: iload 4
    //   1901: iconst_3
    //   1902: iconst_0
    //   1903: iload 8
    //   1905: iload 5
    //   1907: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   1910: goto -770 -> 1140
    //   1913: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1916: ifeq +9 -> 1925
    //   1919: bipush 30
    //   1921: istore_1
    //   1922: goto -66 -> 1856
    //   1925: bipush 20
    //   1927: istore_1
    //   1928: goto -72 -> 1856
    //   1931: aload_0
    //   1932: getfield 706	org/telegram/ui/ChatActivity:waitingForLoad	Ljava/util/ArrayList;
    //   1935: aload_0
    //   1936: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1939: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   1942: invokevirtual 2308	java/util/ArrayList:add	(Ljava/lang/Object;)Z
    //   1945: pop
    //   1946: aload_0
    //   1947: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   1950: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   1953: astore 9
    //   1955: aload_0
    //   1956: getfield 1168	org/telegram/ui/ChatActivity:dialog_id	J
    //   1959: lstore 6
    //   1961: invokestatic 2890	org/telegram/messenger/AndroidUtilities:isTablet	()Z
    //   1964: ifeq +56 -> 2020
    //   1967: bipush 30
    //   1969: istore_1
    //   1970: aload_0
    //   1971: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   1974: istore_3
    //   1975: aload_0
    //   1976: getfield 1617	org/telegram/ui/ChatActivity:currentChat	Lorg/telegram/tgnet/TLRPC$Chat;
    //   1979: invokestatic 1702	org/telegram/messenger/ChatObject:isChannel	(Lorg/telegram/tgnet/TLRPC$Chat;)Z
    //   1982: istore 8
    //   1984: aload_0
    //   1985: getfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1988: istore 4
    //   1990: aload_0
    //   1991: iload 4
    //   1993: iconst_1
    //   1994: iadd
    //   1995: putfield 1105	org/telegram/ui/ChatActivity:lastLoadIndex	I
    //   1998: aload 9
    //   2000: lload 6
    //   2002: iload_1
    //   2003: iconst_0
    //   2004: iconst_0
    //   2005: iconst_1
    //   2006: iconst_0
    //   2007: iload_3
    //   2008: iconst_2
    //   2009: iconst_0
    //   2010: iload 8
    //   2012: iload 4
    //   2014: invokevirtual 2313	org/telegram/messenger/MessagesController:loadMessages	(JIIIZIIIIZI)V
    //   2017: goto -877 -> 1140
    //   2020: bipush 20
    //   2022: istore_1
    //   2023: goto -53 -> 1970
    //   2026: astore 9
    //   2028: aload 9
    //   2030: invokestatic 2263	org/telegram/messenger/FileLog:e	(Ljava/lang/Throwable;)V
    //   2033: goto -823 -> 1210
    //   2036: aload_0
    //   2037: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2040: instanceof 2069
    //   2043: ifeq -803 -> 1240
    //   2046: iconst_0
    //   2047: istore_1
    //   2048: iload_1
    //   2049: aload_0
    //   2050: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2053: getfield 2075	org/telegram/tgnet/TLRPC$ChatFull:participants	Lorg/telegram/tgnet/TLRPC$ChatParticipants;
    //   2056: getfield 2079	org/telegram/tgnet/TLRPC$ChatParticipants:participants	Ljava/util/ArrayList;
    //   2059: invokevirtual 1592	java/util/ArrayList:size	()I
    //   2062: if_icmpge -822 -> 1240
    //   2065: aload_0
    //   2066: getfield 2067	org/telegram/ui/ChatActivity:info	Lorg/telegram/tgnet/TLRPC$ChatFull;
    //   2069: getfield 2075	org/telegram/tgnet/TLRPC$ChatFull:participants	Lorg/telegram/tgnet/TLRPC$ChatParticipants;
    //   2072: getfield 2079	org/telegram/tgnet/TLRPC$ChatParticipants:participants	Ljava/util/ArrayList;
    //   2075: iload_1
    //   2076: invokevirtual 1595	java/util/ArrayList:get	(I)Ljava/lang/Object;
    //   2079: checkcast 2081	org/telegram/tgnet/TLRPC$ChatParticipant
    //   2082: astore 9
    //   2084: aload_0
    //   2085: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   2088: invokestatic 1992	org/telegram/messenger/MessagesController:getInstance	(I)Lorg/telegram/messenger/MessagesController;
    //   2091: aload 9
    //   2093: getfield 2082	org/telegram/tgnet/TLRPC$ChatParticipant:user_id	I
    //   2096: invokestatic 2046	java/lang/Integer:valueOf	(I)Ljava/lang/Integer;
    //   2099: invokevirtual 2050	org/telegram/messenger/MessagesController:getUser	(Ljava/lang/Integer;)Lorg/telegram/tgnet/TLRPC$User;
    //   2102: astore 9
    //   2104: aload 9
    //   2106: ifnull +31 -> 2137
    //   2109: aload 9
    //   2111: getfield 2065	org/telegram/tgnet/TLRPC$User:bot	Z
    //   2114: ifeq +23 -> 2137
    //   2117: aload_0
    //   2118: getfield 896	org/telegram/ui/ChatActivity:currentAccount	I
    //   2121: invokestatic 1661	org/telegram/messenger/DataQuery:getInstance	(I)Lorg/telegram/messenger/DataQuery;
    //   2124: aload 9
    //   2126: getfield 2041	org/telegram/tgnet/TLRPC$User:id	I
    //   2129: iconst_1
    //   2130: aload_0
    //   2131: getfield 996	org/telegram/ui/ChatActivity:classGuid	I
    //   2134: invokevirtual 5366	org/telegram/messenger/DataQuery:loadBotInfo	(IZI)V
    //   2137: iload_1
    //   2138: iconst_1
    //   2139: iadd
    //   2140: istore_1
    //   2141: goto -93 -> 2048
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	2144	0	this	ChatActivity
    //   90	2051	1	i	int
    //   23	1457	2	j	int
    //   11	1997	3	k	int
    //   35	1978	4	m	int
    //   1110	796	5	n	int
    //   1074	927	6	l	long
    //   1104	907	8	bool	boolean
    //   62	1144	9	localObject1	Object
    //   1353	162	9	localException1	Exception
    //   1565	205	9	localObject2	Object
    //   1791	3	9	localException2	Exception
    //   1838	161	9	localMessagesController	MessagesController
    //   2026	3	9	localException3	Exception
    //   2082	43	9	localObject3	Object
    //   152	1288	10	localMessagesStorage	MessagesStorage
    //   1522	3	10	localException4	Exception
    //   1582	113	10	localCountDownLatch1	CountDownLatch
    //   1779	3	10	localException5	Exception
    //   1427	24	11	localCountDownLatch2	CountDownLatch
    // Exception table:
    //   from	to	target	type
    //   175	180	1353	java/lang/Exception
    //   1450	1455	1522	java/lang/Exception
    //   1606	1611	1779	java/lang/Exception
    //   1694	1699	1791	java/lang/Exception
    //   1205	1210	2026	java/lang/Exception
  }
  
  public void onFragmentDestroy()
  {
    super.onFragmentDestroy();
    if (this.chatActivityEnterView != null) {
      this.chatActivityEnterView.onDestroy();
    }
    if (this.mentionsAdapter != null) {
      this.mentionsAdapter.onDestroy();
    }
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.dismissInternal();
    }
    MessagesController.getInstance(this.currentAccount).setLastCreatedDialogId(this.dialog_id, false);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDidLoaded);
    NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.emojiDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateInterfaces);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedNewMessages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.closeChats);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesRead);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesDeleted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.historyCleared);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageReceivedByServer);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageReceivedByAck);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messageSendError);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatInfoDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.encryptedChatUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesReadEncrypted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.contactsDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingProgressDidChanged);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingDidReset);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.screenshotTook);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.blockedUsersDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.FileNewChunkAvailable);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didCreatedNewDeleteTask);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingDidStarted);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateMessageMedia);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.replaceMessagesObjects);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.notificationsSettingsUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didLoadedReplyMessages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedWebpages);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didReceivedWebpagesInUpdates);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagesReadContent);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.botInfoDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.botKeyboardDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatSearchResultsAvailable);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatSearchResultsLoading);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.messagePlayingPlayStateChanged);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didUpdatedMessagesViews);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.chatInfoCantLoad);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.didLoadedPinnedMessage);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.peerSettingsDidLoaded);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.newDraftReceived);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.userInfoDidLoaded);
    NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.didSetNewWallpapper);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.channelRightsUpdated);
    NotificationCenter.getInstance(this.currentAccount).removeObserver(this, NotificationCenter.updateMentionsCount);
    if (AndroidUtilities.isTablet()) {
      NotificationCenter.getInstance(this.currentAccount).postNotificationName(NotificationCenter.openedChatChanged, new Object[] { Long.valueOf(this.dialog_id), Boolean.valueOf(true) });
    }
    if (this.currentUser != null) {
      MediaController.getInstance().stopMediaObserver();
    }
    if (this.currentEncryptedChat != null) {}
    try
    {
      if ((Build.VERSION.SDK_INT >= 23) && ((SharedConfig.passcodeHash.length() == 0) || (SharedConfig.allowScreenCapture))) {
        MediaController.getInstance().setFlagSecure(this, false);
      }
    }
    catch (Throwable localThrowable)
    {
      for (;;)
      {
        FileLog.e(localThrowable);
      }
    }
    if (this.currentUser != null) {
      MessagesController.getInstance(this.currentAccount).cancelLoadFullUser(this.currentUser.id);
    }
    AndroidUtilities.removeAdjustResize(getParentActivity(), this.classGuid);
    if (this.stickersAdapter != null) {
      this.stickersAdapter.onDestroy();
    }
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.onDestroy();
    }
    AndroidUtilities.unlockOrientation(getParentActivity());
    if (ChatObject.isChannel(this.currentChat)) {
      MessagesController.getInstance(this.currentAccount).startShortPoll(this.currentChat.id, true);
    }
  }
  
  public void onPause()
  {
    super.onPause();
    MessagesController.getInstance(this.currentAccount).markDialogAsReadNow(this.dialog_id);
    MediaController.getInstance().stopRaiseToEarSensors(this);
    this.paused = true;
    this.wasPaused = true;
    NotificationsController.getInstance(this.currentAccount).setOpenedDialogId(0L);
    Object localObject5 = null;
    Object localObject3 = null;
    Object localObject4 = null;
    boolean bool2 = true;
    Object localObject1 = localObject5;
    Object localObject2 = localObject4;
    boolean bool1 = bool2;
    if (!this.ignoreAttachOnPause)
    {
      localObject1 = localObject5;
      localObject2 = localObject4;
      bool1 = bool2;
      if (this.chatActivityEnterView != null)
      {
        localObject1 = localObject5;
        localObject2 = localObject4;
        bool1 = bool2;
        if (this.bottomOverlayChat.getVisibility() != 0)
        {
          this.chatActivityEnterView.onPause();
          localObject2 = this.replyingMessageObject;
          localObject1 = localObject3;
          if (!this.chatActivityEnterView.isEditingMessage())
          {
            localObject4 = AndroidUtilities.getTrimmedString(this.chatActivityEnterView.getFieldText());
            localObject1 = localObject3;
            if (!TextUtils.isEmpty((CharSequence)localObject4))
            {
              localObject1 = localObject3;
              if (!TextUtils.equals((CharSequence)localObject4, "@gif")) {
                localObject1 = localObject4;
              }
            }
          }
          bool1 = this.chatActivityEnterView.isMessageWebPageSearchEnabled();
          this.chatActivityEnterView.setFieldFocused(false);
        }
      }
    }
    label285:
    label293:
    int m;
    if (this.chatAttachAlert != null)
    {
      if (!this.ignoreAttachOnPause) {
        this.chatAttachAlert.onPause();
      }
    }
    else
    {
      localObject5 = new CharSequence[1];
      localObject5[0] = localObject1;
      localObject3 = DataQuery.getInstance(this.currentAccount).getEntities((CharSequence[])localObject5);
      localObject4 = DataQuery.getInstance(this.currentAccount);
      long l = this.dialog_id;
      localObject5 = localObject5[0];
      if (localObject2 == null) {
        break label516;
      }
      localObject1 = ((MessageObject)localObject2).messageOwner;
      if (bool1) {
        break label522;
      }
      bool1 = true;
      ((DataQuery)localObject4).saveDraft(l, (CharSequence)localObject5, (ArrayList)localObject3, (TLRPC.Message)localObject1, bool1);
      MessagesController.getInstance(this.currentAccount).cancelTyping(0, this.dialog_id);
      if (this.pausedOnLastMessage) {
        break label798;
      }
      localObject2 = MessagesController.getNotificationsSettings(this.currentAccount).edit();
      j = 0;
      m = 0;
      i = j;
      k = m;
      if (this.chatLayoutManager == null) {
        break label722;
      }
      n = this.chatLayoutManager.findFirstVisibleItemPosition();
      i = j;
      k = m;
      if (n == 0) {
        break label722;
      }
      localObject1 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(n);
      i = j;
      k = m;
      if (localObject1 == null) {
        break label722;
      }
      i = 0;
      if (!(((RecyclerListView.Holder)localObject1).itemView instanceof ChatMessageCell)) {
        break label528;
      }
      i = ((ChatMessageCell)((RecyclerListView.Holder)localObject1).itemView).getMessageObject().getId();
    }
    for (;;)
    {
      if (i == 0) {
        localObject1 = (RecyclerListView.Holder)this.chatListView.findViewHolderForAdapterPosition(n + 1);
      }
      k = 0;
      i = n - 1;
      for (;;)
      {
        j = k;
        if (i < this.chatAdapter.messagesStartRow) {
          break label579;
        }
        localObject3 = (MessageObject)this.messages.get(i - this.chatAdapter.messagesStartRow);
        if (((MessageObject)localObject3).getId() != 0) {
          break;
        }
        i -= 1;
      }
      this.ignoreAttachOnPause = false;
      break;
      label516:
      localObject1 = null;
      break label285;
      label522:
      bool1 = false;
      break label293;
      label528:
      if ((((RecyclerListView.Holder)localObject1).itemView instanceof ChatActionCell)) {
        i = ((ChatActionCell)((RecyclerListView.Holder)localObject1).itemView).getMessageObject().getId();
      }
    }
    int j = k;
    if (!((MessageObject)localObject3).isOut())
    {
      j = k;
      if (((MessageObject)localObject3).isUnread()) {
        j = 1;
      }
    }
    label579:
    int i1 = 0;
    int n = 0;
    int i = i1;
    int k = m;
    if (localObject1 != null)
    {
      i = i1;
      k = m;
      if (j == 0)
      {
        if (!(((RecyclerListView.Holder)localObject1).itemView instanceof ChatMessageCell)) {
          break label817;
        }
        j = ((ChatMessageCell)((RecyclerListView.Holder)localObject1).itemView).getMessageObject().getId();
        if (((j <= 0) || (this.currentEncryptedChat != null)) && ((j >= 0) || (this.currentEncryptedChat == null))) {
          break label849;
        }
        m = ((RecyclerListView.Holder)localObject1).itemView.getBottom() - this.chatListView.getMeasuredHeight();
        i = j;
        k = m;
        if (BuildVars.LOGS_ENABLED)
        {
          FileLog.d("save offset = " + m + " for mid " + j);
          k = m;
          i = j;
        }
      }
    }
    label722:
    if (i != 0)
    {
      ((SharedPreferences.Editor)localObject2).putInt("diditem" + this.dialog_id, i);
      ((SharedPreferences.Editor)localObject2).putInt("diditemo" + this.dialog_id, k);
    }
    for (;;)
    {
      ((SharedPreferences.Editor)localObject2).commit();
      label798:
      if (this.currentUser != null)
      {
        this.chatLeaveTime = System.currentTimeMillis();
        updateInformationForScreenshotDetector();
      }
      return;
      label817:
      j = n;
      if (!(((RecyclerListView.Holder)localObject1).itemView instanceof ChatActionCell)) {
        break;
      }
      j = ((ChatActionCell)((RecyclerListView.Holder)localObject1).itemView).getMessageObject().getId();
      break;
      label849:
      i = 0;
      k = m;
      break label722;
      this.pausedOnLastMessage = true;
      ((SharedPreferences.Editor)localObject2).remove("diditem" + this.dialog_id);
      ((SharedPreferences.Editor)localObject2).remove("diditemo" + this.dialog_id);
    }
  }
  
  protected void onRemoveFromParent()
  {
    MediaController.getInstance().setTextureView(this.videoTextureView, null, null, false);
  }
  
  public void onRequestPermissionsResultFragment(int paramInt, String[] paramArrayOfString, int[] paramArrayOfInt)
  {
    if (this.chatActivityEnterView != null) {
      this.chatActivityEnterView.onRequestPermissionsResultFragment(paramInt, paramArrayOfString, paramArrayOfInt);
    }
    if (this.mentionsAdapter != null) {
      this.mentionsAdapter.onRequestPermissionsResultFragment(paramInt, paramArrayOfString, paramArrayOfInt);
    }
    if ((paramInt == 17) && (this.chatAttachAlert != null)) {
      this.chatAttachAlert.checkCamera(false);
    }
    do
    {
      do
      {
        return;
        if (paramInt != 21) {
          break;
        }
      } while ((getParentActivity() == null) || (paramArrayOfInt == null) || (paramArrayOfInt.length == 0) || (paramArrayOfInt[0] == 0));
      paramArrayOfString = new AlertDialog.Builder(getParentActivity());
      paramArrayOfString.setTitle(LocaleController.getString("AppName", 2131492981));
      paramArrayOfString.setMessage(LocaleController.getString("PermissionNoAudioVideo", 2131494143));
      paramArrayOfString.setNegativeButton(LocaleController.getString("PermissionOpenSettings", 2131494147), new DialogInterface.OnClickListener()
      {
        @TargetApi(9)
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          try
          {
            paramAnonymousDialogInterface = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
            paramAnonymousDialogInterface.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
            ChatActivity.this.getParentActivity().startActivity(paramAnonymousDialogInterface);
            return;
          }
          catch (Exception paramAnonymousDialogInterface)
          {
            FileLog.e(paramAnonymousDialogInterface);
          }
        }
      });
      paramArrayOfString.setPositiveButton(LocaleController.getString("OK", 2131494028), null);
      paramArrayOfString.show();
      return;
      if ((paramInt == 19) && (paramArrayOfInt != null) && (paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0))
      {
        processSelectedAttach(0);
        return;
      }
      if ((paramInt == 20) && (paramArrayOfInt != null) && (paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0))
      {
        processSelectedAttach(2);
        return;
      }
    } while ((paramInt != 101) || (this.currentUser == null));
    if ((paramArrayOfInt.length > 0) && (paramArrayOfInt[0] == 0))
    {
      VoIPHelper.startCall(this.currentUser, getParentActivity(), MessagesController.getInstance(this.currentAccount).getUserFull(this.currentUser.id));
      return;
    }
    VoIPHelper.permissionDenied(getParentActivity(), null);
  }
  
  public void onResume()
  {
    super.onResume();
    AndroidUtilities.requestAdjustResize(getParentActivity(), this.classGuid);
    MediaController.getInstance().startRaiseToEarSensors(this);
    checkRaiseSensors();
    if (this.chatAttachAlert != null) {
      this.chatAttachAlert.onResume();
    }
    checkActionBarMenu();
    if ((this.replyImageLocation != null) && (this.replyImageView != null)) {
      this.replyImageView.setImage(this.replyImageLocation, "50_50", (Drawable)null);
    }
    if ((this.pinnedImageLocation != null) && (this.pinnedMessageImageView != null)) {
      this.pinnedMessageImageView.setImage(this.pinnedImageLocation, "50_50", (Drawable)null);
    }
    NotificationsController.getInstance(this.currentAccount).setOpenedDialogId(this.dialog_id);
    boolean bool;
    int i;
    if (this.scrollToTopOnResume)
    {
      if ((!this.scrollToTopUnReadOnResume) || (this.scrollToMessage == null)) {
        break label432;
      }
      if (this.chatListView != null)
      {
        bool = true;
        if (this.scrollToMessagePosition != 56536) {
          break label401;
        }
        i = getScrollOffsetForMessage(this.scrollToMessage);
        bool = false;
        this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(this.scrollToMessage), i, bool);
      }
    }
    for (;;)
    {
      this.scrollToTopUnReadOnResume = false;
      this.scrollToTopOnResume = false;
      this.scrollToMessage = null;
      this.paused = false;
      this.pausedOnLastMessage = false;
      checkScrollForLoad(false);
      if (this.wasPaused)
      {
        this.wasPaused = false;
        if (this.chatAdapter != null) {
          this.chatAdapter.notifyDataSetChanged();
        }
      }
      fixLayout();
      applyDraftMaybe(false);
      if ((this.bottomOverlayChat != null) && (this.bottomOverlayChat.getVisibility() != 0)) {
        this.chatActivityEnterView.setFieldFocused(true);
      }
      if (this.chatActivityEnterView != null) {
        this.chatActivityEnterView.onResume();
      }
      if (this.currentUser != null)
      {
        this.chatEnterTime = System.currentTimeMillis();
        this.chatLeaveTime = 0L;
      }
      if (this.startVideoEdit != null) {
        AndroidUtilities.runOnUIThread(new Runnable()
        {
          public void run()
          {
            ChatActivity.this.openVideoEditor(ChatActivity.this.startVideoEdit, null);
            ChatActivity.access$26202(ChatActivity.this, null);
          }
        });
      }
      if ((this.chatListView != null) && ((this.chatActivityEnterView == null) || (!this.chatActivityEnterView.isEditingMessage())))
      {
        this.chatListView.setOnItemLongClickListener(this.onItemLongClickListener);
        this.chatListView.setOnItemClickListener(this.onItemClickListener);
        this.chatListView.setLongClickable(true);
      }
      checkBotCommands();
      return;
      label401:
      if (this.scrollToMessagePosition == 55536)
      {
        i = -AndroidUtilities.dp(11.0F);
        bool = false;
        break;
      }
      i = this.scrollToMessagePosition;
      break;
      label432:
      moveScrollToLastMessage();
    }
  }
  
  public void onTransitionAnimationEnd(boolean paramBoolean1, boolean paramBoolean2)
  {
    NotificationCenter.getInstance(this.currentAccount).setAnimationInProgress(false);
    int i;
    SharedPreferences localSharedPreferences;
    if (paramBoolean1)
    {
      this.openAnimationEnded = true;
      if (this.currentUser != null) {
        MessagesController.getInstance(this.currentAccount).loadFullUser(this.currentUser, this.classGuid, false);
      }
      if (Build.VERSION.SDK_INT >= 21) {
        createChatAttachView();
      }
      if ((this.chatActivityEnterView.hasRecordVideo()) && (!this.chatActivityEnterView.isSendButtonVisible()))
      {
        i = 0;
        if (this.currentChat != null)
        {
          if ((!ChatObject.isChannel(this.currentChat)) || (this.currentChat.megagroup)) {
            break label183;
          }
          i = 1;
        }
        localSharedPreferences = MessagesController.getGlobalMainSettings();
        if (i == 0) {
          break label188;
        }
      }
    }
    label183:
    label188:
    for (String str = "needShowRoundHintChannel";; str = "needShowRoundHint")
    {
      if ((localSharedPreferences.getBoolean(str, true)) && (Utilities.random.nextFloat() < 0.2F))
      {
        showVoiceHint(false, this.chatActivityEnterView.isInVideoMode());
        localSharedPreferences.edit().putBoolean(str, false).commit();
      }
      return;
      i = 0;
      break;
    }
  }
  
  public void onTransitionAnimationStart(boolean paramBoolean1, boolean paramBoolean2)
  {
    NotificationCenter.getInstance(this.currentAccount).setAllowedNotificationsDutingAnimation(new int[] { NotificationCenter.chatInfoDidLoaded, NotificationCenter.dialogsNeedReload, NotificationCenter.closeChats, NotificationCenter.messagesDidLoaded, NotificationCenter.botKeyboardDidLoaded });
    NotificationCenter.getInstance(this.currentAccount).setAnimationInProgress(true);
    if (paramBoolean1) {
      this.openAnimationEnded = false;
    }
  }
  
  public void openVideoEditor(String paramString1, String paramString2)
  {
    if (getParentActivity() != null)
    {
      final Bitmap localBitmap = ThumbnailUtils.createVideoThumbnail(paramString1, 1);
      PhotoViewer.getInstance().setParentActivity(getParentActivity());
      final ArrayList localArrayList = new ArrayList();
      paramString1 = new MediaController.PhotoEntry(0, 0, 0L, paramString1, 0, true);
      paramString1.caption = paramString2;
      localArrayList.add(paramString1);
      PhotoViewer.getInstance().openPhotoForSelect(localArrayList, 0, 2, new PhotoViewer.EmptyPhotoViewerProvider()
      {
        public boolean canScrollAway()
        {
          return false;
        }
        
        public ImageReceiver.BitmapHolder getThumbForPhoto(MessageObject paramAnonymousMessageObject, TLRPC.FileLocation paramAnonymousFileLocation, int paramAnonymousInt)
        {
          return new ImageReceiver.BitmapHolder(localBitmap, null);
        }
        
        public void sendButtonPressed(int paramAnonymousInt, VideoEditedInfo paramAnonymousVideoEditedInfo)
        {
          ChatActivity.this.sendMedia((MediaController.PhotoEntry)localArrayList.get(0), paramAnonymousVideoEditedInfo);
        }
      }, this);
      return;
    }
    SendMessagesHelper.prepareSendingVideo(paramString1, 0L, 0L, 0, 0, null, this.dialog_id, this.replyingMessageObject, null, null, 0);
    showReplyPanel(false, null, null, null, false);
    DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
  }
  
  public boolean playFirstUnreadVoiceMessage()
  {
    boolean bool2 = false;
    boolean bool1;
    if ((this.chatActivityEnterView != null) && (this.chatActivityEnterView.isRecordingAudioVideo())) {
      bool1 = true;
    }
    do
    {
      do
      {
        do
        {
          return bool1;
          int i = this.messages.size() - 1;
          while (i >= 0)
          {
            Object localObject = (MessageObject)this.messages.get(i);
            if (((((MessageObject)localObject).isVoice()) || (((MessageObject)localObject).isRoundVideo())) && (((MessageObject)localObject).isContentUnread()) && (!((MessageObject)localObject).isOut()))
            {
              MediaController localMediaController = MediaController.getInstance();
              if (MediaController.getInstance().playMessage((MessageObject)localObject)) {}
              for (localObject = createVoiceMessagesPlaylist((MessageObject)localObject, true);; localObject = null)
              {
                localMediaController.setVoiceMessagesPlaylist((ArrayList)localObject, true);
                return true;
              }
            }
            i -= 1;
          }
          bool1 = bool2;
        } while (Build.VERSION.SDK_INT < 23);
        bool1 = bool2;
      } while (getParentActivity() == null);
      bool1 = bool2;
    } while (getParentActivity().checkSelfPermission("android.permission.RECORD_AUDIO") == 0);
    getParentActivity().requestPermissions(new String[] { "android.permission.RECORD_AUDIO" }, 3);
    return true;
  }
  
  public void processInlineBotContextPM(TLRPC.TL_inlineBotSwitchPM paramTL_inlineBotSwitchPM)
  {
    if (paramTL_inlineBotSwitchPM == null) {}
    Bundle localBundle;
    do
    {
      TLRPC.User localUser;
      do
      {
        return;
        localUser = this.mentionsAdapter.getContextBotUser();
      } while (localUser == null);
      this.chatActivityEnterView.setFieldText("");
      if (this.dialog_id == localUser.id)
      {
        this.inlineReturn = this.dialog_id;
        MessagesController.getInstance(this.currentAccount).sendBotStart(this.currentUser, paramTL_inlineBotSwitchPM.start_param);
        return;
      }
      localBundle = new Bundle();
      localBundle.putInt("user_id", localUser.id);
      localBundle.putString("inline_query", paramTL_inlineBotSwitchPM.start_param);
      localBundle.putLong("inline_return", this.dialog_id);
    } while (!MessagesController.getInstance(this.currentAccount).checkCanOpenChat(localBundle, this));
    presentFragment(new ChatActivity(localBundle));
  }
  
  public boolean processSendingText(String paramString)
  {
    return this.chatActivityEnterView.processSendingText(paramString);
  }
  
  public boolean processSwitchButton(TLRPC.TL_keyboardButtonSwitchInline paramTL_keyboardButtonSwitchInline)
  {
    if ((this.inlineReturn == 0L) || (paramTL_keyboardButtonSwitchInline.same_peer) || (this.parentLayout == null)) {
      return false;
    }
    paramTL_keyboardButtonSwitchInline = "@" + this.currentUser.username + " " + paramTL_keyboardButtonSwitchInline.query;
    if (this.inlineReturn == this.dialog_id)
    {
      this.inlineReturn = 0L;
      this.chatActivityEnterView.setFieldText(paramTL_keyboardButtonSwitchInline);
    }
    for (;;)
    {
      return true;
      DataQuery.getInstance(this.currentAccount).saveDraft(this.inlineReturn, paramTL_keyboardButtonSwitchInline, null, null, false);
      if (this.parentLayout.fragmentsStack.size() > 1)
      {
        paramTL_keyboardButtonSwitchInline = (BaseFragment)this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 2);
        if ((!(paramTL_keyboardButtonSwitchInline instanceof ChatActivity)) || (((ChatActivity)paramTL_keyboardButtonSwitchInline).dialog_id != this.inlineReturn)) {
          break;
        }
        finishFragment();
      }
    }
    paramTL_keyboardButtonSwitchInline = new Bundle();
    int i = (int)this.inlineReturn;
    int j = (int)(this.inlineReturn >> 32);
    if (i != 0) {
      if (i > 0) {
        paramTL_keyboardButtonSwitchInline.putInt("user_id", i);
      }
    }
    for (;;)
    {
      presentFragment(new ChatActivity(paramTL_keyboardButtonSwitchInline), true);
      break;
      if (i < 0)
      {
        paramTL_keyboardButtonSwitchInline.putInt("chat_id", -i);
        continue;
        paramTL_keyboardButtonSwitchInline.putInt("enc_id", j);
      }
    }
  }
  
  public void restoreSelfArgs(Bundle paramBundle)
  {
    this.currentPicturePath = paramBundle.getString("path");
  }
  
  public void saveSelfArgs(Bundle paramBundle)
  {
    if (this.currentPicturePath != null) {
      paramBundle.putString("path", this.currentPicturePath);
    }
  }
  
  public void scrollToMessageId(int paramInt1, int paramInt2, boolean paramBoolean1, int paramInt3, boolean paramBoolean2)
  {
    this.wasManualScroll = true;
    Object localObject1 = (MessageObject)this.messagesDict[paramInt3].get(paramInt1);
    int k = 0;
    int i;
    label101:
    int j;
    label120:
    Object localObject2;
    if (localObject1 != null) {
      if (this.messages.indexOf(localObject1) != -1) {
        if (paramBoolean1)
        {
          this.highlightMessageId = paramInt1;
          i = getScrollOffsetForMessage((MessageObject)localObject1);
          if (!paramBoolean2) {
            break label271;
          }
          if (this.messages.get(this.messages.size() - 1) != localObject1) {
            break label244;
          }
          this.chatListView.smoothScrollToPosition(this.chatAdapter.getItemCount() - 1);
          updateVisibleRows();
          int m = 0;
          int n = this.chatListView.getChildCount();
          j = 0;
          i = m;
          if (j < n)
          {
            localObject2 = this.chatListView.getChildAt(j);
            if (!(localObject2 instanceof ChatMessageCell)) {
              break label344;
            }
            localObject2 = ((ChatMessageCell)localObject2).getMessageObject();
            if ((localObject2 == null) || (((MessageObject)localObject2).getId() != ((MessageObject)localObject1).getId())) {
              break label386;
            }
            i = 1;
          }
          label181:
          j = k;
          if (i == 0)
          {
            showPagedownButton(true, true);
            j = k;
          }
        }
      }
    }
    label244:
    label271:
    label344:
    label386:
    long l;
    for (;;)
    {
      if (j != 0)
      {
        if ((this.currentEncryptedChat != null) && (!MessagesStorage.getInstance(this.currentAccount).checkMessageId(this.dialog_id, this.startLoadFromMessageId)))
        {
          return;
          this.highlightMessageId = Integer.MAX_VALUE;
          break;
          this.chatListView.smoothScrollToPosition(this.chatAdapter.messagesStartRow + this.messages.indexOf(localObject1));
          break label101;
          if (this.messages.get(this.messages.size() - 1) == localObject1)
          {
            this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.getItemCount() - 1, i, false);
            break label101;
          }
          this.chatLayoutManager.scrollToPositionWithOffset(this.chatAdapter.messagesStartRow + this.messages.indexOf(localObject1), i, false);
          break label101;
          if ((localObject2 instanceof ChatActionCell))
          {
            localObject2 = ((ChatActionCell)localObject2).getMessageObject();
            if ((localObject2 != null) && (((MessageObject)localObject2).getId() == ((MessageObject)localObject1).getId()))
            {
              i = 1;
              break label181;
            }
          }
          j += 1;
          break label120;
          j = 1;
          continue;
          j = 1;
          continue;
        }
        this.waitingForLoad.clear();
        this.waitingForReplyMessageLoad = true;
        this.highlightMessageId = Integer.MAX_VALUE;
        this.scrollToMessagePosition = 55536;
        this.startLoadFromMessageId = paramInt1;
        if (paramInt1 == this.createUnreadMessageAfterId) {
          this.createUnreadMessageAfterIdLoading = true;
        }
        this.waitingForLoad.add(Integer.valueOf(this.lastLoadIndex));
        localObject1 = MessagesController.getInstance(this.currentAccount);
        if (paramInt3 != 0) {
          break label568;
        }
        l = this.dialog_id;
        if (!AndroidUtilities.isTablet()) {
          break label577;
        }
      }
    }
    label568:
    label577:
    for (paramInt1 = 30;; paramInt1 = 20)
    {
      i = this.startLoadFromMessageId;
      j = this.classGuid;
      paramBoolean2 = ChatObject.isChannel(this.currentChat);
      k = this.lastLoadIndex;
      this.lastLoadIndex = (k + 1);
      ((MessagesController)localObject1).loadMessages(l, paramInt1, i, 0, true, 0, j, 3, 0, paramBoolean2, k);
      this.returnToMessageId = paramInt2;
      this.returnToLoadIndex = paramInt3;
      this.needSelectFromMessageId = paramBoolean1;
      return;
      l = this.mergeDialogId;
      break;
    }
  }
  
  public void sendMedia(MediaController.PhotoEntry paramPhotoEntry, VideoEditedInfo paramVideoEditedInfo)
  {
    if (paramPhotoEntry.isVideo) {
      if (paramVideoEditedInfo != null)
      {
        SendMessagesHelper.prepareSendingVideo(paramPhotoEntry.path, paramVideoEditedInfo.estimatedSize, paramVideoEditedInfo.estimatedDuration, paramVideoEditedInfo.resultWidth, paramVideoEditedInfo.resultHeight, paramVideoEditedInfo, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.ttl);
        showReplyPanel(false, null, null, null, false);
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
      }
    }
    do
    {
      return;
      SendMessagesHelper.prepareSendingVideo(paramPhotoEntry.path, 0L, 0L, 0, 0, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.ttl);
      break;
      if (paramPhotoEntry.imagePath != null)
      {
        SendMessagesHelper.prepareSendingPhoto(paramPhotoEntry.imagePath, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.stickers, null, paramPhotoEntry.ttl);
        showReplyPanel(false, null, null, null, false);
        DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
        return;
      }
    } while (paramPhotoEntry.path == null);
    SendMessagesHelper.prepareSendingPhoto(paramPhotoEntry.path, null, this.dialog_id, this.replyingMessageObject, paramPhotoEntry.caption, paramPhotoEntry.entities, paramPhotoEntry.stickers, null, paramPhotoEntry.ttl);
    showReplyPanel(false, null, null, null, false);
    DataQuery.getInstance(this.currentAccount).cleanDraft(this.dialog_id, true);
  }
  
  public void setBotUser(String paramString)
  {
    if (this.inlineReturn != 0L)
    {
      MessagesController.getInstance(this.currentAccount).sendBotStart(this.currentUser, paramString);
      return;
    }
    this.botUser = paramString;
    updateBottomOverlay();
  }
  
  protected void setIgnoreAttachOnPause(boolean paramBoolean)
  {
    this.ignoreAttachOnPause = paramBoolean;
  }
  
  public void shareMyContact(final MessageObject paramMessageObject)
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getParentActivity());
    localBuilder.setTitle(LocaleController.getString("ShareYouPhoneNumberTitle", 2131494394));
    if (this.currentUser != null) {
      if (this.currentUser.bot) {
        localBuilder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfoBot", 2131493014));
      }
    }
    for (;;)
    {
      localBuilder.setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
      {
        public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
        {
          SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).sendMessage(UserConfig.getInstance(ChatActivity.this.currentAccount).getCurrentUser(), ChatActivity.this.dialog_id, paramMessageObject, null, null);
          ChatActivity.this.moveScrollToLastMessage();
          ChatActivity.this.showReplyPanel(false, null, null, null, false);
        }
      });
      localBuilder.setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
      showDialog(localBuilder.create());
      return;
      localBuilder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString("AreYouSureShareMyContactInfoUser", 2131493015, new Object[] { PhoneFormat.getInstance().format("+" + UserConfig.getInstance(this.currentAccount).getCurrentUser().phone), ContactsController.formatName(this.currentUser.first_name, this.currentUser.last_name) })));
      continue;
      localBuilder.setMessage(LocaleController.getString("AreYouSureShareMyContactInfo", 2131493013));
    }
  }
  
  public void showAlert(String paramString1, String paramString2)
  {
    if ((this.alertView == null) || (paramString1 == null) || (paramString2 == null)) {
      return;
    }
    if (this.alertView.getTag() != null)
    {
      this.alertView.setTag(null);
      if (this.alertViewAnimator != null)
      {
        this.alertViewAnimator.cancel();
        this.alertViewAnimator = null;
      }
      this.alertView.setVisibility(0);
      this.alertViewAnimator = new AnimatorSet();
      this.alertViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(this.alertView, "translationY", new float[] { 0.0F }) });
      this.alertViewAnimator.setDuration(200L);
      this.alertViewAnimator.addListener(new AnimatorListenerAdapter()
      {
        public void onAnimationCancel(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymousAnimator))) {
            ChatActivity.access$25702(ChatActivity.this, null);
          }
        }
        
        public void onAnimationEnd(Animator paramAnonymousAnimator)
        {
          if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymousAnimator))) {
            ChatActivity.access$25702(ChatActivity.this, null);
          }
        }
      });
      this.alertViewAnimator.start();
    }
    this.alertNameTextView.setText(paramString1);
    this.alertTextView.setText(Emoji.replaceEmoji(paramString2.replace('\n', ' '), this.alertTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
    if (this.hideAlertViewRunnable != null) {
      AndroidUtilities.cancelRunOnUIThread(this.hideAlertViewRunnable);
    }
    paramString1 = new Runnable()
    {
      public void run()
      {
        if (ChatActivity.this.hideAlertViewRunnable != this) {}
        while (ChatActivity.this.alertView.getTag() != null) {
          return;
        }
        ChatActivity.this.alertView.setTag(Integer.valueOf(1));
        if (ChatActivity.this.alertViewAnimator != null)
        {
          ChatActivity.this.alertViewAnimator.cancel();
          ChatActivity.access$25702(ChatActivity.this, null);
        }
        ChatActivity.access$25702(ChatActivity.this, new AnimatorSet());
        ChatActivity.this.alertViewAnimator.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.alertView, "translationY", new float[] { -AndroidUtilities.dp(50.0F) }) });
        ChatActivity.this.alertViewAnimator.setDuration(200L);
        ChatActivity.this.alertViewAnimator.addListener(new AnimatorListenerAdapter()
        {
          public void onAnimationCancel(Animator paramAnonymous2Animator)
          {
            if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymous2Animator))) {
              ChatActivity.access$25702(ChatActivity.this, null);
            }
          }
          
          public void onAnimationEnd(Animator paramAnonymous2Animator)
          {
            if ((ChatActivity.this.alertViewAnimator != null) && (ChatActivity.this.alertViewAnimator.equals(paramAnonymous2Animator)))
            {
              ChatActivity.this.alertView.setVisibility(8);
              ChatActivity.access$25702(ChatActivity.this, null);
            }
          }
        });
        ChatActivity.this.alertViewAnimator.start();
      }
    };
    this.hideAlertViewRunnable = paramString1;
    AndroidUtilities.runOnUIThread(paramString1, 3000L);
  }
  
  public void showOpenGameAlert(final TLRPC.TL_game paramTL_game, final MessageObject paramMessageObject, final String paramString, boolean paramBoolean, final int paramInt)
  {
    TLRPC.User localUser = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(paramInt));
    if (paramBoolean)
    {
      localObject2 = new AlertDialog.Builder(getParentActivity());
      ((AlertDialog.Builder)localObject2).setTitle(LocaleController.getString("AppName", 2131492981));
      if (localUser != null)
      {
        localObject1 = ContactsController.formatName(localUser.first_name, localUser.last_name);
        ((AlertDialog.Builder)localObject2).setMessage(LocaleController.formatString("BotPermissionGameAlert", 2131493091, new Object[] { localObject1 }));
        ((AlertDialog.Builder)localObject2).setPositiveButton(LocaleController.getString("OK", 2131494028), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            ChatActivity.this.showOpenGameAlert(paramTL_game, paramMessageObject, paramString, false, paramInt);
            MessagesController.getNotificationsSettings(ChatActivity.this.currentAccount).edit().putBoolean("askgame_" + paramInt, false).commit();
          }
        });
        ((AlertDialog.Builder)localObject2).setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
        showDialog(((AlertDialog.Builder)localObject2).create());
      }
    }
    do
    {
      return;
      localObject1 = "";
      break;
      if ((Build.VERSION.SDK_INT < 21) || (AndroidUtilities.isTablet()) || (!WebviewActivity.supportWebview())) {
        break label259;
      }
    } while (this.parentLayout.fragmentsStack.get(this.parentLayout.fragmentsStack.size() - 1) != this);
    if ((localUser != null) && (!TextUtils.isEmpty(localUser.username))) {}
    for (Object localObject1 = localUser.username;; localObject1 = "")
    {
      presentFragment(new WebviewActivity(paramString, (String)localObject1, paramTL_game.title, paramTL_game.short_name, paramMessageObject));
      return;
    }
    label259:
    localObject1 = getParentActivity();
    Object localObject2 = paramTL_game.short_name;
    if ((localUser != null) && (localUser.username != null)) {}
    for (paramTL_game = localUser.username;; paramTL_game = "")
    {
      WebviewActivity.openGameInBrowser(paramString, paramMessageObject, (Activity)localObject1, (String)localObject2, paramTL_game);
      return;
    }
  }
  
  public void showOpenUrlAlert(final String paramString, boolean paramBoolean)
  {
    boolean bool = true;
    if ((Browser.isInternalUrl(paramString, null)) || (!paramBoolean))
    {
      localObject = getParentActivity();
      if (this.inlineReturn == 0L) {}
      for (paramBoolean = bool;; paramBoolean = false)
      {
        Browser.openUrl((Context)localObject, paramString, paramBoolean);
        return;
      }
    }
    Object localObject = new AlertDialog.Builder(getParentActivity());
    ((AlertDialog.Builder)localObject).setTitle(LocaleController.getString("AppName", 2131492981));
    ((AlertDialog.Builder)localObject).setMessage(LocaleController.formatString("OpenUrlAlert", 2131494046, new Object[] { paramString }));
    ((AlertDialog.Builder)localObject).setPositiveButton(LocaleController.getString("Open", 2131494040), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        paramAnonymousDialogInterface = ChatActivity.this.getParentActivity();
        String str = paramString;
        if (ChatActivity.this.inlineReturn == 0L) {}
        for (boolean bool = true;; bool = false)
        {
          Browser.openUrl(paramAnonymousDialogInterface, str, bool);
          return;
        }
      }
    });
    ((AlertDialog.Builder)localObject).setNegativeButton(LocaleController.getString("Cancel", 2131493127), null);
    showDialog(((AlertDialog.Builder)localObject).create());
  }
  
  public void showReplyPanel(boolean paramBoolean1, MessageObject paramMessageObject, ArrayList<MessageObject> paramArrayList, TLRPC.WebPage paramWebPage, boolean paramBoolean2)
  {
    if (this.chatActivityEnterView == null) {}
    label200:
    label687:
    label803:
    label821:
    label880:
    label920:
    label1068:
    label1776:
    label1796:
    label1874:
    label1935:
    do
    {
      Object localObject1;
      Object localObject2;
      do
      {
        do
        {
          do
          {
            return;
            if (!paramBoolean1) {
              break;
            }
          } while ((paramMessageObject == null) && (paramArrayList == null) && (paramWebPage == null));
          if ((this.searchItem != null) && (this.actionBar.isSearchFieldVisible()))
          {
            this.actionBar.closeSearchField(false);
            this.chatActivityEnterView.setFieldFocused();
            AndroidUtilities.runOnUIThread(new Runnable()
            {
              public void run()
              {
                if (ChatActivity.this.chatActivityEnterView != null) {
                  ChatActivity.this.chatActivityEnterView.openKeyboard();
                }
              }
            }, 100L);
          }
          paramBoolean2 = false;
          paramBoolean1 = paramBoolean2;
          localObject1 = paramMessageObject;
          localObject2 = paramArrayList;
          if (paramMessageObject != null)
          {
            paramBoolean1 = paramBoolean2;
            localObject1 = paramMessageObject;
            localObject2 = paramArrayList;
            if (paramMessageObject.getDialogId() != this.dialog_id)
            {
              localObject2 = new ArrayList();
              ((ArrayList)localObject2).add(paramMessageObject);
              localObject1 = null;
              paramBoolean1 = true;
            }
          }
          if (localObject1 == null) {
            break;
          }
          this.forwardingMessages = null;
          this.replyingMessageObject = ((MessageObject)localObject1);
          this.chatActivityEnterView.setReplyingMessageObject((MessageObject)localObject1);
        } while (this.foundWebPage != null);
        if (!((MessageObject)localObject1).isFromUser()) {
          break;
        }
        paramMessageObject = MessagesController.getInstance(this.currentAccount).getUser(Integer.valueOf(((MessageObject)localObject1).messageOwner.from_id));
      } while (paramMessageObject == null);
      paramMessageObject = UserObject.getUserName(paramMessageObject);
      this.replyIconImageView.setImageResource(2131165522);
      this.replyNameTextView.setText(paramMessageObject);
      if ((((MessageObject)localObject1).messageOwner.media instanceof TLRPC.TL_messageMediaGame))
      {
        this.replyObjectTextView.setText(Emoji.replaceEmoji(((MessageObject)localObject1).messageOwner.media.game.title, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
        paramMessageObject = (MessageObject)localObject1;
      }
      int i;
      for (;;)
      {
        localObject1 = (FrameLayout.LayoutParams)this.replyNameTextView.getLayoutParams();
        localObject2 = (FrameLayout.LayoutParams)this.replyObjectTextView.getLayoutParams();
        paramArrayList = null;
        if (paramMessageObject != null)
        {
          paramWebPage = FileLoader.getClosestPhotoSizeWithSize(paramMessageObject.photoThumbs2, 80);
          paramArrayList = paramWebPage;
          if (paramWebPage == null) {
            paramArrayList = FileLoader.getClosestPhotoSizeWithSize(paramMessageObject.photoThumbs, 80);
          }
        }
        if ((paramArrayList != null) && (!(paramArrayList instanceof TLRPC.TL_photoSizeEmpty)) && (!(paramArrayList.location instanceof TLRPC.TL_fileLocationUnavailable)) && (paramMessageObject.type != 13) && ((paramMessageObject == null) || (!paramMessageObject.isSecretMedia()))) {
          break label1935;
        }
        this.replyImageView.setImageBitmap(null);
        this.replyImageLocation = null;
        this.replyImageView.setVisibility(4);
        i = AndroidUtilities.dp(52.0F);
        ((FrameLayout.LayoutParams)localObject2).leftMargin = i;
        ((FrameLayout.LayoutParams)localObject1).leftMargin = i;
        this.replyNameTextView.setLayoutParams((ViewGroup.LayoutParams)localObject1);
        this.replyObjectTextView.setLayoutParams((ViewGroup.LayoutParams)localObject2);
        this.chatActivityEnterView.showTopView(false, paramBoolean1);
        return;
        paramMessageObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(((MessageObject)localObject1).messageOwner.to_id.channel_id));
        if (paramMessageObject == null) {
          break;
        }
        paramMessageObject = paramMessageObject.title;
        break label200;
        paramMessageObject = (MessageObject)localObject1;
        if (((MessageObject)localObject1).messageText != null)
        {
          paramArrayList = ((MessageObject)localObject1).messageText.toString();
          paramMessageObject = paramArrayList;
          if (paramArrayList.length() > 150) {
            paramMessageObject = paramArrayList.substring(0, 150);
          }
          paramMessageObject = paramMessageObject.replace('\n', ' ');
          this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
          paramMessageObject = (MessageObject)localObject1;
          continue;
          if (localObject2 != null)
          {
            if (((ArrayList)localObject2).isEmpty()) {
              break;
            }
            this.replyingMessageObject = null;
            this.chatActivityEnterView.setReplyingMessageObject(null);
            this.forwardingMessages = ((ArrayList)localObject2);
            if (this.foundWebPage != null) {
              break;
            }
            this.chatActivityEnterView.setForceShowSendButton(true, false);
            paramWebPage = new ArrayList();
            this.replyIconImageView.setImageResource(2131165520);
            paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
            if (paramMessageObject.isFromUser())
            {
              paramWebPage.add(Integer.valueOf(paramMessageObject.messageOwner.from_id));
              i = ((MessageObject)((ArrayList)localObject2).get(0)).type;
              j = 1;
              if (j >= ((ArrayList)localObject2).size()) {
                break label821;
              }
              paramMessageObject = (MessageObject)((ArrayList)localObject2).get(j);
              if (!paramMessageObject.isFromUser()) {
                break label803;
              }
            }
            for (paramMessageObject = Integer.valueOf(paramMessageObject.messageOwner.from_id);; paramMessageObject = Integer.valueOf(-paramMessageObject.messageOwner.to_id.channel_id))
            {
              if (!paramWebPage.contains(paramMessageObject)) {
                paramWebPage.add(paramMessageObject);
              }
              int k = i;
              if (((MessageObject)((ArrayList)localObject2).get(j)).type != i) {
                k = -1;
              }
              j += 1;
              i = k;
              break label687;
              paramWebPage.add(Integer.valueOf(-paramMessageObject.messageOwner.to_id.channel_id));
              break;
            }
            StringBuilder localStringBuilder = new StringBuilder();
            int j = 0;
            if (j < paramWebPage.size())
            {
              Integer localInteger = (Integer)paramWebPage.get(j);
              paramMessageObject = null;
              paramArrayList = null;
              if (localInteger.intValue() > 0)
              {
                paramArrayList = MessagesController.getInstance(this.currentAccount).getUser(localInteger);
                if ((paramArrayList != null) || (paramMessageObject != null)) {
                  break label920;
                }
              }
              for (;;)
              {
                j += 1;
                break;
                paramMessageObject = MessagesController.getInstance(this.currentAccount).getChat(Integer.valueOf(-localInteger.intValue()));
                break label880;
                if (paramWebPage.size() == 1)
                {
                  if (paramArrayList != null) {
                    localStringBuilder.append(UserObject.getUserName(paramArrayList));
                  } else {
                    localStringBuilder.append(paramMessageObject.title);
                  }
                }
                else
                {
                  if ((paramWebPage.size() != 2) && (localStringBuilder.length() != 0)) {
                    break label1068;
                  }
                  if (localStringBuilder.length() > 0) {
                    localStringBuilder.append(", ");
                  }
                  if (paramArrayList != null)
                  {
                    if (!TextUtils.isEmpty(paramArrayList.first_name)) {
                      localStringBuilder.append(paramArrayList.first_name);
                    } else if (!TextUtils.isEmpty(paramArrayList.last_name)) {
                      localStringBuilder.append(paramArrayList.last_name);
                    } else {
                      localStringBuilder.append(" ");
                    }
                  }
                  else {
                    localStringBuilder.append(paramMessageObject.title);
                  }
                }
              }
              localStringBuilder.append(" ");
              localStringBuilder.append(LocaleController.formatPluralString("AndOther", paramWebPage.size() - 1));
            }
            this.replyNameTextView.setText(localStringBuilder);
            if ((i == -1) || (i == 0) || (i == 10) || (i == 11))
            {
              if ((((ArrayList)localObject2).size() == 1) && (((MessageObject)((ArrayList)localObject2).get(0)).messageText != null))
              {
                paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
                if ((paramMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame))
                {
                  this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject.messageOwner.media.game.title, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
                  paramMessageObject = (MessageObject)localObject1;
                  continue;
                }
                paramArrayList = paramMessageObject.messageText.toString();
                paramMessageObject = paramArrayList;
                if (paramArrayList.length() > 150) {
                  paramMessageObject = paramArrayList.substring(0, 150);
                }
                paramMessageObject = paramMessageObject.replace('\n', ' ');
                this.replyObjectTextView.setText(Emoji.replaceEmoji(paramMessageObject, this.replyObjectTextView.getPaint().getFontMetricsInt(), AndroidUtilities.dp(14.0F), false));
                paramMessageObject = (MessageObject)localObject1;
                continue;
              }
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMessageCount", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 1)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedPhoto", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              if (((ArrayList)localObject2).size() != 1) {
                continue;
              }
              paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
              continue;
            }
            if (i == 4)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedLocation", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 3)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedVideo", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              if (((ArrayList)localObject2).size() != 1) {
                continue;
              }
              paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
              continue;
            }
            if (i == 12)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedContact", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 2)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedAudio", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 5)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedRound", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 14)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedMusic", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i == 13)
            {
              this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedSticker", ((ArrayList)localObject2).size()));
              paramMessageObject = (MessageObject)localObject1;
              continue;
            }
            if (i != 8)
            {
              paramMessageObject = (MessageObject)localObject1;
              if (i != 9) {
                continue;
              }
            }
            if (((ArrayList)localObject2).size() == 1)
            {
              if (i == 8)
              {
                this.replyObjectTextView.setText(LocaleController.getString("AttachGif", 2131493028));
                paramMessageObject = (MessageObject)localObject1;
                continue;
              }
              paramMessageObject = FileLoader.getDocumentFileName(((MessageObject)((ArrayList)localObject2).get(0)).getDocument());
              if (paramMessageObject.length() != 0) {
                this.replyObjectTextView.setText(paramMessageObject);
              }
              paramMessageObject = (MessageObject)((ArrayList)localObject2).get(0);
              continue;
            }
            this.replyObjectTextView.setText(LocaleController.formatPluralString("ForwardedFile", ((ArrayList)localObject2).size()));
            paramMessageObject = (MessageObject)localObject1;
            continue;
          }
          this.replyIconImageView.setImageResource(2131165521);
          if (!(paramWebPage instanceof TLRPC.TL_webPagePending)) {
            break label1776;
          }
          this.replyNameTextView.setText(LocaleController.getString("GettingLinkInfo", 2131493626));
          this.replyObjectTextView.setText(this.pendingLinkSearchString);
          paramMessageObject = (MessageObject)localObject1;
        }
      }
      if (paramWebPage.site_name != null)
      {
        this.replyNameTextView.setText(paramWebPage.site_name);
        if (paramWebPage.title == null) {
          break label1874;
        }
        this.replyObjectTextView.setText(paramWebPage.title);
      }
      for (;;)
      {
        this.chatActivityEnterView.setWebPage(paramWebPage, true);
        paramMessageObject = (MessageObject)localObject1;
        break;
        if (paramWebPage.title != null)
        {
          this.replyNameTextView.setText(paramWebPage.title);
          break label1796;
        }
        this.replyNameTextView.setText(LocaleController.getString("LinkPreview", 2131493757));
        break label1796;
        if (paramWebPage.description != null) {
          this.replyObjectTextView.setText(paramWebPage.description);
        } else if (paramWebPage.author != null) {
          this.replyObjectTextView.setText(paramWebPage.author);
        } else {
          this.replyObjectTextView.setText(paramWebPage.display_url);
        }
      }
      if (paramMessageObject.isRoundVideo()) {
        this.replyImageView.setRoundRadius(AndroidUtilities.dp(17.0F));
      }
      for (;;)
      {
        this.replyImageLocation = paramArrayList.location;
        this.replyImageView.setImage(this.replyImageLocation, "50_50", (Drawable)null);
        this.replyImageView.setVisibility(0);
        i = AndroidUtilities.dp(96.0F);
        ((FrameLayout.LayoutParams)localObject2).leftMargin = i;
        ((FrameLayout.LayoutParams)localObject1).leftMargin = i;
        break;
        this.replyImageView.setRoundRadius(0);
      }
    } while ((this.replyingMessageObject == null) && (this.forwardingMessages == null) && (this.foundWebPage == null));
    if ((this.replyingMessageObject != null) && ((this.replyingMessageObject.messageOwner.reply_markup instanceof TLRPC.TL_replyKeyboardForceReply))) {
      MessagesController.getMainSettings(this.currentAccount).edit().putInt("answered_" + this.dialog_id, this.replyingMessageObject.getId()).commit();
    }
    if (this.foundWebPage != null)
    {
      this.foundWebPage = null;
      paramMessageObject = this.chatActivityEnterView;
      if (!paramBoolean2) {}
      for (paramBoolean1 = true;; paramBoolean1 = false)
      {
        paramMessageObject.setWebPage(null, paramBoolean1);
        if ((paramWebPage == null) || ((this.replyingMessageObject == null) && (this.forwardingMessages == null))) {
          break;
        }
        showReplyPanel(true, this.replyingMessageObject, this.forwardingMessages, null, false);
        return;
      }
    }
    if (this.forwardingMessages != null) {
      forwardMessages(this.forwardingMessages, false);
    }
    this.chatActivityEnterView.setForceShowSendButton(false, false);
    this.chatActivityEnterView.hideTopView(false);
    this.chatActivityEnterView.setReplyingMessageObject(null);
    this.replyingMessageObject = null;
    this.forwardingMessages = null;
    this.replyImageLocation = null;
  }
  
  public class ChatActivityAdapter
    extends RecyclerView.Adapter
  {
    private int botInfoRow = -1;
    private boolean isBot;
    private int loadingDownRow;
    private int loadingUpRow;
    private Context mContext;
    private int messagesEndRow;
    private int messagesStartRow;
    private int rowCount;
    
    public ChatActivityAdapter(Context paramContext)
    {
      this.mContext = paramContext;
      if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.bot)) {}
      for (boolean bool = true;; bool = false)
      {
        this.isBot = bool;
        return;
      }
    }
    
    public int getItemCount()
    {
      return this.rowCount;
    }
    
    public long getItemId(int paramInt)
    {
      return -1L;
    }
    
    public int getItemViewType(int paramInt)
    {
      if ((paramInt >= this.messagesStartRow) && (paramInt < this.messagesEndRow)) {
        return ((MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow)).contentType;
      }
      if (paramInt == this.botInfoRow) {
        return 3;
      }
      return 4;
    }
    
    public void notifyDataSetChanged()
    {
      updateRows();
      try
      {
        super.notifyDataSetChanged();
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemChanged(int paramInt)
    {
      try
      {
        super.notifyItemChanged(paramInt);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemInserted(int paramInt)
    {
      updateRows();
      try
      {
        super.notifyItemInserted(paramInt);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemMoved(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemMoved(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemRangeChanged(int paramInt1, int paramInt2)
    {
      try
      {
        super.notifyItemRangeChanged(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemRangeInserted(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemRangeInserted(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemRangeRemoved(int paramInt1, int paramInt2)
    {
      updateRows();
      try
      {
        super.notifyItemRangeRemoved(paramInt1, paramInt2);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void notifyItemRemoved(int paramInt)
    {
      updateRows();
      try
      {
        super.notifyItemRemoved(paramInt);
        return;
      }
      catch (Exception localException)
      {
        FileLog.e(localException);
      }
    }
    
    public void onBindViewHolder(RecyclerView.ViewHolder paramViewHolder, int paramInt)
    {
      if (paramInt == this.botInfoRow)
      {
        localObject1 = (BotHelpCell)paramViewHolder.itemView;
        if (ChatActivity.this.botInfo.size() != 0)
        {
          paramViewHolder = ((TLRPC.BotInfo)ChatActivity.this.botInfo.get(ChatActivity.this.currentUser.id)).description;
          ((BotHelpCell)localObject1).setText(paramViewHolder);
        }
      }
      boolean bool1;
      do
      {
        return;
        paramViewHolder = null;
        break;
        if ((paramInt == this.loadingDownRow) || (paramInt == this.loadingUpRow))
        {
          paramViewHolder = (ChatLoadingCell)paramViewHolder.itemView;
          if (ChatActivity.this.loadsCount > 1) {}
          for (bool1 = true;; bool1 = false)
          {
            paramViewHolder.setProgressVisible(bool1);
            return;
          }
        }
      } while ((paramInt < this.messagesStartRow) || (paramInt >= this.messagesEndRow));
      Object localObject1 = (MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow);
      View localView = paramViewHolder.itemView;
      final ChatMessageCell localChatMessageCell;
      label204:
      boolean bool3;
      boolean bool2;
      Object localObject2;
      int i;
      label285:
      label318:
      int j;
      if ((localView instanceof ChatMessageCell))
      {
        localChatMessageCell = (ChatMessageCell)localView;
        if ((ChatActivity.this.currentChat != null) || (UserObject.isUserSelf(ChatActivity.this.currentUser)))
        {
          bool1 = true;
          localChatMessageCell.isChat = bool1;
          bool3 = false;
          bool2 = false;
          bool1 = false;
          MessageObject.GroupedMessages localGroupedMessages = ChatActivity.this.getValidGroupedMessage((MessageObject)localObject1);
          if (localGroupedMessages == null) {
            break label1030;
          }
          localObject2 = (MessageObject.GroupedMessagePosition)localGroupedMessages.positions.get(localObject1);
          if (localObject2 == null) {
            break label1021;
          }
          if ((((MessageObject.GroupedMessagePosition)localObject2).flags & 0x4) == 0) {
            break label1003;
          }
          i = localGroupedMessages.posArray.indexOf(localObject2) + paramInt + 1;
          bool2 = bool1;
          if ((((MessageObject.GroupedMessagePosition)localObject2).flags & 0x8) == 0) {
            break label1012;
          }
          paramInt = paramInt - localGroupedMessages.posArray.size() + localGroupedMessages.posArray.indexOf(localObject2);
          j = getItemViewType(paramInt);
          int k = getItemViewType(i);
          bool1 = bool3;
          if (!(((MessageObject)localObject1).messageOwner.reply_markup instanceof TLRPC.TL_replyInlineMarkup))
          {
            bool1 = bool3;
            if (j == paramViewHolder.getItemViewType())
            {
              localObject2 = (MessageObject)ChatActivity.this.messages.get(paramInt - this.messagesStartRow);
              if ((((MessageObject)localObject2).isOutOwner() != ((MessageObject)localObject1).isOutOwner()) || (Math.abs(((MessageObject)localObject2).messageOwner.date - ((MessageObject)localObject1).messageOwner.date) > 300)) {
                break label1047;
              }
              bool3 = true;
              label426:
              bool1 = bool3;
              if (bool3)
              {
                if (ChatActivity.this.currentChat == null) {
                  break label1059;
                }
                if (((MessageObject)localObject2).messageOwner.from_id != ((MessageObject)localObject1).messageOwner.from_id) {
                  break label1053;
                }
                bool1 = true;
              }
            }
          }
          label467:
          if (k == paramViewHolder.getItemViewType())
          {
            paramViewHolder = (MessageObject)ChatActivity.this.messages.get(i - this.messagesStartRow);
            if (((paramViewHolder.messageOwner.reply_markup instanceof TLRPC.TL_replyInlineMarkup)) || (paramViewHolder.isOutOwner() != ((MessageObject)localObject1).isOutOwner()) || (Math.abs(paramViewHolder.messageOwner.date - ((MessageObject)localObject1).messageOwner.date) > 300)) {
              break label1101;
            }
            bool3 = true;
            label549:
            bool2 = bool3;
            if (bool3)
            {
              if (ChatActivity.this.currentChat == null) {
                break label1113;
              }
              if (paramViewHolder.messageOwner.from_id != ((MessageObject)localObject1).messageOwner.from_id) {
                break label1107;
              }
              bool2 = true;
            }
          }
          label589:
          localChatMessageCell.setMessageObject((MessageObject)localObject1, localGroupedMessages, bool1, bool2);
          if (((localView instanceof ChatMessageCell)) && (DownloadController.getInstance(ChatActivity.this.currentAccount).canDownloadMedia((MessageObject)localObject1))) {
            ((ChatMessageCell)localView).downloadAudioIfNeed();
          }
          if ((ChatActivity.this.highlightMessageId == Integer.MAX_VALUE) || (((MessageObject)localObject1).getId() != ChatActivity.this.highlightMessageId)) {
            break label1154;
          }
          bool1 = true;
          label667:
          localChatMessageCell.setHighlighted(bool1);
          if ((ChatActivity.this.searchContainer == null) || (ChatActivity.this.searchContainer.getVisibility() != 0)) {
            break label1166;
          }
          paramViewHolder = DataQuery.getInstance(ChatActivity.this.currentAccount);
          paramInt = ((MessageObject)localObject1).getId();
          if (((MessageObject)localObject1).getDialogId() != ChatActivity.this.mergeDialogId) {
            break label1160;
          }
          bool1 = true;
          label733:
          if ((!paramViewHolder.isMessageFound(paramInt, bool1)) || (DataQuery.getInstance(ChatActivity.this.currentAccount).getLastSearchQuery() == null)) {
            break label1166;
          }
          localChatMessageCell.setHighlightedText(DataQuery.getInstance(ChatActivity.this.currentAccount).getLastSearchQuery());
          label777:
          paramInt = ChatActivity.this.animatingMessageObjects.indexOf(localObject1);
          if (paramInt != -1)
          {
            ChatActivity.this.animatingMessageObjects.remove(paramInt);
            localChatMessageCell.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
            {
              public boolean onPreDraw()
              {
                Object localObject1 = PipRoundVideoView.getInstance();
                if (localObject1 != null) {
                  ((PipRoundVideoView)localObject1).showTemporary(true);
                }
                localChatMessageCell.getViewTreeObserver().removeOnPreDrawListener(this);
                final Object localObject2 = localChatMessageCell.getPhotoImage();
                int i = ((ImageReceiver)localObject2).getImageWidth();
                localObject1 = ChatActivity.this.instantCameraView.getCameraRect();
                float f = i / ((org.telegram.ui.Components.Rect)localObject1).width;
                int[] arrayOfInt = new int[2];
                localChatMessageCell.setAlpha(0.0F);
                localChatMessageCell.getLocationOnScreen(arrayOfInt);
                arrayOfInt[0] += ((ImageReceiver)localObject2).getImageX();
                arrayOfInt[1] += ((ImageReceiver)localObject2).getImageY();
                localObject2 = ChatActivity.this.instantCameraView.getCameraContainer();
                ((View)localObject2).setPivotX(0.0F);
                ((View)localObject2).setPivotY(0.0F);
                AnimatorSet localAnimatorSet = new AnimatorSet();
                localAnimatorSet.playTogether(new Animator[] { ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(localObject2, "scaleX", new float[] { f }), ObjectAnimator.ofFloat(localObject2, "scaleY", new float[] { f }), ObjectAnimator.ofFloat(localObject2, "translationX", new float[] { arrayOfInt[0] - ((org.telegram.ui.Components.Rect)localObject1).x }), ObjectAnimator.ofFloat(localObject2, "translationY", new float[] { arrayOfInt[1] - ((org.telegram.ui.Components.Rect)localObject1).y }), ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView.getSwitchButtonView(), "alpha", new float[] { 0.0F }), ObjectAnimator.ofInt(ChatActivity.this.instantCameraView.getPaint(), "alpha", new int[] { 0 }), ObjectAnimator.ofFloat(ChatActivity.this.instantCameraView.getMuteImageView(), "alpha", new float[] { 0.0F }) });
                localAnimatorSet.setDuration(180L);
                localAnimatorSet.setInterpolator(new DecelerateInterpolator());
                localAnimatorSet.addListener(new AnimatorListenerAdapter()
                {
                  public void onAnimationEnd(Animator paramAnonymous2Animator)
                  {
                    paramAnonymous2Animator = new AnimatorSet();
                    paramAnonymous2Animator.playTogether(new Animator[] { ObjectAnimator.ofFloat(localObject2, "alpha", new float[] { 0.0F }), ObjectAnimator.ofFloat(ChatActivity.ChatActivityAdapter.4.this.val$messageCell, "alpha", new float[] { 1.0F }) });
                    paramAnonymous2Animator.setDuration(100L);
                    paramAnonymous2Animator.setInterpolator(new DecelerateInterpolator());
                    paramAnonymous2Animator.addListener(new AnimatorListenerAdapter()
                    {
                      public void onAnimationEnd(Animator paramAnonymous3Animator)
                      {
                        ChatActivity.this.instantCameraView.hideCamera(true);
                        ChatActivity.this.instantCameraView.setVisibility(4);
                      }
                    });
                    paramAnonymous2Animator.start();
                  }
                });
                localAnimatorSet.start();
                return true;
              }
            });
          }
          label825:
          if ((localObject1 == null) || (((MessageObject)localObject1).messageOwner == null) || (!((MessageObject)localObject1).messageOwner.media_unread) || (!((MessageObject)localObject1).messageOwner.mentioned)) {
            break label1248;
          }
          if ((!((MessageObject)localObject1).isVoice()) && (!((MessageObject)localObject1).isRoundVideo()))
          {
            ChatActivity.access$15110(ChatActivity.this);
            if (ChatActivity.this.newMentionsCount > 0) {
              break label1250;
            }
            ChatActivity.access$15102(ChatActivity.this, 0);
            ChatActivity.access$14602(ChatActivity.this, true);
            ChatActivity.this.showMentiondownButton(false, true);
            label921:
            paramViewHolder = MessagesController.getInstance(ChatActivity.this.currentAccount);
            i = ((MessageObject)localObject1).getId();
            if (!ChatObject.isChannel(ChatActivity.this.currentChat)) {
              break label1286;
            }
          }
        }
      }
      label1003:
      label1012:
      label1021:
      label1030:
      label1047:
      label1053:
      label1059:
      label1101:
      label1107:
      label1113:
      label1154:
      label1160:
      label1166:
      label1248:
      label1250:
      label1286:
      for (paramInt = ChatActivity.this.currentChat.id;; paramInt = 0)
      {
        paramViewHolder.markMentionMessageAsRead(i, paramInt, ChatActivity.this.dialog_id);
        ((MessageObject)localObject1).setContentIsRead();
        if (!(localView instanceof ChatMessageCell)) {
          break;
        }
        ((ChatMessageCell)localView).setHighlightedAnimated();
        return;
        bool1 = false;
        break label204;
        bool2 = true;
        i = -100;
        break label285;
        bool3 = true;
        paramInt = -100;
        break label318;
        i = -100;
        paramInt = -100;
        break label318;
        i = paramInt - 1;
        j = paramInt + 1;
        paramInt = i;
        i = j;
        break label318;
        bool3 = false;
        break label426;
        bool1 = false;
        break label467;
        bool1 = bool3;
        if (!UserObject.isUserSelf(ChatActivity.this.currentUser)) {
          break label467;
        }
        if (((MessageObject)localObject2).getFromId() == ((MessageObject)localObject1).getFromId()) {}
        for (bool1 = true;; bool1 = false) {
          break;
        }
        bool3 = false;
        break label549;
        bool2 = false;
        break label589;
        bool2 = bool3;
        if (!UserObject.isUserSelf(ChatActivity.this.currentUser)) {
          break label589;
        }
        if (paramViewHolder.getFromId() == ((MessageObject)localObject1).getFromId()) {}
        for (bool2 = true;; bool2 = false) {
          break;
        }
        bool1 = false;
        break label667;
        bool1 = false;
        break label733;
        localChatMessageCell.setHighlightedText(null);
        break label777;
        if ((localView instanceof ChatActionCell))
        {
          paramViewHolder = (ChatActionCell)localView;
          paramViewHolder.setMessageObject((MessageObject)localObject1);
          paramViewHolder.setAlpha(1.0F);
          break label825;
        }
        if (!(localView instanceof ChatUnreadCell)) {
          break label825;
        }
        ((ChatUnreadCell)localView).setText(LocaleController.getString("UnreadMessages", 2131494516));
        if (ChatActivity.this.createUnreadMessageAfterId == 0) {
          break label825;
        }
        ChatActivity.access$14302(ChatActivity.this, 0);
        break label825;
        break;
        ChatActivity.this.mentiondownButtonCounter.setText(String.format("%d", new Object[] { Integer.valueOf(ChatActivity.this.newMentionsCount) }));
        break label921;
      }
    }
    
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup paramViewGroup, int paramInt)
    {
      paramViewGroup = null;
      Object localObject;
      if (paramInt == 0) {
        if (!ChatActivity.this.chatMessageCellsCache.isEmpty())
        {
          localObject = (View)ChatActivity.this.chatMessageCellsCache.get(0);
          ChatActivity.this.chatMessageCellsCache.remove(0);
          ChatMessageCell localChatMessageCell = (ChatMessageCell)localObject;
          localChatMessageCell.setDelegate(new ChatMessageCell.ChatMessageCellDelegate()
          {
            public boolean canPerformActions()
            {
              return (ChatActivity.this.actionBar != null) && (!ChatActivity.this.actionBar.isActionModeShowed());
            }
            
            public void didLongPressed(ChatMessageCell paramAnonymousChatMessageCell)
            {
              ChatActivity.this.createMenu(paramAnonymousChatMessageCell, false, false);
            }
            
            public void didPressedBotButton(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.KeyboardButton paramAnonymousKeyboardButton)
            {
              if ((ChatActivity.this.getParentActivity() == null) || ((ChatActivity.this.bottomOverlayChat.getVisibility() == 0) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonSwitchInline)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonCallback)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonGame)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonUrl)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonBuy)))) {
                return;
              }
              ChatActivity.this.chatActivityEnterView.didPressedBotButton(paramAnonymousKeyboardButton, paramAnonymousChatMessageCell.getMessageObject(), paramAnonymousChatMessageCell.getMessageObject());
            }
            
            public void didPressedCancelSendButton(ChatMessageCell paramAnonymousChatMessageCell)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              if (paramAnonymousChatMessageCell.messageOwner.send_state != 0) {
                SendMessagesHelper.getInstance(ChatActivity.this.currentAccount).cancelSendingMessage(paramAnonymousChatMessageCell);
              }
            }
            
            public void didPressedChannelAvatar(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.Chat paramAnonymousChat, int paramAnonymousInt)
            {
              if (ChatActivity.this.actionBar.isActionModeShowed()) {
                ChatActivity.this.processRowSelect(paramAnonymousChatMessageCell, true);
              }
              Bundle localBundle;
              do
              {
                do
                {
                  return;
                } while ((paramAnonymousChat == null) || (paramAnonymousChat == ChatActivity.this.currentChat));
                localBundle = new Bundle();
                localBundle.putInt("chat_id", paramAnonymousChat.id);
                if (paramAnonymousInt != 0) {
                  localBundle.putInt("message_id", paramAnonymousInt);
                }
              } while (!MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat(localBundle, ChatActivity.this, paramAnonymousChatMessageCell.getMessageObject()));
              ChatActivity.this.presentFragment(new ChatActivity(localBundle), true);
            }
            
            public void didPressedImage(ChatMessageCell paramAnonymousChatMessageCell)
            {
              Object localObject3 = paramAnonymousChatMessageCell.getMessageObject();
              if (((MessageObject)localObject3).isSendError()) {
                ChatActivity.this.createMenu(paramAnonymousChatMessageCell, false, false);
              }
              Object localObject1;
              Object localObject2;
              label377:
              label381:
              int i;
              do
              {
                do
                {
                  for (;;)
                  {
                    return;
                    if (!((MessageObject)localObject3).isSending())
                    {
                      if (((MessageObject)localObject3).needDrawBluredPreview())
                      {
                        if (ChatActivity.this.sendSecretMessageRead((MessageObject)localObject3)) {
                          paramAnonymousChatMessageCell.invalidate();
                        }
                        SecretMediaViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                        SecretMediaViewer.getInstance().openMedia((MessageObject)localObject3, ChatActivity.this.photoViewerProvider);
                        return;
                      }
                      if (((MessageObject)localObject3).type == 13)
                      {
                        localObject1 = ChatActivity.this;
                        localObject2 = ChatActivity.this.getParentActivity();
                        ChatActivity localChatActivity = ChatActivity.this;
                        localObject3 = ((MessageObject)localObject3).getInputStickerSet();
                        if ((ChatActivity.this.bottomOverlayChat.getVisibility() != 0) && (ChatObject.canSendStickers(ChatActivity.this.currentChat))) {}
                        for (paramAnonymousChatMessageCell = ChatActivity.this.chatActivityEnterView;; paramAnonymousChatMessageCell = null)
                        {
                          ((ChatActivity)localObject1).showDialog(new StickersAlert((Context)localObject2, localChatActivity, (TLRPC.InputStickerSet)localObject3, null, paramAnonymousChatMessageCell));
                          return;
                        }
                      }
                      if ((!((MessageObject)localObject3).isVideo()) && (((MessageObject)localObject3).type != 1) && ((((MessageObject)localObject3).type != 0) || (((MessageObject)localObject3).isWebpageDocument())) && (!((MessageObject)localObject3).isGif())) {
                        break;
                      }
                      if (((MessageObject)localObject3).isVideo()) {
                        ChatActivity.this.sendSecretMessageRead((MessageObject)localObject3);
                      }
                      PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
                      paramAnonymousChatMessageCell = PhotoViewer.getInstance();
                      long l1;
                      if (((MessageObject)localObject3).type != 0)
                      {
                        l1 = ChatActivity.this.dialog_id;
                        if (((MessageObject)localObject3).type == 0) {
                          break label377;
                        }
                      }
                      for (long l2 = ChatActivity.this.mergeDialogId;; l2 = 0L)
                      {
                        if (!paramAnonymousChatMessageCell.openPhoto((MessageObject)localObject3, l1, l2, ChatActivity.this.photoViewerProvider)) {
                          break label381;
                        }
                        PhotoViewer.getInstance().setParentChatActivity(ChatActivity.this);
                        return;
                        l1 = 0L;
                        break;
                      }
                    }
                  }
                  if (((MessageObject)localObject3).type == 3)
                  {
                    ChatActivity.this.sendSecretMessageRead((MessageObject)localObject3);
                    localObject1 = null;
                    paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                    for (;;)
                    {
                      try
                      {
                        if (((MessageObject)localObject3).messageOwner.attachPath != null)
                        {
                          paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                          if (((MessageObject)localObject3).messageOwner.attachPath.length() != 0) {
                            paramAnonymousChatMessageCell = new File(((MessageObject)localObject3).messageOwner.attachPath);
                          }
                        }
                        if (paramAnonymousChatMessageCell != null)
                        {
                          localObject1 = paramAnonymousChatMessageCell;
                          if (paramAnonymousChatMessageCell.exists()) {}
                        }
                        else
                        {
                          localObject1 = FileLoader.getPathToMessage(((MessageObject)localObject3).messageOwner);
                        }
                        paramAnonymousChatMessageCell = new Intent("android.intent.action.VIEW");
                        if (Build.VERSION.SDK_INT >= 24)
                        {
                          paramAnonymousChatMessageCell.setFlags(1);
                          paramAnonymousChatMessageCell.setDataAndType(FileProvider.getUriForFile(ChatActivity.this.getParentActivity(), "org.telegram.messenger.provider", (File)localObject1), "video/mp4");
                          ChatActivity.this.getParentActivity().startActivityForResult(paramAnonymousChatMessageCell, 500);
                          return;
                        }
                      }
                      catch (Exception paramAnonymousChatMessageCell)
                      {
                        FileLog.e(paramAnonymousChatMessageCell);
                        ChatActivity.this.alertUserOpenError((MessageObject)localObject3);
                        return;
                      }
                      paramAnonymousChatMessageCell.setDataAndType(Uri.fromFile((File)localObject1), "video/mp4");
                    }
                  }
                  if (((MessageObject)localObject3).type != 4) {
                    break;
                  }
                } while (!AndroidUtilities.isGoogleMapsInstalled(ChatActivity.this));
                if (((MessageObject)localObject3).isLiveLocation())
                {
                  paramAnonymousChatMessageCell = new LocationActivity(2);
                  paramAnonymousChatMessageCell.setMessageObject((MessageObject)localObject3);
                  paramAnonymousChatMessageCell.setDelegate(ChatActivity.this);
                  ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                  return;
                }
                if (ChatActivity.this.currentEncryptedChat == null) {}
                for (i = 3;; i = 0)
                {
                  paramAnonymousChatMessageCell = new LocationActivity(i);
                  paramAnonymousChatMessageCell.setMessageObject((MessageObject)localObject3);
                  paramAnonymousChatMessageCell.setDelegate(ChatActivity.this);
                  ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                  return;
                }
              } while ((((MessageObject)localObject3).type != 9) && (((MessageObject)localObject3).type != 0));
              if (((MessageObject)localObject3).getDocumentName().toLowerCase().endsWith("attheme"))
              {
                localObject1 = null;
                paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                if (((MessageObject)localObject3).messageOwner.attachPath != null)
                {
                  paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                  if (((MessageObject)localObject3).messageOwner.attachPath.length() != 0)
                  {
                    localObject2 = new File(((MessageObject)localObject3).messageOwner.attachPath);
                    paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                    if (((File)localObject2).exists()) {
                      paramAnonymousChatMessageCell = (ChatMessageCell)localObject2;
                    }
                  }
                }
                localObject1 = paramAnonymousChatMessageCell;
                if (paramAnonymousChatMessageCell == null)
                {
                  localObject2 = FileLoader.getPathToMessage(((MessageObject)localObject3).messageOwner);
                  localObject1 = paramAnonymousChatMessageCell;
                  if (((File)localObject2).exists()) {
                    localObject1 = localObject2;
                  }
                }
                if (ChatActivity.this.chatLayoutManager != null)
                {
                  i = ChatActivity.this.chatLayoutManager.findFirstVisibleItemPosition();
                  if (i == 0) {
                    break label1015;
                  }
                  ChatActivity.access$9002(ChatActivity.this, i);
                  paramAnonymousChatMessageCell = (RecyclerListView.Holder)ChatActivity.this.chatListView.findViewHolderForAdapterPosition(ChatActivity.this.scrollToPositionOnRecreate);
                  if (paramAnonymousChatMessageCell == null) {
                    break label1000;
                  }
                  ChatActivity.access$9102(ChatActivity.this, ChatActivity.this.chatListView.getMeasuredHeight() - paramAnonymousChatMessageCell.itemView.getBottom() - ChatActivity.this.chatListView.getPaddingBottom());
                }
                for (;;)
                {
                  paramAnonymousChatMessageCell = Theme.applyThemeFile((File)localObject1, ((MessageObject)localObject3).getDocumentName(), true);
                  if (paramAnonymousChatMessageCell == null) {
                    break;
                  }
                  ChatActivity.this.presentFragment(new ThemePreviewActivity((File)localObject1, paramAnonymousChatMessageCell));
                  return;
                  label1000:
                  ChatActivity.access$9002(ChatActivity.this, -1);
                  continue;
                  label1015:
                  ChatActivity.access$9002(ChatActivity.this, -1);
                }
                ChatActivity.access$9002(ChatActivity.this, -1);
              }
              try
              {
                AndroidUtilities.openForView((MessageObject)localObject3, ChatActivity.this.getParentActivity());
                return;
              }
              catch (Exception paramAnonymousChatMessageCell)
              {
                FileLog.e(paramAnonymousChatMessageCell);
                ChatActivity.this.alertUserOpenError((MessageObject)localObject3);
              }
            }
            
            public void didPressedInstantButton(ChatMessageCell paramAnonymousChatMessageCell, int paramAnonymousInt)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              if (paramAnonymousInt == 0) {
                if ((paramAnonymousChatMessageCell.messageOwner.media != null) && (paramAnonymousChatMessageCell.messageOwner.media.webpage != null) && (paramAnonymousChatMessageCell.messageOwner.media.webpage.cached_page != null))
                {
                  ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                  ArticleViewer.getInstance().open(paramAnonymousChatMessageCell);
                }
              }
              while ((paramAnonymousChatMessageCell.messageOwner.media == null) || (paramAnonymousChatMessageCell.messageOwner.media.webpage == null)) {
                return;
              }
              Browser.openUrl(ChatActivity.this.getParentActivity(), paramAnonymousChatMessageCell.messageOwner.media.webpage.url);
            }
            
            public void didPressedOther(ChatMessageCell paramAnonymousChatMessageCell)
            {
              if (paramAnonymousChatMessageCell.getMessageObject().type == 16)
              {
                if (ChatActivity.this.currentUser != null) {
                  VoIPHelper.startCall(ChatActivity.this.currentUser, ChatActivity.this.getParentActivity(), MessagesController.getInstance(ChatActivity.this.currentAccount).getUserFull(ChatActivity.this.currentUser.id));
                }
                return;
              }
              ChatActivity.this.createMenu(paramAnonymousChatMessageCell, true, false, false);
            }
            
            public void didPressedReplyMessage(ChatMessageCell paramAnonymousChatMessageCell, int paramAnonymousInt)
            {
              paramAnonymousChatMessageCell = paramAnonymousChatMessageCell.getMessageObject();
              ChatActivity localChatActivity = ChatActivity.this;
              int j = paramAnonymousChatMessageCell.getId();
              if (paramAnonymousChatMessageCell.getDialogId() == ChatActivity.this.mergeDialogId) {}
              for (int i = 1;; i = 0)
              {
                localChatActivity.scrollToMessageId(paramAnonymousInt, j, true, i, false);
                return;
              }
            }
            
            public void didPressedShare(ChatMessageCell paramAnonymousChatMessageCell)
            {
              if (ChatActivity.this.getParentActivity() == null) {
                return;
              }
              if (ChatActivity.this.chatActivityEnterView != null) {
                ChatActivity.this.chatActivityEnterView.closeKeyboard();
              }
              Object localObject2 = paramAnonymousChatMessageCell.getMessageObject();
              if ((UserObject.isUserSelf(ChatActivity.this.currentUser)) && (((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer != null))
              {
                paramAnonymousChatMessageCell = new Bundle();
                if (((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.channel_id != 0) {
                  paramAnonymousChatMessageCell.putInt("chat_id", ((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.channel_id);
                }
                for (;;)
                {
                  paramAnonymousChatMessageCell.putInt("message_id", ((MessageObject)localObject2).messageOwner.fwd_from.saved_from_msg_id);
                  if (!MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat(paramAnonymousChatMessageCell, ChatActivity.this)) {
                    break;
                  }
                  ChatActivity.this.presentFragment(new ChatActivity(paramAnonymousChatMessageCell));
                  return;
                  if (((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.chat_id != 0) {
                    paramAnonymousChatMessageCell.putInt("chat_id", ((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.chat_id);
                  } else if (((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.user_id != 0) {
                    paramAnonymousChatMessageCell.putInt("user_id", ((MessageObject)localObject2).messageOwner.fwd_from.saved_from_peer.user_id);
                  }
                }
              }
              Object localObject1 = null;
              paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
              if (((MessageObject)localObject2).getGroupId() != 0L)
              {
                MessageObject.GroupedMessages localGroupedMessages = (MessageObject.GroupedMessages)ChatActivity.this.groupedMessagesMap.get(((MessageObject)localObject2).getGroupId());
                paramAnonymousChatMessageCell = (ChatMessageCell)localObject1;
                if (localGroupedMessages != null) {
                  paramAnonymousChatMessageCell = localGroupedMessages.messages;
                }
              }
              localObject1 = paramAnonymousChatMessageCell;
              if (paramAnonymousChatMessageCell == null)
              {
                localObject1 = new ArrayList();
                ((ArrayList)localObject1).add(localObject2);
              }
              paramAnonymousChatMessageCell = ChatActivity.this;
              localObject2 = ChatActivity.ChatActivityAdapter.this.mContext;
              if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (!ChatActivity.this.currentChat.megagroup) && (ChatActivity.this.currentChat.username != null) && (ChatActivity.this.currentChat.username.length() > 0)) {}
              for (boolean bool = true;; bool = false)
              {
                paramAnonymousChatMessageCell.showDialog(new ShareAlert((Context)localObject2, (ArrayList)localObject1, null, bool, null, false));
                return;
              }
            }
            
            public void didPressedUrl(MessageObject paramAnonymousMessageObject, CharacterStyle paramAnonymousCharacterStyle, boolean paramAnonymousBoolean)
            {
              if (paramAnonymousCharacterStyle == null) {}
              do
              {
                do
                {
                  do
                  {
                    return;
                    if ((paramAnonymousCharacterStyle instanceof URLSpanMono))
                    {
                      ((URLSpanMono)paramAnonymousCharacterStyle).copyToClipboard();
                      Toast.makeText(ChatActivity.this.getParentActivity(), LocaleController.getString("TextCopied", 2131494480), 0).show();
                      return;
                    }
                    if (!(paramAnonymousCharacterStyle instanceof URLSpanUserMention)) {
                      break;
                    }
                    paramAnonymousMessageObject = MessagesController.getInstance(ChatActivity.this.currentAccount).getUser(Utilities.parseInt(((URLSpanUserMention)paramAnonymousCharacterStyle).getURL()));
                  } while (paramAnonymousMessageObject == null);
                  MessagesController.openChatOrProfileWith(paramAnonymousMessageObject, null, ChatActivity.this, 0, false);
                  return;
                  if (!(paramAnonymousCharacterStyle instanceof URLSpanNoUnderline)) {
                    break;
                  }
                  paramAnonymousCharacterStyle = ((URLSpanNoUnderline)paramAnonymousCharacterStyle).getURL();
                  if (paramAnonymousCharacterStyle.startsWith("@"))
                  {
                    MessagesController.getInstance(ChatActivity.this.currentAccount).openByUserName(paramAnonymousCharacterStyle.substring(1), ChatActivity.this, 0);
                    return;
                  }
                  if ((paramAnonymousCharacterStyle.startsWith("#")) || (paramAnonymousCharacterStyle.startsWith("$")))
                  {
                    if (ChatObject.isChannel(ChatActivity.this.currentChat))
                    {
                      ChatActivity.this.openSearchWithText(paramAnonymousCharacterStyle);
                      return;
                    }
                    paramAnonymousMessageObject = new DialogsActivity(null);
                    paramAnonymousMessageObject.setSearchString(paramAnonymousCharacterStyle);
                    ChatActivity.this.presentFragment(paramAnonymousMessageObject);
                    return;
                  }
                } while ((!paramAnonymousCharacterStyle.startsWith("/")) || (!URLSpanBotCommand.enabled));
                final Object localObject = ChatActivity.this.chatActivityEnterView;
                if ((ChatActivity.this.currentChat != null) && (ChatActivity.this.currentChat.megagroup)) {}
                for (boolean bool = true;; bool = false)
                {
                  ((ChatActivityEnterView)localObject).setCommand(paramAnonymousMessageObject, paramAnonymousCharacterStyle, paramAnonymousBoolean, bool);
                  if ((paramAnonymousBoolean) || (ChatActivity.this.chatActivityEnterView.getFieldText() != null)) {
                    break;
                  }
                  ChatActivity.this.showReplyPanel(false, null, null, null, false);
                  return;
                }
                localObject = ((URLSpan)paramAnonymousCharacterStyle).getURL();
                String str;
                if (paramAnonymousBoolean)
                {
                  paramAnonymousMessageObject = new BottomSheet.Builder(ChatActivity.this.getParentActivity());
                  paramAnonymousMessageObject.setTitle((CharSequence)localObject);
                  paramAnonymousCharacterStyle = LocaleController.getString("Open", 2131494040);
                  str = LocaleController.getString("Copy", 2131493303);
                  localObject = new DialogInterface.OnClickListener()
                  {
                    public void onClick(DialogInterface paramAnonymous2DialogInterface, int paramAnonymous2Int)
                    {
                      boolean bool = true;
                      if (paramAnonymous2Int == 0)
                      {
                        paramAnonymous2DialogInterface = ChatActivity.this.getParentActivity();
                        str = localObject;
                        if (ChatActivity.this.inlineReturn == 0L) {
                          Browser.openUrl(paramAnonymous2DialogInterface, str, bool);
                        }
                      }
                      while (paramAnonymous2Int != 1) {
                        for (;;)
                        {
                          return;
                          bool = false;
                        }
                      }
                      String str = localObject;
                      if (str.startsWith("mailto:")) {
                        paramAnonymous2DialogInterface = str.substring(7);
                      }
                      for (;;)
                      {
                        AndroidUtilities.addToClipboard(paramAnonymous2DialogInterface);
                        return;
                        paramAnonymous2DialogInterface = str;
                        if (str.startsWith("tel:")) {
                          paramAnonymous2DialogInterface = str.substring(4);
                        }
                      }
                    }
                  };
                  paramAnonymousMessageObject.setItems(new CharSequence[] { paramAnonymousCharacterStyle, str }, (DialogInterface.OnClickListener)localObject);
                  ChatActivity.this.showDialog(paramAnonymousMessageObject.create());
                  return;
                }
                if ((paramAnonymousCharacterStyle instanceof URLSpanReplacement))
                {
                  ChatActivity.this.showOpenUrlAlert(((URLSpanReplacement)paramAnonymousCharacterStyle).getURL(), true);
                  return;
                }
                if ((paramAnonymousCharacterStyle instanceof URLSpan))
                {
                  if (((paramAnonymousMessageObject.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage)) && (paramAnonymousMessageObject.messageOwner.media.webpage != null) && (paramAnonymousMessageObject.messageOwner.media.webpage.cached_page != null))
                  {
                    paramAnonymousCharacterStyle = ((String)localObject).toLowerCase();
                    str = paramAnonymousMessageObject.messageOwner.media.webpage.url.toLowerCase();
                    if (((paramAnonymousCharacterStyle.contains("telegra.ph")) || (paramAnonymousCharacterStyle.contains("t.me/iv"))) && ((paramAnonymousCharacterStyle.contains(str)) || (str.contains(paramAnonymousCharacterStyle))))
                    {
                      ArticleViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity(), ChatActivity.this);
                      ArticleViewer.getInstance().open(paramAnonymousMessageObject);
                      return;
                    }
                  }
                  paramAnonymousMessageObject = ChatActivity.this.getParentActivity();
                  if (ChatActivity.this.inlineReturn == 0L) {}
                  for (paramAnonymousBoolean = true;; paramAnonymousBoolean = false)
                  {
                    Browser.openUrl(paramAnonymousMessageObject, (String)localObject, paramAnonymousBoolean);
                    return;
                  }
                }
              } while (!(paramAnonymousCharacterStyle instanceof ClickableSpan));
              ((ClickableSpan)paramAnonymousCharacterStyle).onClick(ChatActivity.this.fragmentView);
            }
            
            public void didPressedUserAvatar(ChatMessageCell paramAnonymousChatMessageCell, TLRPC.User paramAnonymousUser)
            {
              boolean bool = true;
              if (ChatActivity.this.actionBar.isActionModeShowed()) {
                ChatActivity.this.processRowSelect(paramAnonymousChatMessageCell, true);
              }
              while ((paramAnonymousUser == null) || (paramAnonymousUser.id == UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId())) {
                return;
              }
              paramAnonymousChatMessageCell = new Bundle();
              paramAnonymousChatMessageCell.putInt("user_id", paramAnonymousUser.id);
              paramAnonymousChatMessageCell = new ProfileActivity(paramAnonymousChatMessageCell);
              if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.id == paramAnonymousUser.id)) {}
              for (;;)
              {
                paramAnonymousChatMessageCell.setPlayProfileAnimation(bool);
                ChatActivity.this.presentFragment(paramAnonymousChatMessageCell);
                return;
                bool = false;
              }
            }
            
            public void didPressedViaBot(ChatMessageCell paramAnonymousChatMessageCell, String paramAnonymousString)
            {
              if (((ChatActivity.this.bottomOverlayChat != null) && (ChatActivity.this.bottomOverlayChat.getVisibility() == 0)) || ((ChatActivity.this.bottomOverlay != null) && (ChatActivity.this.bottomOverlay.getVisibility() == 0))) {}
              while ((ChatActivity.this.chatActivityEnterView == null) || (paramAnonymousString == null) || (paramAnonymousString.length() <= 0)) {
                return;
              }
              ChatActivity.this.chatActivityEnterView.setFieldText("@" + paramAnonymousString + " ");
              ChatActivity.this.chatActivityEnterView.openKeyboard();
            }
            
            public boolean isChatAdminCell(int paramAnonymousInt)
            {
              if ((ChatObject.isChannel(ChatActivity.this.currentChat)) && (ChatActivity.this.currentChat.megagroup)) {
                return MessagesController.getInstance(ChatActivity.this.currentAccount).isChannelAdmin(ChatActivity.this.currentChat.id, paramAnonymousInt);
              }
              return false;
            }
            
            public void needOpenWebView(String paramAnonymousString1, String paramAnonymousString2, String paramAnonymousString3, String paramAnonymousString4, int paramAnonymousInt1, int paramAnonymousInt2)
            {
              EmbedBottomSheet.show(ChatActivity.ChatActivityAdapter.this.mContext, paramAnonymousString2, paramAnonymousString3, paramAnonymousString4, paramAnonymousString1, paramAnonymousInt1, paramAnonymousInt2);
            }
            
            public boolean needPlayMessage(MessageObject paramAnonymousMessageObject)
            {
              if ((paramAnonymousMessageObject.isVoice()) || (paramAnonymousMessageObject.isRoundVideo()))
              {
                boolean bool = MediaController.getInstance().playMessage(paramAnonymousMessageObject);
                MediaController localMediaController = MediaController.getInstance();
                if (bool) {}
                for (paramAnonymousMessageObject = ChatActivity.this.createVoiceMessagesPlaylist(paramAnonymousMessageObject, false);; paramAnonymousMessageObject = null)
                {
                  localMediaController.setVoiceMessagesPlaylist(paramAnonymousMessageObject, false);
                  return bool;
                }
              }
              if (paramAnonymousMessageObject.isMusic()) {
                return MediaController.getInstance().setPlaylist(ChatActivity.this.messages, paramAnonymousMessageObject);
              }
              return false;
            }
          });
          paramViewGroup = (ViewGroup)localObject;
          if (ChatActivity.this.currentEncryptedChat == null)
          {
            localChatMessageCell.setAllowAssistant(true);
            paramViewGroup = (ViewGroup)localObject;
          }
        }
      }
      for (;;)
      {
        paramViewGroup.setLayoutParams(new RecyclerView.LayoutParams(-1, -2));
        return new RecyclerListView.Holder(paramViewGroup);
        localObject = new ChatMessageCell(this.mContext);
        break;
        if (paramInt == 1)
        {
          paramViewGroup = new ChatActionCell(this.mContext);
          ((ChatActionCell)paramViewGroup).setDelegate(new ChatActionCell.ChatActionCellDelegate()
          {
            public void didClickedImage(ChatActionCell paramAnonymousChatActionCell)
            {
              paramAnonymousChatActionCell = paramAnonymousChatActionCell.getMessageObject();
              PhotoViewer.getInstance().setParentActivity(ChatActivity.this.getParentActivity());
              TLRPC.PhotoSize localPhotoSize = FileLoader.getClosestPhotoSizeWithSize(paramAnonymousChatActionCell.photoThumbs, 640);
              if (localPhotoSize != null)
              {
                PhotoViewer.getInstance().openPhoto(localPhotoSize.location, ChatActivity.this.photoViewerProvider);
                return;
              }
              PhotoViewer.getInstance().openPhoto(paramAnonymousChatActionCell, 0L, 0L, ChatActivity.this.photoViewerProvider);
            }
            
            public void didLongPressed(ChatActionCell paramAnonymousChatActionCell)
            {
              ChatActivity.this.createMenu(paramAnonymousChatActionCell, false, false);
            }
            
            public void didPressedBotButton(MessageObject paramAnonymousMessageObject, TLRPC.KeyboardButton paramAnonymousKeyboardButton)
            {
              if ((ChatActivity.this.getParentActivity() == null) || ((ChatActivity.this.bottomOverlayChat.getVisibility() == 0) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonSwitchInline)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonCallback)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonGame)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonUrl)) && (!(paramAnonymousKeyboardButton instanceof TLRPC.TL_keyboardButtonBuy)))) {
                return;
              }
              ChatActivity.this.chatActivityEnterView.didPressedBotButton(paramAnonymousKeyboardButton, paramAnonymousMessageObject, paramAnonymousMessageObject);
            }
            
            public void didPressedReplyMessage(ChatActionCell paramAnonymousChatActionCell, int paramAnonymousInt)
            {
              paramAnonymousChatActionCell = paramAnonymousChatActionCell.getMessageObject();
              ChatActivity localChatActivity = ChatActivity.this;
              int j = paramAnonymousChatActionCell.getId();
              if (paramAnonymousChatActionCell.getDialogId() == ChatActivity.this.mergeDialogId) {}
              for (int i = 1;; i = 0)
              {
                localChatActivity.scrollToMessageId(paramAnonymousInt, j, true, i, false);
                return;
              }
            }
            
            public void needOpenUserProfile(int paramAnonymousInt)
            {
              boolean bool = true;
              if (paramAnonymousInt < 0)
              {
                localObject = new Bundle();
                ((Bundle)localObject).putInt("chat_id", -paramAnonymousInt);
                if (MessagesController.getInstance(ChatActivity.this.currentAccount).checkCanOpenChat((Bundle)localObject, ChatActivity.this)) {
                  ChatActivity.this.presentFragment(new ChatActivity((Bundle)localObject), true);
                }
              }
              while (paramAnonymousInt == UserConfig.getInstance(ChatActivity.this.currentAccount).getClientUserId()) {
                return;
              }
              Object localObject = new Bundle();
              ((Bundle)localObject).putInt("user_id", paramAnonymousInt);
              if ((ChatActivity.this.currentEncryptedChat != null) && (paramAnonymousInt == ChatActivity.this.currentUser.id)) {
                ((Bundle)localObject).putLong("dialog_id", ChatActivity.this.dialog_id);
              }
              localObject = new ProfileActivity((Bundle)localObject);
              if ((ChatActivity.this.currentUser != null) && (ChatActivity.this.currentUser.id == paramAnonymousInt)) {}
              for (;;)
              {
                ((ProfileActivity)localObject).setPlayProfileAnimation(bool);
                ChatActivity.this.presentFragment((BaseFragment)localObject);
                return;
                bool = false;
              }
            }
          });
        }
        else if (paramInt == 2)
        {
          paramViewGroup = new ChatUnreadCell(this.mContext);
        }
        else if (paramInt == 3)
        {
          paramViewGroup = new BotHelpCell(this.mContext);
          ((BotHelpCell)paramViewGroup).setDelegate(new BotHelpCell.BotHelpCellDelegate()
          {
            public void didPressUrl(String paramAnonymousString)
            {
              if (paramAnonymousString.startsWith("@")) {
                MessagesController.getInstance(ChatActivity.this.currentAccount).openByUserName(paramAnonymousString.substring(1), ChatActivity.this, 0);
              }
              do
              {
                do
                {
                  return;
                  if ((paramAnonymousString.startsWith("#")) || (paramAnonymousString.startsWith("$")))
                  {
                    DialogsActivity localDialogsActivity = new DialogsActivity(null);
                    localDialogsActivity.setSearchString(paramAnonymousString);
                    ChatActivity.this.presentFragment(localDialogsActivity);
                    return;
                  }
                } while (!paramAnonymousString.startsWith("/"));
                ChatActivity.this.chatActivityEnterView.setCommand(null, paramAnonymousString, false, false);
              } while (ChatActivity.this.chatActivityEnterView.getFieldText() != null);
              ChatActivity.this.showReplyPanel(false, null, null, null, false);
            }
          });
        }
        else if (paramInt == 4)
        {
          paramViewGroup = new ChatLoadingCell(this.mContext);
        }
      }
    }
    
    public void onViewAttachedToWindow(RecyclerView.ViewHolder paramViewHolder)
    {
      boolean bool3 = true;
      final ChatMessageCell localChatMessageCell;
      int k;
      int j;
      int i;
      label88:
      label128:
      label136:
      label143:
      boolean bool2;
      if ((paramViewHolder.itemView instanceof ChatMessageCell))
      {
        localChatMessageCell = (ChatMessageCell)paramViewHolder.itemView;
        MessageObject localMessageObject = localChatMessageCell.getMessageObject();
        k = 0;
        j = 0;
        i = 0;
        if (!ChatActivity.this.actionBar.isActionModeShowed()) {
          break label245;
        }
        if (ChatActivity.this.chatActivityEnterView == null) {
          break label224;
        }
        paramViewHolder = ChatActivity.this.chatActivityEnterView.getEditingMessageObject();
        if (localMessageObject.getDialogId() != ChatActivity.this.dialog_id) {
          break label229;
        }
        i = 0;
        if ((paramViewHolder != localMessageObject) && (ChatActivity.this.selectedMessagesIds[i].indexOfKey(localMessageObject.getId()) < 0)) {
          break label234;
        }
        ChatActivity.this.setCellSelectionBackground(localMessageObject, localChatMessageCell, i);
        i = 1;
        k = 1;
        j = i;
        i = k;
        if (i != 0) {
          break label257;
        }
        bool1 = true;
        if ((i == 0) || (j == 0)) {
          break label263;
        }
        bool2 = true;
        label154:
        localChatMessageCell.setCheckPressed(bool1, bool2);
        localChatMessageCell.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener()
        {
          public boolean onPreDraw()
          {
            localChatMessageCell.getViewTreeObserver().removeOnPreDrawListener(this);
            int m = ChatActivity.this.chatListView.getMeasuredHeight();
            int i = localChatMessageCell.getTop();
            localChatMessageCell.getBottom();
            if (i >= 0) {}
            for (i = 0;; i = -i)
            {
              int k = localChatMessageCell.getMeasuredHeight();
              int j = k;
              if (k > m) {
                j = i + m;
              }
              localChatMessageCell.setVisiblePart(i, j - i);
              return true;
            }
          }
        });
        if ((ChatActivity.this.highlightMessageId == Integer.MAX_VALUE) || (localChatMessageCell.getMessageObject().getId() != ChatActivity.this.highlightMessageId)) {
          break label269;
        }
      }
      label224:
      label229:
      label234:
      label245:
      label257:
      label263:
      label269:
      for (boolean bool1 = bool3;; bool1 = false)
      {
        localChatMessageCell.setHighlighted(bool1);
        return;
        paramViewHolder = null;
        break;
        i = 1;
        break label88;
        localChatMessageCell.setBackgroundDrawable(null);
        i = j;
        break label128;
        localChatMessageCell.setBackgroundDrawable(null);
        j = k;
        break label136;
        bool1 = false;
        break label143;
        bool2 = false;
        break label154;
      }
    }
    
    public void updateRowAtPosition(int paramInt)
    {
      if (ChatActivity.this.chatLayoutManager == null) {}
      int i;
      do
      {
        return;
        j = -1;
        i = j;
        if (!ChatActivity.this.wasManualScroll)
        {
          i = j;
          if (ChatActivity.this.unreadMessageObject != null)
          {
            k = ChatActivity.this.messages.indexOf(ChatActivity.this.unreadMessageObject);
            i = j;
            if (k >= 0) {
              i = this.messagesStartRow + k;
            }
          }
        }
        notifyItemChanged(paramInt);
      } while (i == -1);
      paramInt = ChatActivity.this.chatListView.getMeasuredHeight();
      int j = ChatActivity.this.chatListView.getPaddingBottom();
      int k = ChatActivity.this.chatListView.getPaddingTop();
      int m = AndroidUtilities.dp(29.0F);
      ChatActivity.this.chatLayoutManager.scrollToPositionWithOffset(i, paramInt - j - k - m);
    }
    
    public void updateRowWithMessageObject(MessageObject paramMessageObject)
    {
      int i = ChatActivity.this.messages.indexOf(paramMessageObject);
      if (i == -1) {
        return;
      }
      updateRowAtPosition(this.messagesStartRow + i);
    }
    
    public void updateRows()
    {
      this.rowCount = 0;
      int i;
      if (!ChatActivity.this.messages.isEmpty()) {
        if ((ChatActivity.this.forwardEndReached[0] == 0) || ((ChatActivity.this.mergeDialogId != 0L) && (ChatActivity.this.forwardEndReached[1] == 0)))
        {
          i = this.rowCount;
          this.rowCount = (i + 1);
          this.loadingDownRow = i;
          this.messagesStartRow = this.rowCount;
          this.rowCount += ChatActivity.this.messages.size();
          this.messagesEndRow = this.rowCount;
          if ((ChatActivity.this.endReached[0] != 0) && ((ChatActivity.this.mergeDialogId == 0L) || (ChatActivity.this.endReached[1] != 0))) {
            break label208;
          }
          i = this.rowCount;
          this.rowCount = (i + 1);
          this.loadingUpRow = i;
        }
      }
      for (;;)
      {
        if ((ChatActivity.this.currentUser == null) || (!ChatActivity.this.currentUser.bot)) {
          break label239;
        }
        i = this.rowCount;
        this.rowCount = (i + 1);
        this.botInfoRow = i;
        return;
        this.loadingDownRow = -1;
        break;
        label208:
        this.loadingUpRow = -1;
        continue;
        this.loadingUpRow = -1;
        this.loadingDownRow = -1;
        this.messagesStartRow = -1;
        this.messagesEndRow = -1;
      }
      label239:
      this.botInfoRow = -1;
    }
  }
}


/* Location:              /test_eitaa/dex2jar/telegram-dex2jar.jar!/org/telegram/ui/ChatActivity.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */